!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$(riscv_gen_srcs)	build/riscv.mk	/^$(riscv_gen_srcs): %.cc: insns\/%.h insn_template.cc$/;"	t
$(riscv_gen_srcs)	riscv/riscv.mk.in	/^$(riscv_gen_srcs): %.cc: insns\/%.h insn_template.cc$/;"	t
%	Makefile.in	/^% : %,v$/;"	t
%	Makefile.in	/^% : RCS\/%$/;"	t
%	Makefile.in	/^% : RCS\/%,v$/;"	t
%	Makefile.in	/^% : SCCS\/s.%$/;"	t
%	Makefile.in	/^% : s.%$/;"	t
%	build/Makefile	/^% : %,v$/;"	t
%	build/Makefile	/^% : RCS\/%$/;"	t
%	build/Makefile	/^% : RCS\/%,v$/;"	t
%	build/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/Makefile	/^% : s.%$/;"	t
%.cc	build/riscv.mk	/^$(riscv_gen_srcs): %.cc: insns\/%.h insn_template.cc$/;"	t
%.cc	riscv/riscv.mk.in	/^$(riscv_gen_srcs): %.cc: insns\/%.h insn_template.cc$/;"	t
%.h	debug_rom/Makefile	/^%.h:	%.raw$/;"	t
%.out	Makefile.in	/^%.out: % all$/;"	t
%.out	build/Makefile	/^%.out: % all$/;"	t
%.raw	debug_rom/Makefile	/^%.raw:	%$/;"	t
-g	build/config.status	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	configure	/^  alias -g '${1+"$@"}'='"$@"'$/;"	a
-g	configure	/^  alias -g '\\${1+\\"\\$@\\"}'='\\"\\$@\\"'$/;"	a
.text	debug_rom/link.ld	/^    .text :$/;"	S
.whereto	debug_rom/link.ld	/^    .whereto 0x300 :$/;"	S
ACTION_DEBUG_EXCEPTION	riscv/processor.h	/^  ACTION_DEBUG_EXCEPTION = MCONTROL_ACTION_DEBUG_EXCEPTION,$/;"	e	enum:__anon2b80edf10203
ACTION_DEBUG_MODE	riscv/processor.h	/^  ACTION_DEBUG_MODE = MCONTROL_ACTION_DEBUG_MODE,$/;"	e	enum:__anon2b80edf10203
ACTION_TRACE_EMIT	riscv/processor.h	/^  ACTION_TRACE_EMIT = MCONTROL_ACTION_TRACE_EMIT$/;"	e	enum:__anon2b80edf10203
ACTION_TRACE_START	riscv/processor.h	/^  ACTION_TRACE_START = MCONTROL_ACTION_TRACE_START,$/;"	e	enum:__anon2b80edf10203
ACTION_TRACE_STOP	riscv/processor.h	/^  ACTION_TRACE_STOP = MCONTROL_ACTION_TRACE_STOP,$/;"	e	enum:__anon2b80edf10203
AC_ACCESS_MEMORY	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY /;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMPOSTINCREMENT /;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMPOSTINCREMENT_LENGTH /;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMPOSTINCREMENT_OFFSET /;"	d
AC_ACCESS_MEMORY_AAMSIZE	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMSIZE /;"	d
AC_ACCESS_MEMORY_AAMSIZE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMSIZE_LENGTH /;"	d
AC_ACCESS_MEMORY_AAMSIZE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMSIZE_OFFSET /;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMVIRTUAL /;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMVIRTUAL_LENGTH /;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_AAMVIRTUAL_OFFSET /;"	d
AC_ACCESS_MEMORY_CMDTYPE	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_CMDTYPE /;"	d
AC_ACCESS_MEMORY_CMDTYPE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_CMDTYPE_LENGTH /;"	d
AC_ACCESS_MEMORY_CMDTYPE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_CMDTYPE_OFFSET /;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_TARGET_SPECIFIC /;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_TARGET_SPECIFIC_LENGTH /;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_TARGET_SPECIFIC_OFFSET /;"	d
AC_ACCESS_MEMORY_WRITE	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_WRITE /;"	d
AC_ACCESS_MEMORY_WRITE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_WRITE_LENGTH /;"	d
AC_ACCESS_MEMORY_WRITE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_MEMORY_WRITE_OFFSET /;"	d
AC_ACCESS_REGISTER	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER /;"	d
AC_ACCESS_REGISTER	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER /;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARPOSTINCREMENT /;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARPOSTINCREMENT_LENGTH /;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARPOSTINCREMENT_OFFSET /;"	d
AC_ACCESS_REGISTER_AARSIZE	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARSIZE /;"	d
AC_ACCESS_REGISTER_AARSIZE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARSIZE_LENGTH /;"	d
AC_ACCESS_REGISTER_AARSIZE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_AARSIZE_OFFSET /;"	d
AC_ACCESS_REGISTER_CMDTYPE	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE /;"	d
AC_ACCESS_REGISTER_CMDTYPE	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE /;"	d
AC_ACCESS_REGISTER_CMDTYPE_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE_LENGTH /;"	d
AC_ACCESS_REGISTER_CMDTYPE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE_LENGTH /;"	d
AC_ACCESS_REGISTER_CMDTYPE_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE_OFFSET /;"	d
AC_ACCESS_REGISTER_CMDTYPE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_CMDTYPE_OFFSET /;"	d
AC_ACCESS_REGISTER_POSTEXEC	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC /;"	d
AC_ACCESS_REGISTER_POSTEXEC	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC /;"	d
AC_ACCESS_REGISTER_POSTEXEC_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC_LENGTH /;"	d
AC_ACCESS_REGISTER_POSTEXEC_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC_LENGTH /;"	d
AC_ACCESS_REGISTER_POSTEXEC_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC_OFFSET /;"	d
AC_ACCESS_REGISTER_POSTEXEC_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_POSTEXEC_OFFSET /;"	d
AC_ACCESS_REGISTER_REGNO	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO /;"	d
AC_ACCESS_REGISTER_REGNO	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO /;"	d
AC_ACCESS_REGISTER_REGNO_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO_LENGTH /;"	d
AC_ACCESS_REGISTER_REGNO_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO_LENGTH /;"	d
AC_ACCESS_REGISTER_REGNO_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO_OFFSET /;"	d
AC_ACCESS_REGISTER_REGNO_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_REGNO_OFFSET /;"	d
AC_ACCESS_REGISTER_SIZE	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_SIZE /;"	d
AC_ACCESS_REGISTER_SIZE_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_SIZE_LENGTH /;"	d
AC_ACCESS_REGISTER_SIZE_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_SIZE_OFFSET /;"	d
AC_ACCESS_REGISTER_TRANSFER	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER /;"	d
AC_ACCESS_REGISTER_TRANSFER	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER /;"	d
AC_ACCESS_REGISTER_TRANSFER_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER_LENGTH /;"	d
AC_ACCESS_REGISTER_TRANSFER_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER_LENGTH /;"	d
AC_ACCESS_REGISTER_TRANSFER_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER_OFFSET /;"	d
AC_ACCESS_REGISTER_TRANSFER_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_TRANSFER_OFFSET /;"	d
AC_ACCESS_REGISTER_WRITE	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE /;"	d
AC_ACCESS_REGISTER_WRITE	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE /;"	d
AC_ACCESS_REGISTER_WRITE_LENGTH	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE_LENGTH /;"	d
AC_ACCESS_REGISTER_WRITE_LENGTH	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE_LENGTH /;"	d
AC_ACCESS_REGISTER_WRITE_OFFSET	fesvr/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE_OFFSET /;"	d
AC_ACCESS_REGISTER_WRITE_OFFSET	riscv/debug_defines.h	/^#define AC_ACCESS_REGISTER_WRITE_OFFSET /;"	d
AC_AR_REGNO	fesvr/dtm.cc	/^#define AC_AR_REGNO(/;"	d	file:
AC_AR_SIZE	fesvr/dtm.cc	/^#define AC_AR_SIZE(/;"	d	file:
AC_QUICK_ACCESS	fesvr/debug_defines.h	/^#define AC_QUICK_ACCESS /;"	d
AC_QUICK_ACCESS	riscv/debug_defines.h	/^#define AC_QUICK_ACCESS /;"	d
AC_QUICK_ACCESS_CMDTYPE	fesvr/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE /;"	d
AC_QUICK_ACCESS_CMDTYPE	riscv/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE /;"	d
AC_QUICK_ACCESS_CMDTYPE_LENGTH	fesvr/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE_LENGTH /;"	d
AC_QUICK_ACCESS_CMDTYPE_LENGTH	riscv/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE_LENGTH /;"	d
AC_QUICK_ACCESS_CMDTYPE_OFFSET	fesvr/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE_OFFSET /;"	d
AC_QUICK_ACCESS_CMDTYPE_OFFSET	riscv/debug_defines.h	/^#define AC_QUICK_ACCESS_CMDTYPE_OFFSET /;"	d
ADDI	fesvr/dtm.cc	/^#define ADDI(/;"	d	file:
AR	Makefile.in	/^AR            := @AR@$/;"	m
AR	build/Makefile	/^AR            := ar$/;"	m
AT_SYSCALL	fesvr/syscall.cc	/^#define AT_SYSCALL(/;"	d	file:
AX_APPEND_FLAG	ax_append_flag.m4	/^AC_DEFUN([AX_APPEND_FLAG],$/;"	m
AX_APPEND_LINK_FLAGS	ax_append_link_flags.m4	/^AC_DEFUN([AX_APPEND_LINK_FLAGS],$/;"	m
AX_CHECK_LINK_FLAG	ax_check_link_flag.m4	/^AC_DEFUN([AX_CHECK_LINK_FLAG],$/;"	m
AX_REQUIRE_DEFINED	ax_require_defined.m4	/^AC_DEFUN([AX_REQUIRE_DEFINED], [dnl$/;"	m
About	README.md	/^About$/;"	s
BNE	fesvr/dtm.cc	/^#define BNE(/;"	d	file:
BRANCH_TARGET	riscv/decode.h	/^#define BRANCH_TARGET /;"	d
Build Steps	README.md	/^Build Steps$/;"	s
Build Steps on OpenBSD	README.md	/^Build Steps on OpenBSD$/;"	s
CAPTURE_DR	riscv/jtag_dtm.h	/^  CAPTURE_DR,$/;"	e	enum:__anon58dfc25b0103
CAPTURE_IR	riscv/jtag_dtm.h	/^  CAPTURE_IR,$/;"	e	enum:__anon58dfc25b0103
CAUSE_BREAKPOINT	riscv/encoding.h	/^#define CAUSE_BREAKPOINT /;"	d
CAUSE_FETCH_ACCESS	riscv/encoding.h	/^#define CAUSE_FETCH_ACCESS /;"	d
CAUSE_FETCH_GUEST_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_FETCH_GUEST_PAGE_FAULT /;"	d
CAUSE_FETCH_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_FETCH_PAGE_FAULT /;"	d
CAUSE_ILLEGAL_INSTRUCTION	riscv/encoding.h	/^#define CAUSE_ILLEGAL_INSTRUCTION /;"	d
CAUSE_LOAD_ACCESS	riscv/encoding.h	/^#define CAUSE_LOAD_ACCESS /;"	d
CAUSE_LOAD_GUEST_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_LOAD_GUEST_PAGE_FAULT /;"	d
CAUSE_LOAD_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_LOAD_PAGE_FAULT /;"	d
CAUSE_MACHINE_ECALL	riscv/encoding.h	/^#define CAUSE_MACHINE_ECALL /;"	d
CAUSE_MISALIGNED_FETCH	riscv/encoding.h	/^#define CAUSE_MISALIGNED_FETCH /;"	d
CAUSE_MISALIGNED_LOAD	riscv/encoding.h	/^#define CAUSE_MISALIGNED_LOAD /;"	d
CAUSE_MISALIGNED_STORE	riscv/encoding.h	/^#define CAUSE_MISALIGNED_STORE /;"	d
CAUSE_STORE_ACCESS	riscv/encoding.h	/^#define CAUSE_STORE_ACCESS /;"	d
CAUSE_STORE_GUEST_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_STORE_GUEST_PAGE_FAULT /;"	d
CAUSE_STORE_PAGE_FAULT	riscv/encoding.h	/^#define CAUSE_STORE_PAGE_FAULT /;"	d
CAUSE_SUPERVISOR_ECALL	riscv/encoding.h	/^#define CAUSE_SUPERVISOR_ECALL /;"	d
CAUSE_USER_ECALL	riscv/encoding.h	/^#define CAUSE_USER_ECALL /;"	d
CAUSE_VIRTUAL_INSTRUCTION	riscv/encoding.h	/^#define CAUSE_VIRTUAL_INSTRUCTION /;"	d
CAUSE_VIRTUAL_SUPERVISOR_ECALL	riscv/encoding.h	/^#define CAUSE_VIRTUAL_SUPERVISOR_ECALL /;"	d
CC	Makefile.in	/^CC            := @CC@$/;"	m
CC	build/Makefile	/^CC            := gcc$/;"	m
CC	debug_rom/Makefile	/^CC = $(RISCV)\/bin\/riscv64-unknown-elf-gcc$/;"	m
CLEAR	fesvr/dtm.cc	/^#define CLEAR /;"	d	file:
CLINT_BASE	riscv/encoding.h	/^#define CLINT_BASE /;"	d
CLINT_SIZE	riscv/encoding.h	/^#define CLINT_SIZE /;"	d
CMDERR_BUSY	riscv/debug_module.h	/^    CMDERR_BUSY = 1,$/;"	e	enum:cmderr
CMDERR_EXCEPTION	riscv/debug_module.h	/^    CMDERR_EXCEPTION = 3,$/;"	e	enum:cmderr
CMDERR_HALTRESUME	riscv/debug_module.h	/^    CMDERR_HALTRESUME = 4,$/;"	e	enum:cmderr
CMDERR_NONE	riscv/debug_module.h	/^    CMDERR_NONE = 0,$/;"	e	enum:cmderr
CMDERR_NOTSUP	riscv/debug_module.h	/^    CMDERR_NOTSUP = 2,$/;"	e	enum:cmderr
CMDERR_OTHER	riscv/debug_module.h	/^    CMDERR_OTHER = 7  $/;"	e	enum:cmderr
COMPARE_MAX	softfloat/fall_maxmin.c	/^#define COMPARE_MAX(/;"	d	file:
COMPARE_MIN	softfloat/fall_maxmin.c	/^#define COMPARE_MIN(/;"	d	file:
COMPILE	Makefile.in	/^COMPILE       := $(CXX) -MMD -MP $(all-cxx-flags) $(sprojs_include)$/;"	m
COMPILE	build/Makefile	/^COMPILE       := $(CXX) -MMD -MP $(all-cxx-flags) $(sprojs_include)$/;"	m
COMPILE	debug_rom/Makefile	/^COMPILE = $(CC) -nostdlib -nostartfiles -I.. -Tlink.ld$/;"	m
COMPILE_C	Makefile.in	/^COMPILE_C     := $(CC) -MMD -MP $(all-c-flags) $(sprojs_include)$/;"	m
COMPILE_C	build/Makefile	/^COMPILE_C     := $(CC) -MMD -MP $(all-c-flags) $(sprojs_include)$/;"	m
CPU_HZ	riscv/sim.h	/^  static const size_t CPU_HZ = 1000000000; \/\/ 1GHz CPU$/;"	m	class:sim_t	typeref:typename:const size_t
CPU_TO_FDT16	fdt/libfdt_env.h	/^#define CPU_TO_FDT16(/;"	d
CPU_TO_FDT32	fdt/libfdt_env.h	/^#define CPU_TO_FDT32(/;"	d
CPU_TO_FDT64	fdt/libfdt_env.h	/^#define CPU_TO_FDT64(/;"	d
CSRRx	fesvr/dtm.cc	/^#define CSRRx(/;"	d	file:
CSR_CYCLE	riscv/encoding.h	/^#define CSR_CYCLE /;"	d
CSR_CYCLEH	riscv/encoding.h	/^#define CSR_CYCLEH /;"	d
CSR_DCSR	fesvr/debug_defines.h	/^#define CSR_DCSR /;"	d
CSR_DCSR	riscv/debug_defines.h	/^#define CSR_DCSR /;"	d
CSR_DCSR	riscv/encoding.h	/^#define CSR_DCSR /;"	d
CSR_DCSR_CAUSE	fesvr/debug_defines.h	/^#define CSR_DCSR_CAUSE /;"	d
CSR_DCSR_CAUSE	riscv/debug_defines.h	/^#define CSR_DCSR_CAUSE /;"	d
CSR_DCSR_CAUSE_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_CAUSE_LENGTH /;"	d
CSR_DCSR_CAUSE_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_CAUSE_LENGTH /;"	d
CSR_DCSR_CAUSE_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_CAUSE_OFFSET /;"	d
CSR_DCSR_CAUSE_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_CAUSE_OFFSET /;"	d
CSR_DCSR_EBREAKH	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKH /;"	d
CSR_DCSR_EBREAKH_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKH_LENGTH /;"	d
CSR_DCSR_EBREAKH_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKH_OFFSET /;"	d
CSR_DCSR_EBREAKM	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKM /;"	d
CSR_DCSR_EBREAKM	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKM /;"	d
CSR_DCSR_EBREAKM_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKM_LENGTH /;"	d
CSR_DCSR_EBREAKM_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKM_LENGTH /;"	d
CSR_DCSR_EBREAKM_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKM_OFFSET /;"	d
CSR_DCSR_EBREAKM_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKM_OFFSET /;"	d
CSR_DCSR_EBREAKS	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKS /;"	d
CSR_DCSR_EBREAKS	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKS /;"	d
CSR_DCSR_EBREAKS_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKS_LENGTH /;"	d
CSR_DCSR_EBREAKS_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKS_LENGTH /;"	d
CSR_DCSR_EBREAKS_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKS_OFFSET /;"	d
CSR_DCSR_EBREAKS_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKS_OFFSET /;"	d
CSR_DCSR_EBREAKU	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKU /;"	d
CSR_DCSR_EBREAKU	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKU /;"	d
CSR_DCSR_EBREAKU_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKU_LENGTH /;"	d
CSR_DCSR_EBREAKU_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKU_LENGTH /;"	d
CSR_DCSR_EBREAKU_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_EBREAKU_OFFSET /;"	d
CSR_DCSR_EBREAKU_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_EBREAKU_OFFSET /;"	d
CSR_DCSR_MPRVEN	riscv/debug_defines.h	/^#define CSR_DCSR_MPRVEN /;"	d
CSR_DCSR_MPRVEN_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_MPRVEN_LENGTH /;"	d
CSR_DCSR_MPRVEN_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_MPRVEN_OFFSET /;"	d
CSR_DCSR_NMIP	riscv/debug_defines.h	/^#define CSR_DCSR_NMIP /;"	d
CSR_DCSR_NMIP_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_NMIP_LENGTH /;"	d
CSR_DCSR_NMIP_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_NMIP_OFFSET /;"	d
CSR_DCSR_PRV	fesvr/debug_defines.h	/^#define CSR_DCSR_PRV /;"	d
CSR_DCSR_PRV	riscv/debug_defines.h	/^#define CSR_DCSR_PRV /;"	d
CSR_DCSR_PRV_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_PRV_LENGTH /;"	d
CSR_DCSR_PRV_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_PRV_LENGTH /;"	d
CSR_DCSR_PRV_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_PRV_OFFSET /;"	d
CSR_DCSR_PRV_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_PRV_OFFSET /;"	d
CSR_DCSR_STEP	fesvr/debug_defines.h	/^#define CSR_DCSR_STEP /;"	d
CSR_DCSR_STEP	riscv/debug_defines.h	/^#define CSR_DCSR_STEP /;"	d
CSR_DCSR_STEPIE	riscv/debug_defines.h	/^#define CSR_DCSR_STEPIE /;"	d
CSR_DCSR_STEPIE_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_STEPIE_LENGTH /;"	d
CSR_DCSR_STEPIE_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_STEPIE_OFFSET /;"	d
CSR_DCSR_STEP_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_STEP_LENGTH /;"	d
CSR_DCSR_STEP_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_STEP_LENGTH /;"	d
CSR_DCSR_STEP_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_STEP_OFFSET /;"	d
CSR_DCSR_STEP_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_STEP_OFFSET /;"	d
CSR_DCSR_STOPCOUNT	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT /;"	d
CSR_DCSR_STOPCOUNT	riscv/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT /;"	d
CSR_DCSR_STOPCOUNT_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT_LENGTH /;"	d
CSR_DCSR_STOPCOUNT_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT_LENGTH /;"	d
CSR_DCSR_STOPCOUNT_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT_OFFSET /;"	d
CSR_DCSR_STOPCOUNT_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_STOPCOUNT_OFFSET /;"	d
CSR_DCSR_STOPTIME	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPTIME /;"	d
CSR_DCSR_STOPTIME	riscv/debug_defines.h	/^#define CSR_DCSR_STOPTIME /;"	d
CSR_DCSR_STOPTIME_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPTIME_LENGTH /;"	d
CSR_DCSR_STOPTIME_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_STOPTIME_LENGTH /;"	d
CSR_DCSR_STOPTIME_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_STOPTIME_OFFSET /;"	d
CSR_DCSR_STOPTIME_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_STOPTIME_OFFSET /;"	d
CSR_DCSR_XDEBUGVER	fesvr/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER /;"	d
CSR_DCSR_XDEBUGVER	riscv/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER /;"	d
CSR_DCSR_XDEBUGVER_LENGTH	fesvr/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER_LENGTH /;"	d
CSR_DCSR_XDEBUGVER_LENGTH	riscv/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER_LENGTH /;"	d
CSR_DCSR_XDEBUGVER_OFFSET	fesvr/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER_OFFSET /;"	d
CSR_DCSR_XDEBUGVER_OFFSET	riscv/debug_defines.h	/^#define CSR_DCSR_XDEBUGVER_OFFSET /;"	d
CSR_DPC	fesvr/debug_defines.h	/^#define CSR_DPC /;"	d
CSR_DPC	riscv/debug_defines.h	/^#define CSR_DPC /;"	d
CSR_DPC	riscv/encoding.h	/^#define CSR_DPC /;"	d
CSR_DPC_DPC	fesvr/debug_defines.h	/^#define CSR_DPC_DPC /;"	d
CSR_DPC_DPC	riscv/debug_defines.h	/^#define CSR_DPC_DPC /;"	d
CSR_DPC_DPC_LENGTH	fesvr/debug_defines.h	/^#define CSR_DPC_DPC_LENGTH /;"	d
CSR_DPC_DPC_LENGTH	riscv/debug_defines.h	/^#define CSR_DPC_DPC_LENGTH /;"	d
CSR_DPC_DPC_OFFSET	fesvr/debug_defines.h	/^#define CSR_DPC_DPC_OFFSET /;"	d
CSR_DPC_DPC_OFFSET	riscv/debug_defines.h	/^#define CSR_DPC_DPC_OFFSET /;"	d
CSR_DSCRATCH0	fesvr/debug_defines.h	/^#define CSR_DSCRATCH0 /;"	d
CSR_DSCRATCH0	riscv/debug_defines.h	/^#define CSR_DSCRATCH0 /;"	d
CSR_DSCRATCH0	riscv/encoding.h	/^#define CSR_DSCRATCH0 /;"	d
CSR_DSCRATCH1	fesvr/debug_defines.h	/^#define CSR_DSCRATCH1 /;"	d
CSR_DSCRATCH1	riscv/debug_defines.h	/^#define CSR_DSCRATCH1 /;"	d
CSR_DSCRATCH1	riscv/encoding.h	/^#define CSR_DSCRATCH1 /;"	d
CSR_ETRIGGER	riscv/debug_defines.h	/^#define CSR_ETRIGGER /;"	d
CSR_ETRIGGER_ACTION	riscv/debug_defines.h	/^#define CSR_ETRIGGER_ACTION /;"	d
CSR_ETRIGGER_ACTION_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_ACTION_LENGTH /;"	d
CSR_ETRIGGER_ACTION_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_ACTION_OFFSET /;"	d
CSR_ETRIGGER_DMODE	riscv/debug_defines.h	/^#define CSR_ETRIGGER_DMODE /;"	d
CSR_ETRIGGER_DMODE_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_DMODE_LENGTH /;"	d
CSR_ETRIGGER_DMODE_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_DMODE_OFFSET /;"	d
CSR_ETRIGGER_HIT	riscv/debug_defines.h	/^#define CSR_ETRIGGER_HIT /;"	d
CSR_ETRIGGER_HIT_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_HIT_LENGTH /;"	d
CSR_ETRIGGER_HIT_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_HIT_OFFSET /;"	d
CSR_ETRIGGER_M	riscv/debug_defines.h	/^#define CSR_ETRIGGER_M /;"	d
CSR_ETRIGGER_M_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_M_LENGTH /;"	d
CSR_ETRIGGER_M_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_M_OFFSET /;"	d
CSR_ETRIGGER_NMI	riscv/debug_defines.h	/^#define CSR_ETRIGGER_NMI /;"	d
CSR_ETRIGGER_NMI_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_NMI_LENGTH /;"	d
CSR_ETRIGGER_NMI_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_NMI_OFFSET /;"	d
CSR_ETRIGGER_S	riscv/debug_defines.h	/^#define CSR_ETRIGGER_S /;"	d
CSR_ETRIGGER_S_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_S_LENGTH /;"	d
CSR_ETRIGGER_S_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_S_OFFSET /;"	d
CSR_ETRIGGER_TYPE	riscv/debug_defines.h	/^#define CSR_ETRIGGER_TYPE /;"	d
CSR_ETRIGGER_TYPE_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_TYPE_LENGTH /;"	d
CSR_ETRIGGER_TYPE_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_TYPE_OFFSET /;"	d
CSR_ETRIGGER_U	riscv/debug_defines.h	/^#define CSR_ETRIGGER_U /;"	d
CSR_ETRIGGER_U_LENGTH	riscv/debug_defines.h	/^#define CSR_ETRIGGER_U_LENGTH /;"	d
CSR_ETRIGGER_U_OFFSET	riscv/debug_defines.h	/^#define CSR_ETRIGGER_U_OFFSET /;"	d
CSR_FCSR	riscv/encoding.h	/^#define CSR_FCSR /;"	d
CSR_FFLAGS	riscv/encoding.h	/^#define CSR_FFLAGS /;"	d
CSR_FRM	riscv/encoding.h	/^#define CSR_FRM /;"	d
CSR_HCOUNTEREN	riscv/encoding.h	/^#define CSR_HCOUNTEREN /;"	d
CSR_HEDELEG	riscv/encoding.h	/^#define CSR_HEDELEG /;"	d
CSR_HGATP	riscv/encoding.h	/^#define CSR_HGATP /;"	d
CSR_HGEIE	riscv/encoding.h	/^#define CSR_HGEIE /;"	d
CSR_HGEIP	riscv/encoding.h	/^#define CSR_HGEIP /;"	d
CSR_HIDELEG	riscv/encoding.h	/^#define CSR_HIDELEG /;"	d
CSR_HIE	riscv/encoding.h	/^#define CSR_HIE /;"	d
CSR_HIP	riscv/encoding.h	/^#define CSR_HIP /;"	d
CSR_HPMCOUNTER10	riscv/encoding.h	/^#define CSR_HPMCOUNTER10 /;"	d
CSR_HPMCOUNTER10H	riscv/encoding.h	/^#define CSR_HPMCOUNTER10H /;"	d
CSR_HPMCOUNTER11	riscv/encoding.h	/^#define CSR_HPMCOUNTER11 /;"	d
CSR_HPMCOUNTER11H	riscv/encoding.h	/^#define CSR_HPMCOUNTER11H /;"	d
CSR_HPMCOUNTER12	riscv/encoding.h	/^#define CSR_HPMCOUNTER12 /;"	d
CSR_HPMCOUNTER12H	riscv/encoding.h	/^#define CSR_HPMCOUNTER12H /;"	d
CSR_HPMCOUNTER13	riscv/encoding.h	/^#define CSR_HPMCOUNTER13 /;"	d
CSR_HPMCOUNTER13H	riscv/encoding.h	/^#define CSR_HPMCOUNTER13H /;"	d
CSR_HPMCOUNTER14	riscv/encoding.h	/^#define CSR_HPMCOUNTER14 /;"	d
CSR_HPMCOUNTER14H	riscv/encoding.h	/^#define CSR_HPMCOUNTER14H /;"	d
CSR_HPMCOUNTER15	riscv/encoding.h	/^#define CSR_HPMCOUNTER15 /;"	d
CSR_HPMCOUNTER15H	riscv/encoding.h	/^#define CSR_HPMCOUNTER15H /;"	d
CSR_HPMCOUNTER16	riscv/encoding.h	/^#define CSR_HPMCOUNTER16 /;"	d
CSR_HPMCOUNTER16H	riscv/encoding.h	/^#define CSR_HPMCOUNTER16H /;"	d
CSR_HPMCOUNTER17	riscv/encoding.h	/^#define CSR_HPMCOUNTER17 /;"	d
CSR_HPMCOUNTER17H	riscv/encoding.h	/^#define CSR_HPMCOUNTER17H /;"	d
CSR_HPMCOUNTER18	riscv/encoding.h	/^#define CSR_HPMCOUNTER18 /;"	d
CSR_HPMCOUNTER18H	riscv/encoding.h	/^#define CSR_HPMCOUNTER18H /;"	d
CSR_HPMCOUNTER19	riscv/encoding.h	/^#define CSR_HPMCOUNTER19 /;"	d
CSR_HPMCOUNTER19H	riscv/encoding.h	/^#define CSR_HPMCOUNTER19H /;"	d
CSR_HPMCOUNTER20	riscv/encoding.h	/^#define CSR_HPMCOUNTER20 /;"	d
CSR_HPMCOUNTER20H	riscv/encoding.h	/^#define CSR_HPMCOUNTER20H /;"	d
CSR_HPMCOUNTER21	riscv/encoding.h	/^#define CSR_HPMCOUNTER21 /;"	d
CSR_HPMCOUNTER21H	riscv/encoding.h	/^#define CSR_HPMCOUNTER21H /;"	d
CSR_HPMCOUNTER22	riscv/encoding.h	/^#define CSR_HPMCOUNTER22 /;"	d
CSR_HPMCOUNTER22H	riscv/encoding.h	/^#define CSR_HPMCOUNTER22H /;"	d
CSR_HPMCOUNTER23	riscv/encoding.h	/^#define CSR_HPMCOUNTER23 /;"	d
CSR_HPMCOUNTER23H	riscv/encoding.h	/^#define CSR_HPMCOUNTER23H /;"	d
CSR_HPMCOUNTER24	riscv/encoding.h	/^#define CSR_HPMCOUNTER24 /;"	d
CSR_HPMCOUNTER24H	riscv/encoding.h	/^#define CSR_HPMCOUNTER24H /;"	d
CSR_HPMCOUNTER25	riscv/encoding.h	/^#define CSR_HPMCOUNTER25 /;"	d
CSR_HPMCOUNTER25H	riscv/encoding.h	/^#define CSR_HPMCOUNTER25H /;"	d
CSR_HPMCOUNTER26	riscv/encoding.h	/^#define CSR_HPMCOUNTER26 /;"	d
CSR_HPMCOUNTER26H	riscv/encoding.h	/^#define CSR_HPMCOUNTER26H /;"	d
CSR_HPMCOUNTER27	riscv/encoding.h	/^#define CSR_HPMCOUNTER27 /;"	d
CSR_HPMCOUNTER27H	riscv/encoding.h	/^#define CSR_HPMCOUNTER27H /;"	d
CSR_HPMCOUNTER28	riscv/encoding.h	/^#define CSR_HPMCOUNTER28 /;"	d
CSR_HPMCOUNTER28H	riscv/encoding.h	/^#define CSR_HPMCOUNTER28H /;"	d
CSR_HPMCOUNTER29	riscv/encoding.h	/^#define CSR_HPMCOUNTER29 /;"	d
CSR_HPMCOUNTER29H	riscv/encoding.h	/^#define CSR_HPMCOUNTER29H /;"	d
CSR_HPMCOUNTER3	riscv/encoding.h	/^#define CSR_HPMCOUNTER3 /;"	d
CSR_HPMCOUNTER30	riscv/encoding.h	/^#define CSR_HPMCOUNTER30 /;"	d
CSR_HPMCOUNTER30H	riscv/encoding.h	/^#define CSR_HPMCOUNTER30H /;"	d
CSR_HPMCOUNTER31	riscv/encoding.h	/^#define CSR_HPMCOUNTER31 /;"	d
CSR_HPMCOUNTER31H	riscv/encoding.h	/^#define CSR_HPMCOUNTER31H /;"	d
CSR_HPMCOUNTER3H	riscv/encoding.h	/^#define CSR_HPMCOUNTER3H /;"	d
CSR_HPMCOUNTER4	riscv/encoding.h	/^#define CSR_HPMCOUNTER4 /;"	d
CSR_HPMCOUNTER4H	riscv/encoding.h	/^#define CSR_HPMCOUNTER4H /;"	d
CSR_HPMCOUNTER5	riscv/encoding.h	/^#define CSR_HPMCOUNTER5 /;"	d
CSR_HPMCOUNTER5H	riscv/encoding.h	/^#define CSR_HPMCOUNTER5H /;"	d
CSR_HPMCOUNTER6	riscv/encoding.h	/^#define CSR_HPMCOUNTER6 /;"	d
CSR_HPMCOUNTER6H	riscv/encoding.h	/^#define CSR_HPMCOUNTER6H /;"	d
CSR_HPMCOUNTER7	riscv/encoding.h	/^#define CSR_HPMCOUNTER7 /;"	d
CSR_HPMCOUNTER7H	riscv/encoding.h	/^#define CSR_HPMCOUNTER7H /;"	d
CSR_HPMCOUNTER8	riscv/encoding.h	/^#define CSR_HPMCOUNTER8 /;"	d
CSR_HPMCOUNTER8H	riscv/encoding.h	/^#define CSR_HPMCOUNTER8H /;"	d
CSR_HPMCOUNTER9	riscv/encoding.h	/^#define CSR_HPMCOUNTER9 /;"	d
CSR_HPMCOUNTER9H	riscv/encoding.h	/^#define CSR_HPMCOUNTER9H /;"	d
CSR_HSTATUS	riscv/encoding.h	/^#define CSR_HSTATUS /;"	d
CSR_HTIMEDELTA	riscv/encoding.h	/^#define CSR_HTIMEDELTA /;"	d
CSR_HTIMEDELTAH	riscv/encoding.h	/^#define CSR_HTIMEDELTAH /;"	d
CSR_HTINST	riscv/encoding.h	/^#define CSR_HTINST /;"	d
CSR_HTVAL	riscv/encoding.h	/^#define CSR_HTVAL /;"	d
CSR_HVIP	riscv/encoding.h	/^#define CSR_HVIP /;"	d
CSR_ICOUNT	fesvr/debug_defines.h	/^#define CSR_ICOUNT /;"	d
CSR_ICOUNT	riscv/debug_defines.h	/^#define CSR_ICOUNT /;"	d
CSR_ICOUNT_ACTION	fesvr/debug_defines.h	/^#define CSR_ICOUNT_ACTION /;"	d
CSR_ICOUNT_ACTION	riscv/debug_defines.h	/^#define CSR_ICOUNT_ACTION /;"	d
CSR_ICOUNT_ACTION_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_ACTION_LENGTH /;"	d
CSR_ICOUNT_ACTION_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_ACTION_LENGTH /;"	d
CSR_ICOUNT_ACTION_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_ACTION_OFFSET /;"	d
CSR_ICOUNT_ACTION_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_ACTION_OFFSET /;"	d
CSR_ICOUNT_COUNT	fesvr/debug_defines.h	/^#define CSR_ICOUNT_COUNT /;"	d
CSR_ICOUNT_COUNT	riscv/debug_defines.h	/^#define CSR_ICOUNT_COUNT /;"	d
CSR_ICOUNT_COUNT_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_COUNT_LENGTH /;"	d
CSR_ICOUNT_COUNT_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_COUNT_LENGTH /;"	d
CSR_ICOUNT_COUNT_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_COUNT_OFFSET /;"	d
CSR_ICOUNT_COUNT_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_COUNT_OFFSET /;"	d
CSR_ICOUNT_DMODE	fesvr/debug_defines.h	/^#define CSR_ICOUNT_DMODE /;"	d
CSR_ICOUNT_DMODE	riscv/debug_defines.h	/^#define CSR_ICOUNT_DMODE /;"	d
CSR_ICOUNT_DMODE_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_DMODE_LENGTH /;"	d
CSR_ICOUNT_DMODE_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_DMODE_LENGTH /;"	d
CSR_ICOUNT_DMODE_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_DMODE_OFFSET /;"	d
CSR_ICOUNT_DMODE_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_DMODE_OFFSET /;"	d
CSR_ICOUNT_H	fesvr/debug_defines.h	/^#define CSR_ICOUNT_H /;"	d
CSR_ICOUNT_HIT	riscv/debug_defines.h	/^#define CSR_ICOUNT_HIT /;"	d
CSR_ICOUNT_HIT_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_HIT_LENGTH /;"	d
CSR_ICOUNT_HIT_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_HIT_OFFSET /;"	d
CSR_ICOUNT_H_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_H_LENGTH /;"	d
CSR_ICOUNT_H_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_H_OFFSET /;"	d
CSR_ICOUNT_M	fesvr/debug_defines.h	/^#define CSR_ICOUNT_M /;"	d
CSR_ICOUNT_M	riscv/debug_defines.h	/^#define CSR_ICOUNT_M /;"	d
CSR_ICOUNT_M_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_M_LENGTH /;"	d
CSR_ICOUNT_M_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_M_LENGTH /;"	d
CSR_ICOUNT_M_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_M_OFFSET /;"	d
CSR_ICOUNT_M_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_M_OFFSET /;"	d
CSR_ICOUNT_S	fesvr/debug_defines.h	/^#define CSR_ICOUNT_S /;"	d
CSR_ICOUNT_S	riscv/debug_defines.h	/^#define CSR_ICOUNT_S /;"	d
CSR_ICOUNT_S_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_S_LENGTH /;"	d
CSR_ICOUNT_S_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_S_LENGTH /;"	d
CSR_ICOUNT_S_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_S_OFFSET /;"	d
CSR_ICOUNT_S_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_S_OFFSET /;"	d
CSR_ICOUNT_TYPE	fesvr/debug_defines.h	/^#define CSR_ICOUNT_TYPE /;"	d
CSR_ICOUNT_TYPE	riscv/debug_defines.h	/^#define CSR_ICOUNT_TYPE /;"	d
CSR_ICOUNT_TYPE_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_TYPE_LENGTH /;"	d
CSR_ICOUNT_TYPE_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_TYPE_LENGTH /;"	d
CSR_ICOUNT_TYPE_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_TYPE_OFFSET /;"	d
CSR_ICOUNT_TYPE_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_TYPE_OFFSET /;"	d
CSR_ICOUNT_U	fesvr/debug_defines.h	/^#define CSR_ICOUNT_U /;"	d
CSR_ICOUNT_U	riscv/debug_defines.h	/^#define CSR_ICOUNT_U /;"	d
CSR_ICOUNT_U_LENGTH	fesvr/debug_defines.h	/^#define CSR_ICOUNT_U_LENGTH /;"	d
CSR_ICOUNT_U_LENGTH	riscv/debug_defines.h	/^#define CSR_ICOUNT_U_LENGTH /;"	d
CSR_ICOUNT_U_OFFSET	fesvr/debug_defines.h	/^#define CSR_ICOUNT_U_OFFSET /;"	d
CSR_ICOUNT_U_OFFSET	riscv/debug_defines.h	/^#define CSR_ICOUNT_U_OFFSET /;"	d
CSR_INSTRET	riscv/encoding.h	/^#define CSR_INSTRET /;"	d
CSR_INSTRETH	riscv/encoding.h	/^#define CSR_INSTRETH /;"	d
CSR_ITRIGGER	riscv/debug_defines.h	/^#define CSR_ITRIGGER /;"	d
CSR_ITRIGGER_ACTION	riscv/debug_defines.h	/^#define CSR_ITRIGGER_ACTION /;"	d
CSR_ITRIGGER_ACTION_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_ACTION_LENGTH /;"	d
CSR_ITRIGGER_ACTION_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_ACTION_OFFSET /;"	d
CSR_ITRIGGER_DMODE	riscv/debug_defines.h	/^#define CSR_ITRIGGER_DMODE /;"	d
CSR_ITRIGGER_DMODE_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_DMODE_LENGTH /;"	d
CSR_ITRIGGER_DMODE_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_DMODE_OFFSET /;"	d
CSR_ITRIGGER_HIT	riscv/debug_defines.h	/^#define CSR_ITRIGGER_HIT /;"	d
CSR_ITRIGGER_HIT_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_HIT_LENGTH /;"	d
CSR_ITRIGGER_HIT_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_HIT_OFFSET /;"	d
CSR_ITRIGGER_M	riscv/debug_defines.h	/^#define CSR_ITRIGGER_M /;"	d
CSR_ITRIGGER_M_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_M_LENGTH /;"	d
CSR_ITRIGGER_M_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_M_OFFSET /;"	d
CSR_ITRIGGER_S	riscv/debug_defines.h	/^#define CSR_ITRIGGER_S /;"	d
CSR_ITRIGGER_S_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_S_LENGTH /;"	d
CSR_ITRIGGER_S_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_S_OFFSET /;"	d
CSR_ITRIGGER_TYPE	riscv/debug_defines.h	/^#define CSR_ITRIGGER_TYPE /;"	d
CSR_ITRIGGER_TYPE_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_TYPE_LENGTH /;"	d
CSR_ITRIGGER_TYPE_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_TYPE_OFFSET /;"	d
CSR_ITRIGGER_U	riscv/debug_defines.h	/^#define CSR_ITRIGGER_U /;"	d
CSR_ITRIGGER_U_LENGTH	riscv/debug_defines.h	/^#define CSR_ITRIGGER_U_LENGTH /;"	d
CSR_ITRIGGER_U_OFFSET	riscv/debug_defines.h	/^#define CSR_ITRIGGER_U_OFFSET /;"	d
CSR_MARCHID	riscv/encoding.h	/^#define CSR_MARCHID /;"	d
CSR_MCAUSE	riscv/encoding.h	/^#define CSR_MCAUSE /;"	d
CSR_MCONTEXT	riscv/debug_defines.h	/^#define CSR_MCONTEXT /;"	d
CSR_MCONTEXT_MCONTEXT	riscv/debug_defines.h	/^#define CSR_MCONTEXT_MCONTEXT /;"	d
CSR_MCONTEXT_MCONTEXT_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTEXT_MCONTEXT_LENGTH /;"	d
CSR_MCONTEXT_MCONTEXT_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTEXT_MCONTEXT_OFFSET /;"	d
CSR_MCONTROL	fesvr/debug_defines.h	/^#define CSR_MCONTROL /;"	d
CSR_MCONTROL	riscv/debug_defines.h	/^#define CSR_MCONTROL /;"	d
CSR_MCONTROL_ACTION	fesvr/debug_defines.h	/^#define CSR_MCONTROL_ACTION /;"	d
CSR_MCONTROL_ACTION	riscv/debug_defines.h	/^#define CSR_MCONTROL_ACTION /;"	d
CSR_MCONTROL_ACTION_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_ACTION_LENGTH /;"	d
CSR_MCONTROL_ACTION_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_ACTION_LENGTH /;"	d
CSR_MCONTROL_ACTION_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_ACTION_OFFSET /;"	d
CSR_MCONTROL_ACTION_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_ACTION_OFFSET /;"	d
CSR_MCONTROL_CHAIN	fesvr/debug_defines.h	/^#define CSR_MCONTROL_CHAIN /;"	d
CSR_MCONTROL_CHAIN	riscv/debug_defines.h	/^#define CSR_MCONTROL_CHAIN /;"	d
CSR_MCONTROL_CHAIN_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_CHAIN_LENGTH /;"	d
CSR_MCONTROL_CHAIN_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_CHAIN_LENGTH /;"	d
CSR_MCONTROL_CHAIN_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_CHAIN_OFFSET /;"	d
CSR_MCONTROL_CHAIN_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_CHAIN_OFFSET /;"	d
CSR_MCONTROL_DMODE	fesvr/debug_defines.h	/^#define CSR_MCONTROL_DMODE /;"	d
CSR_MCONTROL_DMODE	riscv/debug_defines.h	/^#define CSR_MCONTROL_DMODE /;"	d
CSR_MCONTROL_DMODE_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_DMODE_LENGTH /;"	d
CSR_MCONTROL_DMODE_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_DMODE_LENGTH /;"	d
CSR_MCONTROL_DMODE_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_DMODE_OFFSET /;"	d
CSR_MCONTROL_DMODE_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_DMODE_OFFSET /;"	d
CSR_MCONTROL_EXECUTE	fesvr/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE /;"	d
CSR_MCONTROL_EXECUTE	riscv/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE /;"	d
CSR_MCONTROL_EXECUTE_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE_LENGTH /;"	d
CSR_MCONTROL_EXECUTE_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE_LENGTH /;"	d
CSR_MCONTROL_EXECUTE_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE_OFFSET /;"	d
CSR_MCONTROL_EXECUTE_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_EXECUTE_OFFSET /;"	d
CSR_MCONTROL_H	fesvr/debug_defines.h	/^#define CSR_MCONTROL_H /;"	d
CSR_MCONTROL_HIT	riscv/debug_defines.h	/^#define CSR_MCONTROL_HIT /;"	d
CSR_MCONTROL_HIT_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_HIT_LENGTH /;"	d
CSR_MCONTROL_HIT_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_HIT_OFFSET /;"	d
CSR_MCONTROL_H_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_H_LENGTH /;"	d
CSR_MCONTROL_H_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_H_OFFSET /;"	d
CSR_MCONTROL_LOAD	fesvr/debug_defines.h	/^#define CSR_MCONTROL_LOAD /;"	d
CSR_MCONTROL_LOAD	riscv/debug_defines.h	/^#define CSR_MCONTROL_LOAD /;"	d
CSR_MCONTROL_LOAD_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_LOAD_LENGTH /;"	d
CSR_MCONTROL_LOAD_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_LOAD_LENGTH /;"	d
CSR_MCONTROL_LOAD_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_LOAD_OFFSET /;"	d
CSR_MCONTROL_LOAD_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_LOAD_OFFSET /;"	d
CSR_MCONTROL_M	fesvr/debug_defines.h	/^#define CSR_MCONTROL_M /;"	d
CSR_MCONTROL_M	riscv/debug_defines.h	/^#define CSR_MCONTROL_M /;"	d
CSR_MCONTROL_MASKMAX	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX /;"	d
CSR_MCONTROL_MASKMAX	riscv/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX /;"	d
CSR_MCONTROL_MASKMAX_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX_LENGTH /;"	d
CSR_MCONTROL_MASKMAX_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX_LENGTH /;"	d
CSR_MCONTROL_MASKMAX_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX_OFFSET /;"	d
CSR_MCONTROL_MASKMAX_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_MASKMAX_OFFSET /;"	d
CSR_MCONTROL_MATCH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MATCH /;"	d
CSR_MCONTROL_MATCH	riscv/debug_defines.h	/^#define CSR_MCONTROL_MATCH /;"	d
CSR_MCONTROL_MATCH_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MATCH_LENGTH /;"	d
CSR_MCONTROL_MATCH_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_MATCH_LENGTH /;"	d
CSR_MCONTROL_MATCH_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_MATCH_OFFSET /;"	d
CSR_MCONTROL_MATCH_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_MATCH_OFFSET /;"	d
CSR_MCONTROL_M_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_M_LENGTH /;"	d
CSR_MCONTROL_M_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_M_LENGTH /;"	d
CSR_MCONTROL_M_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_M_OFFSET /;"	d
CSR_MCONTROL_M_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_M_OFFSET /;"	d
CSR_MCONTROL_S	fesvr/debug_defines.h	/^#define CSR_MCONTROL_S /;"	d
CSR_MCONTROL_S	riscv/debug_defines.h	/^#define CSR_MCONTROL_S /;"	d
CSR_MCONTROL_SELECT	fesvr/debug_defines.h	/^#define CSR_MCONTROL_SELECT /;"	d
CSR_MCONTROL_SELECT	riscv/debug_defines.h	/^#define CSR_MCONTROL_SELECT /;"	d
CSR_MCONTROL_SELECT_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_SELECT_LENGTH /;"	d
CSR_MCONTROL_SELECT_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_SELECT_LENGTH /;"	d
CSR_MCONTROL_SELECT_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_SELECT_OFFSET /;"	d
CSR_MCONTROL_SELECT_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_SELECT_OFFSET /;"	d
CSR_MCONTROL_SIZEHI	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZEHI /;"	d
CSR_MCONTROL_SIZEHI_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZEHI_LENGTH /;"	d
CSR_MCONTROL_SIZEHI_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZEHI_OFFSET /;"	d
CSR_MCONTROL_SIZELO	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZELO /;"	d
CSR_MCONTROL_SIZELO_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZELO_LENGTH /;"	d
CSR_MCONTROL_SIZELO_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_SIZELO_OFFSET /;"	d
CSR_MCONTROL_STORE	fesvr/debug_defines.h	/^#define CSR_MCONTROL_STORE /;"	d
CSR_MCONTROL_STORE	riscv/debug_defines.h	/^#define CSR_MCONTROL_STORE /;"	d
CSR_MCONTROL_STORE_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_STORE_LENGTH /;"	d
CSR_MCONTROL_STORE_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_STORE_LENGTH /;"	d
CSR_MCONTROL_STORE_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_STORE_OFFSET /;"	d
CSR_MCONTROL_STORE_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_STORE_OFFSET /;"	d
CSR_MCONTROL_S_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_S_LENGTH /;"	d
CSR_MCONTROL_S_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_S_LENGTH /;"	d
CSR_MCONTROL_S_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_S_OFFSET /;"	d
CSR_MCONTROL_S_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_S_OFFSET /;"	d
CSR_MCONTROL_TIMING	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TIMING /;"	d
CSR_MCONTROL_TIMING	riscv/debug_defines.h	/^#define CSR_MCONTROL_TIMING /;"	d
CSR_MCONTROL_TIMING_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TIMING_LENGTH /;"	d
CSR_MCONTROL_TIMING_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_TIMING_LENGTH /;"	d
CSR_MCONTROL_TIMING_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TIMING_OFFSET /;"	d
CSR_MCONTROL_TIMING_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_TIMING_OFFSET /;"	d
CSR_MCONTROL_TYPE	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TYPE /;"	d
CSR_MCONTROL_TYPE	riscv/debug_defines.h	/^#define CSR_MCONTROL_TYPE /;"	d
CSR_MCONTROL_TYPE_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TYPE_LENGTH /;"	d
CSR_MCONTROL_TYPE_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_TYPE_LENGTH /;"	d
CSR_MCONTROL_TYPE_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_TYPE_OFFSET /;"	d
CSR_MCONTROL_TYPE_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_TYPE_OFFSET /;"	d
CSR_MCONTROL_U	fesvr/debug_defines.h	/^#define CSR_MCONTROL_U /;"	d
CSR_MCONTROL_U	riscv/debug_defines.h	/^#define CSR_MCONTROL_U /;"	d
CSR_MCONTROL_U_LENGTH	fesvr/debug_defines.h	/^#define CSR_MCONTROL_U_LENGTH /;"	d
CSR_MCONTROL_U_LENGTH	riscv/debug_defines.h	/^#define CSR_MCONTROL_U_LENGTH /;"	d
CSR_MCONTROL_U_OFFSET	fesvr/debug_defines.h	/^#define CSR_MCONTROL_U_OFFSET /;"	d
CSR_MCONTROL_U_OFFSET	riscv/debug_defines.h	/^#define CSR_MCONTROL_U_OFFSET /;"	d
CSR_MCOUNTEREN	riscv/encoding.h	/^#define CSR_MCOUNTEREN /;"	d
CSR_MCOUNTINHIBIT	riscv/encoding.h	/^#define CSR_MCOUNTINHIBIT /;"	d
CSR_MCYCLE	riscv/encoding.h	/^#define CSR_MCYCLE /;"	d
CSR_MCYCLEH	riscv/encoding.h	/^#define CSR_MCYCLEH /;"	d
CSR_MEDELEG	riscv/encoding.h	/^#define CSR_MEDELEG /;"	d
CSR_MEPC	riscv/encoding.h	/^#define CSR_MEPC /;"	d
CSR_MHARTID	riscv/encoding.h	/^#define CSR_MHARTID /;"	d
CSR_MHPMCOUNTER10	riscv/encoding.h	/^#define CSR_MHPMCOUNTER10 /;"	d
CSR_MHPMCOUNTER10H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER10H /;"	d
CSR_MHPMCOUNTER11	riscv/encoding.h	/^#define CSR_MHPMCOUNTER11 /;"	d
CSR_MHPMCOUNTER11H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER11H /;"	d
CSR_MHPMCOUNTER12	riscv/encoding.h	/^#define CSR_MHPMCOUNTER12 /;"	d
CSR_MHPMCOUNTER12H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER12H /;"	d
CSR_MHPMCOUNTER13	riscv/encoding.h	/^#define CSR_MHPMCOUNTER13 /;"	d
CSR_MHPMCOUNTER13H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER13H /;"	d
CSR_MHPMCOUNTER14	riscv/encoding.h	/^#define CSR_MHPMCOUNTER14 /;"	d
CSR_MHPMCOUNTER14H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER14H /;"	d
CSR_MHPMCOUNTER15	riscv/encoding.h	/^#define CSR_MHPMCOUNTER15 /;"	d
CSR_MHPMCOUNTER15H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER15H /;"	d
CSR_MHPMCOUNTER16	riscv/encoding.h	/^#define CSR_MHPMCOUNTER16 /;"	d
CSR_MHPMCOUNTER16H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER16H /;"	d
CSR_MHPMCOUNTER17	riscv/encoding.h	/^#define CSR_MHPMCOUNTER17 /;"	d
CSR_MHPMCOUNTER17H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER17H /;"	d
CSR_MHPMCOUNTER18	riscv/encoding.h	/^#define CSR_MHPMCOUNTER18 /;"	d
CSR_MHPMCOUNTER18H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER18H /;"	d
CSR_MHPMCOUNTER19	riscv/encoding.h	/^#define CSR_MHPMCOUNTER19 /;"	d
CSR_MHPMCOUNTER19H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER19H /;"	d
CSR_MHPMCOUNTER20	riscv/encoding.h	/^#define CSR_MHPMCOUNTER20 /;"	d
CSR_MHPMCOUNTER20H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER20H /;"	d
CSR_MHPMCOUNTER21	riscv/encoding.h	/^#define CSR_MHPMCOUNTER21 /;"	d
CSR_MHPMCOUNTER21H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER21H /;"	d
CSR_MHPMCOUNTER22	riscv/encoding.h	/^#define CSR_MHPMCOUNTER22 /;"	d
CSR_MHPMCOUNTER22H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER22H /;"	d
CSR_MHPMCOUNTER23	riscv/encoding.h	/^#define CSR_MHPMCOUNTER23 /;"	d
CSR_MHPMCOUNTER23H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER23H /;"	d
CSR_MHPMCOUNTER24	riscv/encoding.h	/^#define CSR_MHPMCOUNTER24 /;"	d
CSR_MHPMCOUNTER24H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER24H /;"	d
CSR_MHPMCOUNTER25	riscv/encoding.h	/^#define CSR_MHPMCOUNTER25 /;"	d
CSR_MHPMCOUNTER25H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER25H /;"	d
CSR_MHPMCOUNTER26	riscv/encoding.h	/^#define CSR_MHPMCOUNTER26 /;"	d
CSR_MHPMCOUNTER26H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER26H /;"	d
CSR_MHPMCOUNTER27	riscv/encoding.h	/^#define CSR_MHPMCOUNTER27 /;"	d
CSR_MHPMCOUNTER27H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER27H /;"	d
CSR_MHPMCOUNTER28	riscv/encoding.h	/^#define CSR_MHPMCOUNTER28 /;"	d
CSR_MHPMCOUNTER28H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER28H /;"	d
CSR_MHPMCOUNTER29	riscv/encoding.h	/^#define CSR_MHPMCOUNTER29 /;"	d
CSR_MHPMCOUNTER29H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER29H /;"	d
CSR_MHPMCOUNTER3	riscv/encoding.h	/^#define CSR_MHPMCOUNTER3 /;"	d
CSR_MHPMCOUNTER30	riscv/encoding.h	/^#define CSR_MHPMCOUNTER30 /;"	d
CSR_MHPMCOUNTER30H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER30H /;"	d
CSR_MHPMCOUNTER31	riscv/encoding.h	/^#define CSR_MHPMCOUNTER31 /;"	d
CSR_MHPMCOUNTER31H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER31H /;"	d
CSR_MHPMCOUNTER3H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER3H /;"	d
CSR_MHPMCOUNTER4	riscv/encoding.h	/^#define CSR_MHPMCOUNTER4 /;"	d
CSR_MHPMCOUNTER4H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER4H /;"	d
CSR_MHPMCOUNTER5	riscv/encoding.h	/^#define CSR_MHPMCOUNTER5 /;"	d
CSR_MHPMCOUNTER5H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER5H /;"	d
CSR_MHPMCOUNTER6	riscv/encoding.h	/^#define CSR_MHPMCOUNTER6 /;"	d
CSR_MHPMCOUNTER6H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER6H /;"	d
CSR_MHPMCOUNTER7	riscv/encoding.h	/^#define CSR_MHPMCOUNTER7 /;"	d
CSR_MHPMCOUNTER7H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER7H /;"	d
CSR_MHPMCOUNTER8	riscv/encoding.h	/^#define CSR_MHPMCOUNTER8 /;"	d
CSR_MHPMCOUNTER8H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER8H /;"	d
CSR_MHPMCOUNTER9	riscv/encoding.h	/^#define CSR_MHPMCOUNTER9 /;"	d
CSR_MHPMCOUNTER9H	riscv/encoding.h	/^#define CSR_MHPMCOUNTER9H /;"	d
CSR_MHPMEVENT10	riscv/encoding.h	/^#define CSR_MHPMEVENT10 /;"	d
CSR_MHPMEVENT11	riscv/encoding.h	/^#define CSR_MHPMEVENT11 /;"	d
CSR_MHPMEVENT12	riscv/encoding.h	/^#define CSR_MHPMEVENT12 /;"	d
CSR_MHPMEVENT13	riscv/encoding.h	/^#define CSR_MHPMEVENT13 /;"	d
CSR_MHPMEVENT14	riscv/encoding.h	/^#define CSR_MHPMEVENT14 /;"	d
CSR_MHPMEVENT15	riscv/encoding.h	/^#define CSR_MHPMEVENT15 /;"	d
CSR_MHPMEVENT16	riscv/encoding.h	/^#define CSR_MHPMEVENT16 /;"	d
CSR_MHPMEVENT17	riscv/encoding.h	/^#define CSR_MHPMEVENT17 /;"	d
CSR_MHPMEVENT18	riscv/encoding.h	/^#define CSR_MHPMEVENT18 /;"	d
CSR_MHPMEVENT19	riscv/encoding.h	/^#define CSR_MHPMEVENT19 /;"	d
CSR_MHPMEVENT20	riscv/encoding.h	/^#define CSR_MHPMEVENT20 /;"	d
CSR_MHPMEVENT21	riscv/encoding.h	/^#define CSR_MHPMEVENT21 /;"	d
CSR_MHPMEVENT22	riscv/encoding.h	/^#define CSR_MHPMEVENT22 /;"	d
CSR_MHPMEVENT23	riscv/encoding.h	/^#define CSR_MHPMEVENT23 /;"	d
CSR_MHPMEVENT24	riscv/encoding.h	/^#define CSR_MHPMEVENT24 /;"	d
CSR_MHPMEVENT25	riscv/encoding.h	/^#define CSR_MHPMEVENT25 /;"	d
CSR_MHPMEVENT26	riscv/encoding.h	/^#define CSR_MHPMEVENT26 /;"	d
CSR_MHPMEVENT27	riscv/encoding.h	/^#define CSR_MHPMEVENT27 /;"	d
CSR_MHPMEVENT28	riscv/encoding.h	/^#define CSR_MHPMEVENT28 /;"	d
CSR_MHPMEVENT29	riscv/encoding.h	/^#define CSR_MHPMEVENT29 /;"	d
CSR_MHPMEVENT3	riscv/encoding.h	/^#define CSR_MHPMEVENT3 /;"	d
CSR_MHPMEVENT30	riscv/encoding.h	/^#define CSR_MHPMEVENT30 /;"	d
CSR_MHPMEVENT31	riscv/encoding.h	/^#define CSR_MHPMEVENT31 /;"	d
CSR_MHPMEVENT4	riscv/encoding.h	/^#define CSR_MHPMEVENT4 /;"	d
CSR_MHPMEVENT5	riscv/encoding.h	/^#define CSR_MHPMEVENT5 /;"	d
CSR_MHPMEVENT6	riscv/encoding.h	/^#define CSR_MHPMEVENT6 /;"	d
CSR_MHPMEVENT7	riscv/encoding.h	/^#define CSR_MHPMEVENT7 /;"	d
CSR_MHPMEVENT8	riscv/encoding.h	/^#define CSR_MHPMEVENT8 /;"	d
CSR_MHPMEVENT9	riscv/encoding.h	/^#define CSR_MHPMEVENT9 /;"	d
CSR_MIDELEG	riscv/encoding.h	/^#define CSR_MIDELEG /;"	d
CSR_MIE	riscv/encoding.h	/^#define CSR_MIE /;"	d
CSR_MIMPID	riscv/encoding.h	/^#define CSR_MIMPID /;"	d
CSR_MINSTRET	riscv/encoding.h	/^#define CSR_MINSTRET /;"	d
CSR_MINSTRETH	riscv/encoding.h	/^#define CSR_MINSTRETH /;"	d
CSR_MINTSTATUS	riscv/encoding.h	/^#define CSR_MINTSTATUS /;"	d
CSR_MIP	riscv/encoding.h	/^#define CSR_MIP /;"	d
CSR_MISA	riscv/encoding.h	/^#define CSR_MISA /;"	d
CSR_MNXTI	riscv/encoding.h	/^#define CSR_MNXTI /;"	d
CSR_MSCRATCH	riscv/encoding.h	/^#define CSR_MSCRATCH /;"	d
CSR_MSCRATCHCSW	riscv/encoding.h	/^#define CSR_MSCRATCHCSW /;"	d
CSR_MSCRATCHCSWL	riscv/encoding.h	/^#define CSR_MSCRATCHCSWL /;"	d
CSR_MSTATUS	riscv/encoding.h	/^#define CSR_MSTATUS /;"	d
CSR_MSTATUSH	riscv/encoding.h	/^#define CSR_MSTATUSH /;"	d
CSR_MTINST	riscv/encoding.h	/^#define CSR_MTINST /;"	d
CSR_MTVAL	riscv/encoding.h	/^#define CSR_MTVAL /;"	d
CSR_MTVAL2	riscv/encoding.h	/^#define CSR_MTVAL2 /;"	d
CSR_MTVEC	riscv/encoding.h	/^#define CSR_MTVEC /;"	d
CSR_MTVT	riscv/encoding.h	/^#define CSR_MTVT /;"	d
CSR_MVENDORID	riscv/encoding.h	/^#define CSR_MVENDORID /;"	d
CSR_PMPADDR0	riscv/encoding.h	/^#define CSR_PMPADDR0 /;"	d
CSR_PMPADDR1	riscv/encoding.h	/^#define CSR_PMPADDR1 /;"	d
CSR_PMPADDR10	riscv/encoding.h	/^#define CSR_PMPADDR10 /;"	d
CSR_PMPADDR11	riscv/encoding.h	/^#define CSR_PMPADDR11 /;"	d
CSR_PMPADDR12	riscv/encoding.h	/^#define CSR_PMPADDR12 /;"	d
CSR_PMPADDR13	riscv/encoding.h	/^#define CSR_PMPADDR13 /;"	d
CSR_PMPADDR14	riscv/encoding.h	/^#define CSR_PMPADDR14 /;"	d
CSR_PMPADDR15	riscv/encoding.h	/^#define CSR_PMPADDR15 /;"	d
CSR_PMPADDR2	riscv/encoding.h	/^#define CSR_PMPADDR2 /;"	d
CSR_PMPADDR3	riscv/encoding.h	/^#define CSR_PMPADDR3 /;"	d
CSR_PMPADDR4	riscv/encoding.h	/^#define CSR_PMPADDR4 /;"	d
CSR_PMPADDR5	riscv/encoding.h	/^#define CSR_PMPADDR5 /;"	d
CSR_PMPADDR6	riscv/encoding.h	/^#define CSR_PMPADDR6 /;"	d
CSR_PMPADDR7	riscv/encoding.h	/^#define CSR_PMPADDR7 /;"	d
CSR_PMPADDR8	riscv/encoding.h	/^#define CSR_PMPADDR8 /;"	d
CSR_PMPADDR9	riscv/encoding.h	/^#define CSR_PMPADDR9 /;"	d
CSR_PMPCFG0	riscv/encoding.h	/^#define CSR_PMPCFG0 /;"	d
CSR_PMPCFG1	riscv/encoding.h	/^#define CSR_PMPCFG1 /;"	d
CSR_PMPCFG2	riscv/encoding.h	/^#define CSR_PMPCFG2 /;"	d
CSR_PMPCFG3	riscv/encoding.h	/^#define CSR_PMPCFG3 /;"	d
CSR_SATP	riscv/encoding.h	/^#define CSR_SATP /;"	d
CSR_SCAUSE	riscv/encoding.h	/^#define CSR_SCAUSE /;"	d
CSR_SCONTEXT	riscv/debug_defines.h	/^#define CSR_SCONTEXT /;"	d
CSR_SCONTEXT_DATA	riscv/debug_defines.h	/^#define CSR_SCONTEXT_DATA /;"	d
CSR_SCONTEXT_DATA_LENGTH	riscv/debug_defines.h	/^#define CSR_SCONTEXT_DATA_LENGTH /;"	d
CSR_SCONTEXT_DATA_OFFSET	riscv/debug_defines.h	/^#define CSR_SCONTEXT_DATA_OFFSET /;"	d
CSR_SCOUNTEREN	riscv/encoding.h	/^#define CSR_SCOUNTEREN /;"	d
CSR_SEDELEG	riscv/encoding.h	/^#define CSR_SEDELEG /;"	d
CSR_SEPC	riscv/encoding.h	/^#define CSR_SEPC /;"	d
CSR_SIDELEG	riscv/encoding.h	/^#define CSR_SIDELEG /;"	d
CSR_SIE	riscv/encoding.h	/^#define CSR_SIE /;"	d
CSR_SINTSTATUS	riscv/encoding.h	/^#define CSR_SINTSTATUS /;"	d
CSR_SIP	riscv/encoding.h	/^#define CSR_SIP /;"	d
CSR_SNXTI	riscv/encoding.h	/^#define CSR_SNXTI /;"	d
CSR_SSCRATCH	riscv/encoding.h	/^#define CSR_SSCRATCH /;"	d
CSR_SSCRATCHCSW	riscv/encoding.h	/^#define CSR_SSCRATCHCSW /;"	d
CSR_SSCRATCHCSWL	riscv/encoding.h	/^#define CSR_SSCRATCHCSWL /;"	d
CSR_SSTATUS	riscv/encoding.h	/^#define CSR_SSTATUS /;"	d
CSR_STVAL	riscv/encoding.h	/^#define CSR_STVAL /;"	d
CSR_STVEC	riscv/encoding.h	/^#define CSR_STVEC /;"	d
CSR_STVT	riscv/encoding.h	/^#define CSR_STVT /;"	d
CSR_TCONTROL	riscv/debug_defines.h	/^#define CSR_TCONTROL /;"	d
CSR_TCONTROL_MPTE	riscv/debug_defines.h	/^#define CSR_TCONTROL_MPTE /;"	d
CSR_TCONTROL_MPTE_LENGTH	riscv/debug_defines.h	/^#define CSR_TCONTROL_MPTE_LENGTH /;"	d
CSR_TCONTROL_MPTE_OFFSET	riscv/debug_defines.h	/^#define CSR_TCONTROL_MPTE_OFFSET /;"	d
CSR_TCONTROL_MTE	riscv/debug_defines.h	/^#define CSR_TCONTROL_MTE /;"	d
CSR_TCONTROL_MTE_LENGTH	riscv/debug_defines.h	/^#define CSR_TCONTROL_MTE_LENGTH /;"	d
CSR_TCONTROL_MTE_OFFSET	riscv/debug_defines.h	/^#define CSR_TCONTROL_MTE_OFFSET /;"	d
CSR_TDATA1	fesvr/debug_defines.h	/^#define CSR_TDATA1 /;"	d
CSR_TDATA1	riscv/debug_defines.h	/^#define CSR_TDATA1 /;"	d
CSR_TDATA1	riscv/encoding.h	/^#define CSR_TDATA1 /;"	d
CSR_TDATA1_DATA	fesvr/debug_defines.h	/^#define CSR_TDATA1_DATA /;"	d
CSR_TDATA1_DATA	riscv/debug_defines.h	/^#define CSR_TDATA1_DATA /;"	d
CSR_TDATA1_DATA_LENGTH	fesvr/debug_defines.h	/^#define CSR_TDATA1_DATA_LENGTH /;"	d
CSR_TDATA1_DATA_LENGTH	riscv/debug_defines.h	/^#define CSR_TDATA1_DATA_LENGTH /;"	d
CSR_TDATA1_DATA_OFFSET	fesvr/debug_defines.h	/^#define CSR_TDATA1_DATA_OFFSET /;"	d
CSR_TDATA1_DATA_OFFSET	riscv/debug_defines.h	/^#define CSR_TDATA1_DATA_OFFSET /;"	d
CSR_TDATA1_DMODE	riscv/debug_defines.h	/^#define CSR_TDATA1_DMODE /;"	d
CSR_TDATA1_DMODE_LENGTH	riscv/debug_defines.h	/^#define CSR_TDATA1_DMODE_LENGTH /;"	d
CSR_TDATA1_DMODE_OFFSET	riscv/debug_defines.h	/^#define CSR_TDATA1_DMODE_OFFSET /;"	d
CSR_TDATA1_HMODE	fesvr/debug_defines.h	/^#define CSR_TDATA1_HMODE /;"	d
CSR_TDATA1_HMODE_LENGTH	fesvr/debug_defines.h	/^#define CSR_TDATA1_HMODE_LENGTH /;"	d
CSR_TDATA1_HMODE_OFFSET	fesvr/debug_defines.h	/^#define CSR_TDATA1_HMODE_OFFSET /;"	d
CSR_TDATA1_TYPE	fesvr/debug_defines.h	/^#define CSR_TDATA1_TYPE /;"	d
CSR_TDATA1_TYPE	riscv/debug_defines.h	/^#define CSR_TDATA1_TYPE /;"	d
CSR_TDATA1_TYPE_LENGTH	fesvr/debug_defines.h	/^#define CSR_TDATA1_TYPE_LENGTH /;"	d
CSR_TDATA1_TYPE_LENGTH	riscv/debug_defines.h	/^#define CSR_TDATA1_TYPE_LENGTH /;"	d
CSR_TDATA1_TYPE_OFFSET	fesvr/debug_defines.h	/^#define CSR_TDATA1_TYPE_OFFSET /;"	d
CSR_TDATA1_TYPE_OFFSET	riscv/debug_defines.h	/^#define CSR_TDATA1_TYPE_OFFSET /;"	d
CSR_TDATA2	fesvr/debug_defines.h	/^#define CSR_TDATA2 /;"	d
CSR_TDATA2	riscv/debug_defines.h	/^#define CSR_TDATA2 /;"	d
CSR_TDATA2	riscv/encoding.h	/^#define CSR_TDATA2 /;"	d
CSR_TDATA2_DATA	fesvr/debug_defines.h	/^#define CSR_TDATA2_DATA /;"	d
CSR_TDATA2_DATA	riscv/debug_defines.h	/^#define CSR_TDATA2_DATA /;"	d
CSR_TDATA2_DATA_LENGTH	fesvr/debug_defines.h	/^#define CSR_TDATA2_DATA_LENGTH /;"	d
CSR_TDATA2_DATA_LENGTH	riscv/debug_defines.h	/^#define CSR_TDATA2_DATA_LENGTH /;"	d
CSR_TDATA2_DATA_OFFSET	fesvr/debug_defines.h	/^#define CSR_TDATA2_DATA_OFFSET /;"	d
CSR_TDATA2_DATA_OFFSET	riscv/debug_defines.h	/^#define CSR_TDATA2_DATA_OFFSET /;"	d
CSR_TDATA3	fesvr/debug_defines.h	/^#define CSR_TDATA3 /;"	d
CSR_TDATA3	riscv/debug_defines.h	/^#define CSR_TDATA3 /;"	d
CSR_TDATA3	riscv/encoding.h	/^#define CSR_TDATA3 /;"	d
CSR_TDATA3_DATA	fesvr/debug_defines.h	/^#define CSR_TDATA3_DATA /;"	d
CSR_TDATA3_DATA	riscv/debug_defines.h	/^#define CSR_TDATA3_DATA /;"	d
CSR_TDATA3_DATA_LENGTH	fesvr/debug_defines.h	/^#define CSR_TDATA3_DATA_LENGTH /;"	d
CSR_TDATA3_DATA_LENGTH	riscv/debug_defines.h	/^#define CSR_TDATA3_DATA_LENGTH /;"	d
CSR_TDATA3_DATA_OFFSET	fesvr/debug_defines.h	/^#define CSR_TDATA3_DATA_OFFSET /;"	d
CSR_TDATA3_DATA_OFFSET	riscv/debug_defines.h	/^#define CSR_TDATA3_DATA_OFFSET /;"	d
CSR_TEXTRA32	riscv/debug_defines.h	/^#define CSR_TEXTRA32 /;"	d
CSR_TEXTRA32_MSELECT	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MSELECT /;"	d
CSR_TEXTRA32_MSELECT_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MSELECT_LENGTH /;"	d
CSR_TEXTRA32_MSELECT_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MSELECT_OFFSET /;"	d
CSR_TEXTRA32_MVALUE	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MVALUE /;"	d
CSR_TEXTRA32_MVALUE_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MVALUE_LENGTH /;"	d
CSR_TEXTRA32_MVALUE_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA32_MVALUE_OFFSET /;"	d
CSR_TEXTRA32_SSELECT	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SSELECT /;"	d
CSR_TEXTRA32_SSELECT_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SSELECT_LENGTH /;"	d
CSR_TEXTRA32_SSELECT_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SSELECT_OFFSET /;"	d
CSR_TEXTRA32_SVALUE	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SVALUE /;"	d
CSR_TEXTRA32_SVALUE_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SVALUE_LENGTH /;"	d
CSR_TEXTRA32_SVALUE_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA32_SVALUE_OFFSET /;"	d
CSR_TEXTRA64	riscv/debug_defines.h	/^#define CSR_TEXTRA64 /;"	d
CSR_TEXTRA64_MSELECT	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MSELECT /;"	d
CSR_TEXTRA64_MSELECT_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MSELECT_LENGTH /;"	d
CSR_TEXTRA64_MSELECT_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MSELECT_OFFSET /;"	d
CSR_TEXTRA64_MVALUE	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MVALUE /;"	d
CSR_TEXTRA64_MVALUE_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MVALUE_LENGTH /;"	d
CSR_TEXTRA64_MVALUE_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA64_MVALUE_OFFSET /;"	d
CSR_TEXTRA64_SSELECT	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SSELECT /;"	d
CSR_TEXTRA64_SSELECT_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SSELECT_LENGTH /;"	d
CSR_TEXTRA64_SSELECT_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SSELECT_OFFSET /;"	d
CSR_TEXTRA64_SVALUE	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SVALUE /;"	d
CSR_TEXTRA64_SVALUE_LENGTH	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SVALUE_LENGTH /;"	d
CSR_TEXTRA64_SVALUE_OFFSET	riscv/debug_defines.h	/^#define CSR_TEXTRA64_SVALUE_OFFSET /;"	d
CSR_TIME	riscv/encoding.h	/^#define CSR_TIME /;"	d
CSR_TIMEH	riscv/encoding.h	/^#define CSR_TIMEH /;"	d
CSR_TINFO	riscv/debug_defines.h	/^#define CSR_TINFO /;"	d
CSR_TINFO_INFO	riscv/debug_defines.h	/^#define CSR_TINFO_INFO /;"	d
CSR_TINFO_INFO_LENGTH	riscv/debug_defines.h	/^#define CSR_TINFO_INFO_LENGTH /;"	d
CSR_TINFO_INFO_OFFSET	riscv/debug_defines.h	/^#define CSR_TINFO_INFO_OFFSET /;"	d
CSR_TSELECT	fesvr/debug_defines.h	/^#define CSR_TSELECT /;"	d
CSR_TSELECT	riscv/debug_defines.h	/^#define CSR_TSELECT /;"	d
CSR_TSELECT	riscv/encoding.h	/^#define CSR_TSELECT /;"	d
CSR_TSELECT_INDEX	fesvr/debug_defines.h	/^#define CSR_TSELECT_INDEX /;"	d
CSR_TSELECT_INDEX	riscv/debug_defines.h	/^#define CSR_TSELECT_INDEX /;"	d
CSR_TSELECT_INDEX_LENGTH	fesvr/debug_defines.h	/^#define CSR_TSELECT_INDEX_LENGTH /;"	d
CSR_TSELECT_INDEX_LENGTH	riscv/debug_defines.h	/^#define CSR_TSELECT_INDEX_LENGTH /;"	d
CSR_TSELECT_INDEX_OFFSET	fesvr/debug_defines.h	/^#define CSR_TSELECT_INDEX_OFFSET /;"	d
CSR_TSELECT_INDEX_OFFSET	riscv/debug_defines.h	/^#define CSR_TSELECT_INDEX_OFFSET /;"	d
CSR_UCAUSE	riscv/encoding.h	/^#define CSR_UCAUSE /;"	d
CSR_UEPC	riscv/encoding.h	/^#define CSR_UEPC /;"	d
CSR_UIE	riscv/encoding.h	/^#define CSR_UIE /;"	d
CSR_UINTSTATUS	riscv/encoding.h	/^#define CSR_UINTSTATUS /;"	d
CSR_UIP	riscv/encoding.h	/^#define CSR_UIP /;"	d
CSR_UNXTI	riscv/encoding.h	/^#define CSR_UNXTI /;"	d
CSR_USCRATCH	riscv/encoding.h	/^#define CSR_USCRATCH /;"	d
CSR_USCRATCHCSW	riscv/encoding.h	/^#define CSR_USCRATCHCSW /;"	d
CSR_USCRATCHCSWL	riscv/encoding.h	/^#define CSR_USCRATCHCSWL /;"	d
CSR_USTATUS	riscv/encoding.h	/^#define CSR_USTATUS /;"	d
CSR_UTVAL	riscv/encoding.h	/^#define CSR_UTVAL /;"	d
CSR_UTVEC	riscv/encoding.h	/^#define CSR_UTVEC /;"	d
CSR_UTVT	riscv/encoding.h	/^#define CSR_UTVT /;"	d
CSR_VCSR	riscv/encoding.h	/^#define CSR_VCSR /;"	d
CSR_VL	riscv/encoding.h	/^#define CSR_VL /;"	d
CSR_VLENB	riscv/encoding.h	/^#define CSR_VLENB /;"	d
CSR_VSATP	riscv/encoding.h	/^#define CSR_VSATP /;"	d
CSR_VSCAUSE	riscv/encoding.h	/^#define CSR_VSCAUSE /;"	d
CSR_VSEPC	riscv/encoding.h	/^#define CSR_VSEPC /;"	d
CSR_VSIE	riscv/encoding.h	/^#define CSR_VSIE /;"	d
CSR_VSIP	riscv/encoding.h	/^#define CSR_VSIP /;"	d
CSR_VSSCRATCH	riscv/encoding.h	/^#define CSR_VSSCRATCH /;"	d
CSR_VSSTATUS	riscv/encoding.h	/^#define CSR_VSSTATUS /;"	d
CSR_VSTART	riscv/encoding.h	/^#define CSR_VSTART /;"	d
CSR_VSTVAL	riscv/encoding.h	/^#define CSR_VSTVAL /;"	d
CSR_VSTVEC	riscv/encoding.h	/^#define CSR_VSTVEC /;"	d
CSR_VTYPE	riscv/encoding.h	/^#define CSR_VTYPE /;"	d
CSR_VXRM	riscv/encoding.h	/^#define CSR_VXRM /;"	d
CSR_VXSAT	riscv/encoding.h	/^#define CSR_VXSAT /;"	d
CUSTOMEXT_ENABLED	build/config.h	/^#define CUSTOMEXT_ENABLED /;"	d
CXX	Makefile.in	/^CXX           := @CXX@$/;"	m
CXX	build/Makefile	/^CXX           := g++$/;"	m
Compiling and Running a Simple C Program	README.md	/^Compiling and Running a Simple C Program$/;"	s
D	riscv/debug_module.cc	/^#  define D(/;"	d	file:
D	riscv/jtag_dtm.cc	/^#  define D(/;"	d	file:
D	riscv/remote_bitbang.cc	/^#  define D(/;"	d	file:
DCSR_CAUSE	riscv/encoding.h	/^#define DCSR_CAUSE /;"	d
DCSR_CAUSE_DEBUGINT	riscv/encoding.h	/^#define DCSR_CAUSE_DEBUGINT /;"	d
DCSR_CAUSE_GROUP	riscv/encoding.h	/^#define DCSR_CAUSE_GROUP /;"	d
DCSR_CAUSE_HALT	riscv/encoding.h	/^#define DCSR_CAUSE_HALT /;"	d
DCSR_CAUSE_HWBP	riscv/encoding.h	/^#define DCSR_CAUSE_HWBP /;"	d
DCSR_CAUSE_NONE	riscv/encoding.h	/^#define DCSR_CAUSE_NONE /;"	d
DCSR_CAUSE_STEP	riscv/encoding.h	/^#define DCSR_CAUSE_STEP /;"	d
DCSR_CAUSE_SWBP	riscv/encoding.h	/^#define DCSR_CAUSE_SWBP /;"	d
DCSR_DEBUGINT	riscv/encoding.h	/^#define DCSR_DEBUGINT /;"	d
DCSR_EBREAKH	riscv/encoding.h	/^#define DCSR_EBREAKH /;"	d
DCSR_EBREAKM	riscv/encoding.h	/^#define DCSR_EBREAKM /;"	d
DCSR_EBREAKS	riscv/encoding.h	/^#define DCSR_EBREAKS /;"	d
DCSR_EBREAKU	riscv/encoding.h	/^#define DCSR_EBREAKU /;"	d
DCSR_FULLRESET	riscv/encoding.h	/^#define DCSR_FULLRESET /;"	d
DCSR_HALT	riscv/encoding.h	/^#define DCSR_HALT /;"	d
DCSR_NDRESET	riscv/encoding.h	/^#define DCSR_NDRESET /;"	d
DCSR_PRV	riscv/encoding.h	/^#define DCSR_PRV /;"	d
DCSR_STEP	riscv/encoding.h	/^#define DCSR_STEP /;"	d
DCSR_STOPCYCLE	riscv/encoding.h	/^#define DCSR_STOPCYCLE /;"	d
DCSR_STOPTIME	riscv/encoding.h	/^#define DCSR_STOPTIME /;"	d
DCSR_XDEBUGVER	riscv/encoding.h	/^#define DCSR_XDEBUGVER /;"	d
DEBUG_END	riscv/decode.h	/^#define DEBUG_END /;"	d
DEBUG_ROM_DEFINES_H	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_DEFINES_H$/;"	d
DEBUG_ROM_ENTRY	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_ENTRY /;"	d
DEBUG_ROM_EXCEPTION	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_EXCEPTION /;"	d
DEBUG_ROM_FLAGS	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_FLAGS /;"	d
DEBUG_ROM_FLAG_GO	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_FLAG_GO /;"	d
DEBUG_ROM_FLAG_RESUME	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_FLAG_RESUME /;"	d
DEBUG_ROM_GOING	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_GOING /;"	d
DEBUG_ROM_HALTED	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_HALTED /;"	d
DEBUG_ROM_RESUMING	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_RESUMING /;"	d
DEBUG_ROM_TVEC	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_TVEC /;"	d
DEBUG_ROM_WHERETO	riscv/debug_rom_defines.h	/^#define DEBUG_ROM_WHERETO /;"	d
DEBUG_RVV	riscv/decode.h	/^#define DEBUG_RVV /;"	d
DEBUG_RVV_FMA_VF	riscv/decode.h	/^#define DEBUG_RVV_FMA_VF /;"	d
DEBUG_RVV_FMA_VV	riscv/decode.h	/^#define DEBUG_RVV_FMA_VV /;"	d
DEBUG_RVV_FP_VF	riscv/decode.h	/^#define DEBUG_RVV_FP_VF /;"	d
DEBUG_RVV_FP_VV	riscv/decode.h	/^#define DEBUG_RVV_FP_VV /;"	d
DEBUG_START	riscv/decode.h	/^#define DEBUG_START /;"	d
DECLARE_CSR	disasm/disasm.cc	/^      #define DECLARE_CSR(/;"	d	file:
DECLARE_CSR	disasm/regnames.cc	/^    #define DECLARE_CSR(/;"	d	file:
DECLARE_CSR	riscv/interactive.cc	/^      #define DECLARE_CSR(/;"	d	file:
DECLARE_INSN	disasm/disasm.cc	/^  #define DECLARE_INSN(/;"	d	file:
DECLARE_INSN	riscv/processor.cc	/^  #define DECLARE_INSN(/;"	d	file:
DECLARE_INST_TRAP	riscv/trap.h	/^#define DECLARE_INST_TRAP(/;"	d
DECLARE_MEM_TRAP	riscv/trap.h	/^#define DECLARE_MEM_TRAP(/;"	d
DECLARE_TRAP	riscv/trap.h	/^#define DECLARE_TRAP(/;"	d
DEFAULT_ISA	build/config.h	/^#define DEFAULT_ISA /;"	d
DEFAULT_ISA	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_ISA], "$withval", [Default value for --isa switch]),$/;"	d
DEFAULT_ISA	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_ISA], "RV64IMAFDC", [Default value for --isa switch]))$/;"	d
DEFAULT_PRIV	build/config.h	/^#define DEFAULT_PRIV /;"	d
DEFAULT_PRIV	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_PRIV], "$withval", [Default value for --priv switch]),$/;"	d
DEFAULT_PRIV	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_PRIV], "MSU", [Default value for --priv switch]))$/;"	d
DEFAULT_RSTVEC	riscv/encoding.h	/^#define DEFAULT_RSTVEC /;"	d
DEFAULT_VARCH	build/config.h	/^#define DEFAULT_VARCH /;"	d
DEFAULT_VARCH	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_VARCH], "$withval", [Default value for --varch switch]),$/;"	d
DEFAULT_VARCH	riscv/riscv.ac	/^  AC_DEFINE_UNQUOTED([DEFAULT_VARCH], ["vlen:128,elen:64,slen:128"], [Default value for --varch /;"	d
DEFINE_B0TYPE	disasm/disasm.cc	/^  #define DEFINE_B0TYPE(/;"	d	file:
DEFINE_B1TYPE	disasm/disasm.cc	/^  #define DEFINE_B1TYPE(/;"	d	file:
DEFINE_BTYPE	disasm/disasm.cc	/^  #define DEFINE_BTYPE(/;"	d	file:
DEFINE_FLOAD	disasm/disasm.cc	/^  #define DEFINE_FLOAD(/;"	d	file:
DEFINE_FR1TYPE	disasm/disasm.cc	/^  #define DEFINE_FR1TYPE(/;"	d	file:
DEFINE_FR3TYPE	disasm/disasm.cc	/^  #define DEFINE_FR3TYPE(/;"	d	file:
DEFINE_FRTYPE	disasm/disasm.cc	/^  #define DEFINE_FRTYPE(/;"	d	file:
DEFINE_FSTORE	disasm/disasm.cc	/^  #define DEFINE_FSTORE(/;"	d	file:
DEFINE_FX2TYPE	disasm/disasm.cc	/^  #define DEFINE_FX2TYPE(/;"	d	file:
DEFINE_FXTYPE	disasm/disasm.cc	/^  #define DEFINE_FXTYPE(/;"	d	file:
DEFINE_I0TYPE	disasm/disasm.cc	/^  #define DEFINE_I0TYPE(/;"	d	file:
DEFINE_I1TYPE	disasm/disasm.cc	/^  #define DEFINE_I1TYPE(/;"	d	file:
DEFINE_I2TYPE	disasm/disasm.cc	/^  #define DEFINE_I2TYPE(/;"	d	file:
DEFINE_INSN	riscv/processor.cc	/^  #define DEFINE_INSN(/;"	d	file:
DEFINE_ITYPE	disasm/disasm.cc	/^  #define DEFINE_ITYPE(/;"	d	file:
DEFINE_ITYPE_SHIFT	disasm/disasm.cc	/^  #define DEFINE_ITYPE_SHIFT(/;"	d	file:
DEFINE_LTYPE	disasm/disasm.cc	/^  #define DEFINE_LTYPE(/;"	d	file:
DEFINE_NOARG	disasm/disasm.cc	/^  #define DEFINE_NOARG(/;"	d	file:
DEFINE_RTYPE	disasm/disasm.cc	/^  #define DEFINE_RTYPE(/;"	d	file:
DEFINE_SFENCE_TYPE	disasm/disasm.cc	/^  #define DEFINE_SFENCE_TYPE(/;"	d	file:
DEFINE_XAMO	disasm/disasm.cc	/^  #define DEFINE_XAMO(/;"	d	file:
DEFINE_XAMO_LR	disasm/disasm.cc	/^  #define DEFINE_XAMO_LR(/;"	d	file:
DEFINE_XFTYPE	disasm/disasm.cc	/^  #define DEFINE_XFTYPE(/;"	d	file:
DEFINE_XLOAD	disasm/disasm.cc	/^  #define DEFINE_XLOAD(/;"	d	file:
DEFINE_XSTORE	disasm/disasm.cc	/^  #define DEFINE_XSTORE(/;"	d	file:
DEPS	debug_rom/Makefile	/^DEPS = debug_rom.S link.ld ..\/riscv\/debug_rom_defines.h ..\/riscv\/encoding.h$/;"	m
DIRTY	riscv/cachesim.h	/^  static const uint64_t DIRTY = 1ULL << 62;$/;"	m	class:cache_sim_t	typeref:typename:const uint64_t
DISASM_INSN	disasm/disasm.cc	/^  #define DISASM_INSN(/;"	d	file:
DISASM_OPIV_M___INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_M___INSN(/;"	d	file:
DISASM_OPIV_S__INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_S__INSN(/;"	d	file:
DISASM_OPIV_S___INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_S___INSN(/;"	d	file:
DISASM_OPIV_VF_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_VF_INSN(/;"	d	file:
DISASM_OPIV_VXIM_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_VXIM_INSN(/;"	d	file:
DISASM_OPIV_VXI_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_VXI_INSN(/;"	d	file:
DISASM_OPIV_VX_M_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_VX_M_INSN(/;"	d	file:
DISASM_OPIV_VX__INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_VX__INSN(/;"	d	file:
DISASM_OPIV_V__INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_V__INSN(/;"	d	file:
DISASM_OPIV_V___INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_V___INSN(/;"	d	file:
DISASM_OPIV_WF_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_WF_INSN(/;"	d	file:
DISASM_OPIV_W___INSN	disasm/disasm.cc	/^  #define DISASM_OPIV_W___INSN(/;"	d	file:
DISASM_OPIV__F_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV__F_INSN(/;"	d	file:
DISASM_OPIV__XI_INSN	disasm/disasm.cc	/^  #define DISASM_OPIV__XI_INSN(/;"	d	file:
DISASM_OPIV__X__INSN	disasm/disasm.cc	/^  #define DISASM_OPIV__X__INSN(/;"	d	file:
DISASM_ST_WHOLE_INSN	disasm/disasm.cc	/^  #define DISASM_ST_WHOLE_INSN(/;"	d	file:
DISASM_VFUNARY0_INSN	disasm/disasm.cc	/^  #define DISASM_VFUNARY0_INSN(/;"	d	file:
DISASM_VMEM_INSN	disasm/disasm.cc	/^  #define DISASM_VMEM_INSN(/;"	d	file:
DMI_ABSTRACTAUTO	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO /;"	d
DMI_ABSTRACTAUTO	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA_LENGTH /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA_LENGTH /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA_OFFSET /;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECDATA_OFFSET /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_LENGTH /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_LENGTH /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_OFFSET /;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_OFFSET /;"	d
DMI_ABSTRACTCS	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS /;"	d
DMI_ABSTRACTCS	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS /;"	d
DMI_ABSTRACTCS_BUSY	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY /;"	d
DMI_ABSTRACTCS_BUSY	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY /;"	d
DMI_ABSTRACTCS_BUSY_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY_LENGTH /;"	d
DMI_ABSTRACTCS_BUSY_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY_LENGTH /;"	d
DMI_ABSTRACTCS_BUSY_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY_OFFSET /;"	d
DMI_ABSTRACTCS_BUSY_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_BUSY_OFFSET /;"	d
DMI_ABSTRACTCS_CMDERR	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR /;"	d
DMI_ABSTRACTCS_CMDERR	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR /;"	d
DMI_ABSTRACTCS_CMDERR_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR_LENGTH /;"	d
DMI_ABSTRACTCS_CMDERR_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR_LENGTH /;"	d
DMI_ABSTRACTCS_CMDERR_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR_OFFSET /;"	d
DMI_ABSTRACTCS_CMDERR_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_CMDERR_OFFSET /;"	d
DMI_ABSTRACTCS_DATACOUNT	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT /;"	d
DMI_ABSTRACTCS_DATACOUNT	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT /;"	d
DMI_ABSTRACTCS_DATACOUNT_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT_LENGTH /;"	d
DMI_ABSTRACTCS_DATACOUNT_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT_LENGTH /;"	d
DMI_ABSTRACTCS_DATACOUNT_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT_OFFSET /;"	d
DMI_ABSTRACTCS_DATACOUNT_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_DATACOUNT_OFFSET /;"	d
DMI_ABSTRACTCS_PROGBUFSIZE	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGBUFSIZE /;"	d
DMI_ABSTRACTCS_PROGBUFSIZE_LENGTH	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGBUFSIZE_LENGTH /;"	d
DMI_ABSTRACTCS_PROGBUFSIZE_OFFSET	riscv/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGBUFSIZE_OFFSET /;"	d
DMI_ABSTRACTCS_PROGSIZE	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGSIZE /;"	d
DMI_ABSTRACTCS_PROGSIZE_LENGTH	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGSIZE_LENGTH /;"	d
DMI_ABSTRACTCS_PROGSIZE_OFFSET	fesvr/debug_defines.h	/^#define DMI_ABSTRACTCS_PROGSIZE_OFFSET /;"	d
DMI_ADDRESS	riscv/jtag_dtm.cc	/^#define DMI_ADDRESS /;"	d	file:
DMI_AUTHDATA	fesvr/debug_defines.h	/^#define DMI_AUTHDATA /;"	d
DMI_AUTHDATA	riscv/debug_defines.h	/^#define DMI_AUTHDATA /;"	d
DMI_AUTHDATA_DATA	fesvr/debug_defines.h	/^#define DMI_AUTHDATA_DATA /;"	d
DMI_AUTHDATA_DATA	riscv/debug_defines.h	/^#define DMI_AUTHDATA_DATA /;"	d
DMI_AUTHDATA_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_AUTHDATA_DATA_LENGTH /;"	d
DMI_AUTHDATA_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_AUTHDATA_DATA_LENGTH /;"	d
DMI_AUTHDATA_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_AUTHDATA_DATA_OFFSET /;"	d
DMI_AUTHDATA_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_AUTHDATA_DATA_OFFSET /;"	d
DMI_CFGSTRADDR0	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR0 /;"	d
DMI_CFGSTRADDR0_ADDR	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR0_ADDR /;"	d
DMI_CFGSTRADDR0_ADDR_LENGTH	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR0_ADDR_LENGTH /;"	d
DMI_CFGSTRADDR0_ADDR_OFFSET	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR0_ADDR_OFFSET /;"	d
DMI_CFGSTRADDR1	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR1 /;"	d
DMI_CFGSTRADDR2	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR2 /;"	d
DMI_CFGSTRADDR3	fesvr/debug_defines.h	/^#define DMI_CFGSTRADDR3 /;"	d
DMI_COMMAND	fesvr/debug_defines.h	/^#define DMI_COMMAND /;"	d
DMI_COMMAND	riscv/debug_defines.h	/^#define DMI_COMMAND /;"	d
DMI_COMMAND_CMDTYPE	fesvr/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE /;"	d
DMI_COMMAND_CMDTYPE	riscv/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE /;"	d
DMI_COMMAND_CMDTYPE_LENGTH	fesvr/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE_LENGTH /;"	d
DMI_COMMAND_CMDTYPE_LENGTH	riscv/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE_LENGTH /;"	d
DMI_COMMAND_CMDTYPE_OFFSET	fesvr/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE_OFFSET /;"	d
DMI_COMMAND_CMDTYPE_OFFSET	riscv/debug_defines.h	/^#define DMI_COMMAND_CMDTYPE_OFFSET /;"	d
DMI_COMMAND_CONTROL	fesvr/debug_defines.h	/^#define DMI_COMMAND_CONTROL /;"	d
DMI_COMMAND_CONTROL	riscv/debug_defines.h	/^#define DMI_COMMAND_CONTROL /;"	d
DMI_COMMAND_CONTROL_LENGTH	fesvr/debug_defines.h	/^#define DMI_COMMAND_CONTROL_LENGTH /;"	d
DMI_COMMAND_CONTROL_LENGTH	riscv/debug_defines.h	/^#define DMI_COMMAND_CONTROL_LENGTH /;"	d
DMI_COMMAND_CONTROL_OFFSET	fesvr/debug_defines.h	/^#define DMI_COMMAND_CONTROL_OFFSET /;"	d
DMI_COMMAND_CONTROL_OFFSET	riscv/debug_defines.h	/^#define DMI_COMMAND_CONTROL_OFFSET /;"	d
DMI_CONFSTRPTR0	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR0 /;"	d
DMI_CONFSTRPTR0_ADDR	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR0_ADDR /;"	d
DMI_CONFSTRPTR0_ADDR_LENGTH	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR0_ADDR_LENGTH /;"	d
DMI_CONFSTRPTR0_ADDR_OFFSET	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR0_ADDR_OFFSET /;"	d
DMI_CONFSTRPTR1	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR1 /;"	d
DMI_CONFSTRPTR2	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR2 /;"	d
DMI_CONFSTRPTR3	riscv/debug_defines.h	/^#define DMI_CONFSTRPTR3 /;"	d
DMI_CUSTOM	riscv/debug_defines.h	/^#define DMI_CUSTOM /;"	d
DMI_CUSTOM0	riscv/debug_defines.h	/^#define DMI_CUSTOM0 /;"	d
DMI_CUSTOM15	riscv/debug_defines.h	/^#define DMI_CUSTOM15 /;"	d
DMI_DATA	riscv/jtag_dtm.cc	/^#define DMI_DATA /;"	d	file:
DMI_DATA0	fesvr/debug_defines.h	/^#define DMI_DATA0 /;"	d
DMI_DATA0	riscv/debug_defines.h	/^#define DMI_DATA0 /;"	d
DMI_DATA0_DATA	fesvr/debug_defines.h	/^#define DMI_DATA0_DATA /;"	d
DMI_DATA0_DATA	riscv/debug_defines.h	/^#define DMI_DATA0_DATA /;"	d
DMI_DATA0_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_DATA0_DATA_LENGTH /;"	d
DMI_DATA0_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_DATA0_DATA_LENGTH /;"	d
DMI_DATA0_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_DATA0_DATA_OFFSET /;"	d
DMI_DATA0_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_DATA0_DATA_OFFSET /;"	d
DMI_DATA11	fesvr/debug_defines.h	/^#define DMI_DATA11 /;"	d
DMI_DATA11	riscv/debug_defines.h	/^#define DMI_DATA11 /;"	d
DMI_DMCONTROL	fesvr/debug_defines.h	/^#define DMI_DMCONTROL /;"	d
DMI_DMCONTROL	riscv/debug_defines.h	/^#define DMI_DMCONTROL /;"	d
DMI_DMCONTROL_ACKHAVERESET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_ACKHAVERESET /;"	d
DMI_DMCONTROL_ACKHAVERESET_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_ACKHAVERESET_LENGTH /;"	d
DMI_DMCONTROL_ACKHAVERESET_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_ACKHAVERESET_OFFSET /;"	d
DMI_DMCONTROL_CLRRESETHALTREQ	riscv/debug_defines.h	/^#define DMI_DMCONTROL_CLRRESETHALTREQ /;"	d
DMI_DMCONTROL_CLRRESETHALTREQ_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_CLRRESETHALTREQ_LENGTH /;"	d
DMI_DMCONTROL_CLRRESETHALTREQ_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_CLRRESETHALTREQ_OFFSET /;"	d
DMI_DMCONTROL_DMACTIVE	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE /;"	d
DMI_DMCONTROL_DMACTIVE	riscv/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE /;"	d
DMI_DMCONTROL_DMACTIVE_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE_LENGTH /;"	d
DMI_DMCONTROL_DMACTIVE_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE_LENGTH /;"	d
DMI_DMCONTROL_DMACTIVE_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE_OFFSET /;"	d
DMI_DMCONTROL_DMACTIVE_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_DMACTIVE_OFFSET /;"	d
DMI_DMCONTROL_HALTREQ	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ /;"	d
DMI_DMCONTROL_HALTREQ	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ /;"	d
DMI_DMCONTROL_HALTREQ_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ_LENGTH /;"	d
DMI_DMCONTROL_HALTREQ_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ_LENGTH /;"	d
DMI_DMCONTROL_HALTREQ_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ_OFFSET /;"	d
DMI_DMCONTROL_HALTREQ_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HALTREQ_OFFSET /;"	d
DMI_DMCONTROL_HARTRESET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET /;"	d
DMI_DMCONTROL_HARTRESET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET /;"	d
DMI_DMCONTROL_HARTRESET_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET_LENGTH /;"	d
DMI_DMCONTROL_HARTRESET_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET_LENGTH /;"	d
DMI_DMCONTROL_HARTRESET_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET_OFFSET /;"	d
DMI_DMCONTROL_HARTRESET_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTRESET_OFFSET /;"	d
DMI_DMCONTROL_HARTSEL	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTSEL /;"	d
DMI_DMCONTROL_HARTSELHI	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELHI /;"	d
DMI_DMCONTROL_HARTSELHI_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELHI_LENGTH /;"	d
DMI_DMCONTROL_HARTSELHI_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELHI_OFFSET /;"	d
DMI_DMCONTROL_HARTSELLO	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELLO /;"	d
DMI_DMCONTROL_HARTSELLO_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELLO_LENGTH /;"	d
DMI_DMCONTROL_HARTSELLO_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HARTSELLO_OFFSET /;"	d
DMI_DMCONTROL_HARTSEL_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTSEL_LENGTH /;"	d
DMI_DMCONTROL_HARTSEL_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HARTSEL_OFFSET /;"	d
DMI_DMCONTROL_HASEL	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HASEL /;"	d
DMI_DMCONTROL_HASEL	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HASEL /;"	d
DMI_DMCONTROL_HASEL_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HASEL_LENGTH /;"	d
DMI_DMCONTROL_HASEL_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HASEL_LENGTH /;"	d
DMI_DMCONTROL_HASEL_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_HASEL_OFFSET /;"	d
DMI_DMCONTROL_HASEL_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_HASEL_OFFSET /;"	d
DMI_DMCONTROL_NDMRESET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET /;"	d
DMI_DMCONTROL_NDMRESET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET /;"	d
DMI_DMCONTROL_NDMRESET_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET_LENGTH /;"	d
DMI_DMCONTROL_NDMRESET_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET_LENGTH /;"	d
DMI_DMCONTROL_NDMRESET_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET_OFFSET /;"	d
DMI_DMCONTROL_NDMRESET_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_NDMRESET_OFFSET /;"	d
DMI_DMCONTROL_RESUMEREQ	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ /;"	d
DMI_DMCONTROL_RESUMEREQ	riscv/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ /;"	d
DMI_DMCONTROL_RESUMEREQ_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ_LENGTH /;"	d
DMI_DMCONTROL_RESUMEREQ_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ_LENGTH /;"	d
DMI_DMCONTROL_RESUMEREQ_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ_OFFSET /;"	d
DMI_DMCONTROL_RESUMEREQ_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_RESUMEREQ_OFFSET /;"	d
DMI_DMCONTROL_SETRESETHALTREQ	riscv/debug_defines.h	/^#define DMI_DMCONTROL_SETRESETHALTREQ /;"	d
DMI_DMCONTROL_SETRESETHALTREQ_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCONTROL_SETRESETHALTREQ_LENGTH /;"	d
DMI_DMCONTROL_SETRESETHALTREQ_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCONTROL_SETRESETHALTREQ_OFFSET /;"	d
DMI_DMCS2	riscv/debug_defines.h	/^#define DMI_DMCS2 /;"	d
DMI_DMCS2_EXTTRIGGER	riscv/debug_defines.h	/^#define DMI_DMCS2_EXTTRIGGER /;"	d
DMI_DMCS2_EXTTRIGGER_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCS2_EXTTRIGGER_LENGTH /;"	d
DMI_DMCS2_EXTTRIGGER_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCS2_EXTTRIGGER_OFFSET /;"	d
DMI_DMCS2_HALTGROUP	riscv/debug_defines.h	/^#define DMI_DMCS2_HALTGROUP /;"	d
DMI_DMCS2_HALTGROUP_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCS2_HALTGROUP_LENGTH /;"	d
DMI_DMCS2_HALTGROUP_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCS2_HALTGROUP_OFFSET /;"	d
DMI_DMCS2_HGSELECT	riscv/debug_defines.h	/^#define DMI_DMCS2_HGSELECT /;"	d
DMI_DMCS2_HGSELECT_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCS2_HGSELECT_LENGTH /;"	d
DMI_DMCS2_HGSELECT_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCS2_HGSELECT_OFFSET /;"	d
DMI_DMCS2_HGWRITE	riscv/debug_defines.h	/^#define DMI_DMCS2_HGWRITE /;"	d
DMI_DMCS2_HGWRITE_LENGTH	riscv/debug_defines.h	/^#define DMI_DMCS2_HGWRITE_LENGTH /;"	d
DMI_DMCS2_HGWRITE_OFFSET	riscv/debug_defines.h	/^#define DMI_DMCS2_HGWRITE_OFFSET /;"	d
DMI_DMSTATUS	fesvr/debug_defines.h	/^#define DMI_DMSTATUS /;"	d
DMI_DMSTATUS	riscv/debug_defines.h	/^#define DMI_DMSTATUS /;"	d
DMI_DMSTATUS_ALLHALTED	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED /;"	d
DMI_DMSTATUS_ALLHALTED	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED /;"	d
DMI_DMSTATUS_ALLHALTED_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED_LENGTH /;"	d
DMI_DMSTATUS_ALLHALTED_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED_LENGTH /;"	d
DMI_DMSTATUS_ALLHALTED_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED_OFFSET /;"	d
DMI_DMSTATUS_ALLHALTED_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHALTED_OFFSET /;"	d
DMI_DMSTATUS_ALLHAVERESET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHAVERESET /;"	d
DMI_DMSTATUS_ALLHAVERESET_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHAVERESET_LENGTH /;"	d
DMI_DMSTATUS_ALLHAVERESET_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLHAVERESET_OFFSET /;"	d
DMI_DMSTATUS_ALLNONEXISTENT	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT /;"	d
DMI_DMSTATUS_ALLNONEXISTENT	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT /;"	d
DMI_DMSTATUS_ALLNONEXISTENT_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT_LENGTH /;"	d
DMI_DMSTATUS_ALLNONEXISTENT_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT_LENGTH /;"	d
DMI_DMSTATUS_ALLNONEXISTENT_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT_OFFSET /;"	d
DMI_DMSTATUS_ALLNONEXISTENT_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLNONEXISTENT_OFFSET /;"	d
DMI_DMSTATUS_ALLRESUMEACK	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK /;"	d
DMI_DMSTATUS_ALLRESUMEACK	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK /;"	d
DMI_DMSTATUS_ALLRESUMEACK_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK_LENGTH /;"	d
DMI_DMSTATUS_ALLRESUMEACK_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK_LENGTH /;"	d
DMI_DMSTATUS_ALLRESUMEACK_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK_OFFSET /;"	d
DMI_DMSTATUS_ALLRESUMEACK_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRESUMEACK_OFFSET /;"	d
DMI_DMSTATUS_ALLRUNNING	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING /;"	d
DMI_DMSTATUS_ALLRUNNING	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING /;"	d
DMI_DMSTATUS_ALLRUNNING_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING_LENGTH /;"	d
DMI_DMSTATUS_ALLRUNNING_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING_LENGTH /;"	d
DMI_DMSTATUS_ALLRUNNING_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING_OFFSET /;"	d
DMI_DMSTATUS_ALLRUNNING_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLRUNNING_OFFSET /;"	d
DMI_DMSTATUS_ALLUNAVAIL	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL /;"	d
DMI_DMSTATUS_ALLUNAVAIL	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL /;"	d
DMI_DMSTATUS_ALLUNAVAIL_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL_LENGTH /;"	d
DMI_DMSTATUS_ALLUNAVAIL_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL_LENGTH /;"	d
DMI_DMSTATUS_ALLUNAVAIL_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL_OFFSET /;"	d
DMI_DMSTATUS_ALLUNAVAIL_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ALLUNAVAIL_OFFSET /;"	d
DMI_DMSTATUS_ANYHALTED	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED /;"	d
DMI_DMSTATUS_ANYHALTED	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED /;"	d
DMI_DMSTATUS_ANYHALTED_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED_LENGTH /;"	d
DMI_DMSTATUS_ANYHALTED_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED_LENGTH /;"	d
DMI_DMSTATUS_ANYHALTED_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED_OFFSET /;"	d
DMI_DMSTATUS_ANYHALTED_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHALTED_OFFSET /;"	d
DMI_DMSTATUS_ANYHAVERESET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHAVERESET /;"	d
DMI_DMSTATUS_ANYHAVERESET_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHAVERESET_LENGTH /;"	d
DMI_DMSTATUS_ANYHAVERESET_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYHAVERESET_OFFSET /;"	d
DMI_DMSTATUS_ANYNONEXISTENT	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT /;"	d
DMI_DMSTATUS_ANYNONEXISTENT	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT /;"	d
DMI_DMSTATUS_ANYNONEXISTENT_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT_LENGTH /;"	d
DMI_DMSTATUS_ANYNONEXISTENT_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT_LENGTH /;"	d
DMI_DMSTATUS_ANYNONEXISTENT_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT_OFFSET /;"	d
DMI_DMSTATUS_ANYNONEXISTENT_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYNONEXISTENT_OFFSET /;"	d
DMI_DMSTATUS_ANYRESUMEACK	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK /;"	d
DMI_DMSTATUS_ANYRESUMEACK	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK /;"	d
DMI_DMSTATUS_ANYRESUMEACK_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK_LENGTH /;"	d
DMI_DMSTATUS_ANYRESUMEACK_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK_LENGTH /;"	d
DMI_DMSTATUS_ANYRESUMEACK_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK_OFFSET /;"	d
DMI_DMSTATUS_ANYRESUMEACK_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRESUMEACK_OFFSET /;"	d
DMI_DMSTATUS_ANYRUNNING	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING /;"	d
DMI_DMSTATUS_ANYRUNNING	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING /;"	d
DMI_DMSTATUS_ANYRUNNING_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING_LENGTH /;"	d
DMI_DMSTATUS_ANYRUNNING_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING_LENGTH /;"	d
DMI_DMSTATUS_ANYRUNNING_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING_OFFSET /;"	d
DMI_DMSTATUS_ANYRUNNING_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYRUNNING_OFFSET /;"	d
DMI_DMSTATUS_ANYUNAVAIL	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL /;"	d
DMI_DMSTATUS_ANYUNAVAIL	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL /;"	d
DMI_DMSTATUS_ANYUNAVAIL_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL_LENGTH /;"	d
DMI_DMSTATUS_ANYUNAVAIL_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL_LENGTH /;"	d
DMI_DMSTATUS_ANYUNAVAIL_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL_OFFSET /;"	d
DMI_DMSTATUS_ANYUNAVAIL_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_ANYUNAVAIL_OFFSET /;"	d
DMI_DMSTATUS_AUTHBUSY	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY /;"	d
DMI_DMSTATUS_AUTHBUSY	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY /;"	d
DMI_DMSTATUS_AUTHBUSY_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY_LENGTH /;"	d
DMI_DMSTATUS_AUTHBUSY_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY_LENGTH /;"	d
DMI_DMSTATUS_AUTHBUSY_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY_OFFSET /;"	d
DMI_DMSTATUS_AUTHBUSY_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHBUSY_OFFSET /;"	d
DMI_DMSTATUS_AUTHENTICATED	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED /;"	d
DMI_DMSTATUS_AUTHENTICATED	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED /;"	d
DMI_DMSTATUS_AUTHENTICATED_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED_LENGTH /;"	d
DMI_DMSTATUS_AUTHENTICATED_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED_LENGTH /;"	d
DMI_DMSTATUS_AUTHENTICATED_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED_OFFSET /;"	d
DMI_DMSTATUS_AUTHENTICATED_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_AUTHENTICATED_OFFSET /;"	d
DMI_DMSTATUS_CFGSTRVALID	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_CFGSTRVALID /;"	d
DMI_DMSTATUS_CFGSTRVALID_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_CFGSTRVALID_LENGTH /;"	d
DMI_DMSTATUS_CFGSTRVALID_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_CFGSTRVALID_OFFSET /;"	d
DMI_DMSTATUS_CONFSTRPTRVALID	riscv/debug_defines.h	/^#define DMI_DMSTATUS_CONFSTRPTRVALID /;"	d
DMI_DMSTATUS_CONFSTRPTRVALID_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_CONFSTRPTRVALID_LENGTH /;"	d
DMI_DMSTATUS_CONFSTRPTRVALID_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_CONFSTRPTRVALID_OFFSET /;"	d
DMI_DMSTATUS_HASRESETHALTREQ	riscv/debug_defines.h	/^#define DMI_DMSTATUS_HASRESETHALTREQ /;"	d
DMI_DMSTATUS_HASRESETHALTREQ_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_HASRESETHALTREQ_LENGTH /;"	d
DMI_DMSTATUS_HASRESETHALTREQ_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_HASRESETHALTREQ_OFFSET /;"	d
DMI_DMSTATUS_IMPEBREAK	riscv/debug_defines.h	/^#define DMI_DMSTATUS_IMPEBREAK /;"	d
DMI_DMSTATUS_IMPEBREAK_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_IMPEBREAK_LENGTH /;"	d
DMI_DMSTATUS_IMPEBREAK_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_IMPEBREAK_OFFSET /;"	d
DMI_DMSTATUS_VERSION	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_VERSION /;"	d
DMI_DMSTATUS_VERSION	riscv/debug_defines.h	/^#define DMI_DMSTATUS_VERSION /;"	d
DMI_DMSTATUS_VERSION_LENGTH	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_VERSION_LENGTH /;"	d
DMI_DMSTATUS_VERSION_LENGTH	riscv/debug_defines.h	/^#define DMI_DMSTATUS_VERSION_LENGTH /;"	d
DMI_DMSTATUS_VERSION_OFFSET	fesvr/debug_defines.h	/^#define DMI_DMSTATUS_VERSION_OFFSET /;"	d
DMI_DMSTATUS_VERSION_OFFSET	riscv/debug_defines.h	/^#define DMI_DMSTATUS_VERSION_OFFSET /;"	d
DMI_HALTSUM	fesvr/debug_defines.h	/^#define DMI_HALTSUM /;"	d
DMI_HALTSUM0	riscv/debug_defines.h	/^#define DMI_HALTSUM0 /;"	d
DMI_HALTSUM0_HALTSUM0	riscv/debug_defines.h	/^#define DMI_HALTSUM0_HALTSUM0 /;"	d
DMI_HALTSUM0_HALTSUM0_LENGTH	riscv/debug_defines.h	/^#define DMI_HALTSUM0_HALTSUM0_LENGTH /;"	d
DMI_HALTSUM0_HALTSUM0_OFFSET	riscv/debug_defines.h	/^#define DMI_HALTSUM0_HALTSUM0_OFFSET /;"	d
DMI_HALTSUM1	riscv/debug_defines.h	/^#define DMI_HALTSUM1 /;"	d
DMI_HALTSUM1_HALTSUM1	riscv/debug_defines.h	/^#define DMI_HALTSUM1_HALTSUM1 /;"	d
DMI_HALTSUM1_HALTSUM1_LENGTH	riscv/debug_defines.h	/^#define DMI_HALTSUM1_HALTSUM1_LENGTH /;"	d
DMI_HALTSUM1_HALTSUM1_OFFSET	riscv/debug_defines.h	/^#define DMI_HALTSUM1_HALTSUM1_OFFSET /;"	d
DMI_HALTSUM2	riscv/debug_defines.h	/^#define DMI_HALTSUM2 /;"	d
DMI_HALTSUM2_HALTSUM2	riscv/debug_defines.h	/^#define DMI_HALTSUM2_HALTSUM2 /;"	d
DMI_HALTSUM2_HALTSUM2_LENGTH	riscv/debug_defines.h	/^#define DMI_HALTSUM2_HALTSUM2_LENGTH /;"	d
DMI_HALTSUM2_HALTSUM2_OFFSET	riscv/debug_defines.h	/^#define DMI_HALTSUM2_HALTSUM2_OFFSET /;"	d
DMI_HALTSUM3	riscv/debug_defines.h	/^#define DMI_HALTSUM3 /;"	d
DMI_HALTSUM3_HALTSUM3	riscv/debug_defines.h	/^#define DMI_HALTSUM3_HALTSUM3 /;"	d
DMI_HALTSUM3_HALTSUM3_LENGTH	riscv/debug_defines.h	/^#define DMI_HALTSUM3_HALTSUM3_LENGTH /;"	d
DMI_HALTSUM3_HALTSUM3_OFFSET	riscv/debug_defines.h	/^#define DMI_HALTSUM3_HALTSUM3_OFFSET /;"	d
DMI_HALTSUM_HALT1023_992	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT1023_992 /;"	d
DMI_HALTSUM_HALT1023_992_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT1023_992_LENGTH /;"	d
DMI_HALTSUM_HALT1023_992_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT1023_992_OFFSET /;"	d
DMI_HALTSUM_HALT127_96	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT127_96 /;"	d
DMI_HALTSUM_HALT127_96_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT127_96_LENGTH /;"	d
DMI_HALTSUM_HALT127_96_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT127_96_OFFSET /;"	d
DMI_HALTSUM_HALT159_128	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT159_128 /;"	d
DMI_HALTSUM_HALT159_128_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT159_128_LENGTH /;"	d
DMI_HALTSUM_HALT159_128_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT159_128_OFFSET /;"	d
DMI_HALTSUM_HALT191_160	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT191_160 /;"	d
DMI_HALTSUM_HALT191_160_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT191_160_LENGTH /;"	d
DMI_HALTSUM_HALT191_160_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT191_160_OFFSET /;"	d
DMI_HALTSUM_HALT223_192	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT223_192 /;"	d
DMI_HALTSUM_HALT223_192_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT223_192_LENGTH /;"	d
DMI_HALTSUM_HALT223_192_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT223_192_OFFSET /;"	d
DMI_HALTSUM_HALT255_224	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT255_224 /;"	d
DMI_HALTSUM_HALT255_224_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT255_224_LENGTH /;"	d
DMI_HALTSUM_HALT255_224_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT255_224_OFFSET /;"	d
DMI_HALTSUM_HALT287_256	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT287_256 /;"	d
DMI_HALTSUM_HALT287_256_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT287_256_LENGTH /;"	d
DMI_HALTSUM_HALT287_256_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT287_256_OFFSET /;"	d
DMI_HALTSUM_HALT319_288	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT319_288 /;"	d
DMI_HALTSUM_HALT319_288_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT319_288_LENGTH /;"	d
DMI_HALTSUM_HALT319_288_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT319_288_OFFSET /;"	d
DMI_HALTSUM_HALT31_0	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT31_0 /;"	d
DMI_HALTSUM_HALT31_0_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT31_0_LENGTH /;"	d
DMI_HALTSUM_HALT31_0_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT31_0_OFFSET /;"	d
DMI_HALTSUM_HALT351_320	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT351_320 /;"	d
DMI_HALTSUM_HALT351_320_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT351_320_LENGTH /;"	d
DMI_HALTSUM_HALT351_320_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT351_320_OFFSET /;"	d
DMI_HALTSUM_HALT383_352	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT383_352 /;"	d
DMI_HALTSUM_HALT383_352_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT383_352_LENGTH /;"	d
DMI_HALTSUM_HALT383_352_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT383_352_OFFSET /;"	d
DMI_HALTSUM_HALT415_384	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT415_384 /;"	d
DMI_HALTSUM_HALT415_384_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT415_384_LENGTH /;"	d
DMI_HALTSUM_HALT415_384_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT415_384_OFFSET /;"	d
DMI_HALTSUM_HALT447_416	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT447_416 /;"	d
DMI_HALTSUM_HALT447_416_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT447_416_LENGTH /;"	d
DMI_HALTSUM_HALT447_416_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT447_416_OFFSET /;"	d
DMI_HALTSUM_HALT479_448	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT479_448 /;"	d
DMI_HALTSUM_HALT479_448_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT479_448_LENGTH /;"	d
DMI_HALTSUM_HALT479_448_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT479_448_OFFSET /;"	d
DMI_HALTSUM_HALT511_480	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT511_480 /;"	d
DMI_HALTSUM_HALT511_480_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT511_480_LENGTH /;"	d
DMI_HALTSUM_HALT511_480_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT511_480_OFFSET /;"	d
DMI_HALTSUM_HALT543_512	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT543_512 /;"	d
DMI_HALTSUM_HALT543_512_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT543_512_LENGTH /;"	d
DMI_HALTSUM_HALT543_512_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT543_512_OFFSET /;"	d
DMI_HALTSUM_HALT575_544	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT575_544 /;"	d
DMI_HALTSUM_HALT575_544_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT575_544_LENGTH /;"	d
DMI_HALTSUM_HALT575_544_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT575_544_OFFSET /;"	d
DMI_HALTSUM_HALT607_576	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT607_576 /;"	d
DMI_HALTSUM_HALT607_576_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT607_576_LENGTH /;"	d
DMI_HALTSUM_HALT607_576_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT607_576_OFFSET /;"	d
DMI_HALTSUM_HALT639_608	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT639_608 /;"	d
DMI_HALTSUM_HALT639_608_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT639_608_LENGTH /;"	d
DMI_HALTSUM_HALT639_608_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT639_608_OFFSET /;"	d
DMI_HALTSUM_HALT63_32	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT63_32 /;"	d
DMI_HALTSUM_HALT63_32_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT63_32_LENGTH /;"	d
DMI_HALTSUM_HALT63_32_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT63_32_OFFSET /;"	d
DMI_HALTSUM_HALT671_640	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT671_640 /;"	d
DMI_HALTSUM_HALT671_640_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT671_640_LENGTH /;"	d
DMI_HALTSUM_HALT671_640_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT671_640_OFFSET /;"	d
DMI_HALTSUM_HALT703_672	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT703_672 /;"	d
DMI_HALTSUM_HALT703_672_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT703_672_LENGTH /;"	d
DMI_HALTSUM_HALT703_672_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT703_672_OFFSET /;"	d
DMI_HALTSUM_HALT735_704	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT735_704 /;"	d
DMI_HALTSUM_HALT735_704_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT735_704_LENGTH /;"	d
DMI_HALTSUM_HALT735_704_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT735_704_OFFSET /;"	d
DMI_HALTSUM_HALT767_736	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT767_736 /;"	d
DMI_HALTSUM_HALT767_736_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT767_736_LENGTH /;"	d
DMI_HALTSUM_HALT767_736_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT767_736_OFFSET /;"	d
DMI_HALTSUM_HALT799_768	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT799_768 /;"	d
DMI_HALTSUM_HALT799_768_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT799_768_LENGTH /;"	d
DMI_HALTSUM_HALT799_768_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT799_768_OFFSET /;"	d
DMI_HALTSUM_HALT831_800	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT831_800 /;"	d
DMI_HALTSUM_HALT831_800_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT831_800_LENGTH /;"	d
DMI_HALTSUM_HALT831_800_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT831_800_OFFSET /;"	d
DMI_HALTSUM_HALT863_832	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT863_832 /;"	d
DMI_HALTSUM_HALT863_832_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT863_832_LENGTH /;"	d
DMI_HALTSUM_HALT863_832_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT863_832_OFFSET /;"	d
DMI_HALTSUM_HALT895_864	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT895_864 /;"	d
DMI_HALTSUM_HALT895_864_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT895_864_LENGTH /;"	d
DMI_HALTSUM_HALT895_864_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT895_864_OFFSET /;"	d
DMI_HALTSUM_HALT927_896	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT927_896 /;"	d
DMI_HALTSUM_HALT927_896_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT927_896_LENGTH /;"	d
DMI_HALTSUM_HALT927_896_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT927_896_OFFSET /;"	d
DMI_HALTSUM_HALT959_928	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT959_928 /;"	d
DMI_HALTSUM_HALT959_928_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT959_928_LENGTH /;"	d
DMI_HALTSUM_HALT959_928_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT959_928_OFFSET /;"	d
DMI_HALTSUM_HALT95_64	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT95_64 /;"	d
DMI_HALTSUM_HALT95_64_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT95_64_LENGTH /;"	d
DMI_HALTSUM_HALT95_64_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT95_64_OFFSET /;"	d
DMI_HALTSUM_HALT991_960	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT991_960 /;"	d
DMI_HALTSUM_HALT991_960_LENGTH	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT991_960_LENGTH /;"	d
DMI_HALTSUM_HALT991_960_OFFSET	fesvr/debug_defines.h	/^#define DMI_HALTSUM_HALT991_960_OFFSET /;"	d
DMI_HARTINFO	fesvr/debug_defines.h	/^#define DMI_HARTINFO /;"	d
DMI_HARTINFO	riscv/debug_defines.h	/^#define DMI_HARTINFO /;"	d
DMI_HARTINFO_DATAACCESS	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS /;"	d
DMI_HARTINFO_DATAACCESS	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS /;"	d
DMI_HARTINFO_DATAACCESS_LENGTH	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS_LENGTH /;"	d
DMI_HARTINFO_DATAACCESS_LENGTH	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS_LENGTH /;"	d
DMI_HARTINFO_DATAACCESS_OFFSET	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS_OFFSET /;"	d
DMI_HARTINFO_DATAACCESS_OFFSET	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAACCESS_OFFSET /;"	d
DMI_HARTINFO_DATAADDR	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR /;"	d
DMI_HARTINFO_DATAADDR	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR /;"	d
DMI_HARTINFO_DATAADDR_LENGTH	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR_LENGTH /;"	d
DMI_HARTINFO_DATAADDR_LENGTH	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR_LENGTH /;"	d
DMI_HARTINFO_DATAADDR_OFFSET	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR_OFFSET /;"	d
DMI_HARTINFO_DATAADDR_OFFSET	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATAADDR_OFFSET /;"	d
DMI_HARTINFO_DATASIZE	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE /;"	d
DMI_HARTINFO_DATASIZE	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE /;"	d
DMI_HARTINFO_DATASIZE_LENGTH	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE_LENGTH /;"	d
DMI_HARTINFO_DATASIZE_LENGTH	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE_LENGTH /;"	d
DMI_HARTINFO_DATASIZE_OFFSET	fesvr/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE_OFFSET /;"	d
DMI_HARTINFO_DATASIZE_OFFSET	riscv/debug_defines.h	/^#define DMI_HARTINFO_DATASIZE_OFFSET /;"	d
DMI_HARTINFO_NSCRATCH	fesvr/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH /;"	d
DMI_HARTINFO_NSCRATCH	riscv/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH /;"	d
DMI_HARTINFO_NSCRATCH_LENGTH	fesvr/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH_LENGTH /;"	d
DMI_HARTINFO_NSCRATCH_LENGTH	riscv/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH_LENGTH /;"	d
DMI_HARTINFO_NSCRATCH_OFFSET	fesvr/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH_OFFSET /;"	d
DMI_HARTINFO_NSCRATCH_OFFSET	riscv/debug_defines.h	/^#define DMI_HARTINFO_NSCRATCH_OFFSET /;"	d
DMI_HAWINDOW	fesvr/debug_defines.h	/^#define DMI_HAWINDOW /;"	d
DMI_HAWINDOW	riscv/debug_defines.h	/^#define DMI_HAWINDOW /;"	d
DMI_HAWINDOWSEL	fesvr/debug_defines.h	/^#define DMI_HAWINDOWSEL /;"	d
DMI_HAWINDOWSEL	riscv/debug_defines.h	/^#define DMI_HAWINDOWSEL /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL	fesvr/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL	riscv/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_LENGTH	fesvr/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL_LENGTH /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_LENGTH	riscv/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL_LENGTH /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_OFFSET	fesvr/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL_OFFSET /;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_OFFSET	riscv/debug_defines.h	/^#define DMI_HAWINDOWSEL_HAWINDOWSEL_OFFSET /;"	d
DMI_HAWINDOW_MASKDATA	fesvr/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA /;"	d
DMI_HAWINDOW_MASKDATA	riscv/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA /;"	d
DMI_HAWINDOW_MASKDATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA_LENGTH /;"	d
DMI_HAWINDOW_MASKDATA_LENGTH	riscv/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA_LENGTH /;"	d
DMI_HAWINDOW_MASKDATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA_OFFSET /;"	d
DMI_HAWINDOW_MASKDATA_OFFSET	riscv/debug_defines.h	/^#define DMI_HAWINDOW_MASKDATA_OFFSET /;"	d
DMI_NEXTDM	riscv/debug_defines.h	/^#define DMI_NEXTDM /;"	d
DMI_NEXTDM_ADDR	riscv/debug_defines.h	/^#define DMI_NEXTDM_ADDR /;"	d
DMI_NEXTDM_ADDR_LENGTH	riscv/debug_defines.h	/^#define DMI_NEXTDM_ADDR_LENGTH /;"	d
DMI_NEXTDM_ADDR_OFFSET	riscv/debug_defines.h	/^#define DMI_NEXTDM_ADDR_OFFSET /;"	d
DMI_OP	riscv/jtag_dtm.cc	/^#define DMI_OP /;"	d	file:
DMI_OP_NOP	riscv/jtag_dtm.cc	/^#define DMI_OP_NOP	/;"	d	file:
DMI_OP_READ	riscv/jtag_dtm.cc	/^#define DMI_OP_READ	/;"	d	file:
DMI_OP_RESERVED	riscv/jtag_dtm.cc	/^#define DMI_OP_RESERVED	/;"	d	file:
DMI_OP_STATUS_BUSY	riscv/jtag_dtm.cc	/^#define DMI_OP_STATUS_BUSY	/;"	d	file:
DMI_OP_STATUS_FAILED	riscv/jtag_dtm.cc	/^#define DMI_OP_STATUS_FAILED	/;"	d	file:
DMI_OP_STATUS_RESERVED	riscv/jtag_dtm.cc	/^#define DMI_OP_STATUS_RESERVED	/;"	d	file:
DMI_OP_STATUS_SUCCESS	riscv/jtag_dtm.cc	/^#define DMI_OP_STATUS_SUCCESS	/;"	d	file:
DMI_OP_WRITE	riscv/jtag_dtm.cc	/^#define DMI_OP_WRITE	/;"	d	file:
DMI_PROGBUF0	fesvr/debug_defines.h	/^#define DMI_PROGBUF0 /;"	d
DMI_PROGBUF0	riscv/debug_defines.h	/^#define DMI_PROGBUF0 /;"	d
DMI_PROGBUF0_DATA	fesvr/debug_defines.h	/^#define DMI_PROGBUF0_DATA /;"	d
DMI_PROGBUF0_DATA	riscv/debug_defines.h	/^#define DMI_PROGBUF0_DATA /;"	d
DMI_PROGBUF0_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_PROGBUF0_DATA_LENGTH /;"	d
DMI_PROGBUF0_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_PROGBUF0_DATA_LENGTH /;"	d
DMI_PROGBUF0_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_PROGBUF0_DATA_OFFSET /;"	d
DMI_PROGBUF0_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_PROGBUF0_DATA_OFFSET /;"	d
DMI_PROGBUF15	fesvr/debug_defines.h	/^#define DMI_PROGBUF15 /;"	d
DMI_PROGBUF15	riscv/debug_defines.h	/^#define DMI_PROGBUF15 /;"	d
DMI_SBADDRESS0	fesvr/debug_defines.h	/^#define DMI_SBADDRESS0 /;"	d
DMI_SBADDRESS0	riscv/debug_defines.h	/^#define DMI_SBADDRESS0 /;"	d
DMI_SBADDRESS0_ADDRESS	fesvr/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS /;"	d
DMI_SBADDRESS0_ADDRESS	riscv/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS /;"	d
DMI_SBADDRESS0_ADDRESS_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS0_ADDRESS_LENGTH	riscv/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS0_ADDRESS_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS0_ADDRESS_OFFSET	riscv/debug_defines.h	/^#define DMI_SBADDRESS0_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS1	fesvr/debug_defines.h	/^#define DMI_SBADDRESS1 /;"	d
DMI_SBADDRESS1	riscv/debug_defines.h	/^#define DMI_SBADDRESS1 /;"	d
DMI_SBADDRESS1_ADDRESS	fesvr/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS /;"	d
DMI_SBADDRESS1_ADDRESS	riscv/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS /;"	d
DMI_SBADDRESS1_ADDRESS_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS1_ADDRESS_LENGTH	riscv/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS1_ADDRESS_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS1_ADDRESS_OFFSET	riscv/debug_defines.h	/^#define DMI_SBADDRESS1_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS2	fesvr/debug_defines.h	/^#define DMI_SBADDRESS2 /;"	d
DMI_SBADDRESS2	riscv/debug_defines.h	/^#define DMI_SBADDRESS2 /;"	d
DMI_SBADDRESS2_ADDRESS	fesvr/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS /;"	d
DMI_SBADDRESS2_ADDRESS	riscv/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS /;"	d
DMI_SBADDRESS2_ADDRESS_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS2_ADDRESS_LENGTH	riscv/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS2_ADDRESS_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS2_ADDRESS_OFFSET	riscv/debug_defines.h	/^#define DMI_SBADDRESS2_ADDRESS_OFFSET /;"	d
DMI_SBADDRESS3	riscv/debug_defines.h	/^#define DMI_SBADDRESS3 /;"	d
DMI_SBADDRESS3_ADDRESS	riscv/debug_defines.h	/^#define DMI_SBADDRESS3_ADDRESS /;"	d
DMI_SBADDRESS3_ADDRESS_LENGTH	riscv/debug_defines.h	/^#define DMI_SBADDRESS3_ADDRESS_LENGTH /;"	d
DMI_SBADDRESS3_ADDRESS_OFFSET	riscv/debug_defines.h	/^#define DMI_SBADDRESS3_ADDRESS_OFFSET /;"	d
DMI_SBCS	fesvr/debug_defines.h	/^#define DMI_SBCS /;"	d
DMI_SBCS	riscv/debug_defines.h	/^#define DMI_SBCS /;"	d
DMI_SBCS_SBACCESS	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS /;"	d
DMI_SBCS_SBACCESS	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS /;"	d
DMI_SBCS_SBACCESS128	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS128 /;"	d
DMI_SBCS_SBACCESS128	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS128 /;"	d
DMI_SBCS_SBACCESS128_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS128_LENGTH /;"	d
DMI_SBCS_SBACCESS128_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS128_LENGTH /;"	d
DMI_SBCS_SBACCESS128_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS128_OFFSET /;"	d
DMI_SBCS_SBACCESS128_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS128_OFFSET /;"	d
DMI_SBCS_SBACCESS16	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS16 /;"	d
DMI_SBCS_SBACCESS16	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS16 /;"	d
DMI_SBCS_SBACCESS16_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS16_LENGTH /;"	d
DMI_SBCS_SBACCESS16_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS16_LENGTH /;"	d
DMI_SBCS_SBACCESS16_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS16_OFFSET /;"	d
DMI_SBCS_SBACCESS16_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS16_OFFSET /;"	d
DMI_SBCS_SBACCESS32	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS32 /;"	d
DMI_SBCS_SBACCESS32	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS32 /;"	d
DMI_SBCS_SBACCESS32_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS32_LENGTH /;"	d
DMI_SBCS_SBACCESS32_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS32_LENGTH /;"	d
DMI_SBCS_SBACCESS32_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS32_OFFSET /;"	d
DMI_SBCS_SBACCESS32_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS32_OFFSET /;"	d
DMI_SBCS_SBACCESS64	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS64 /;"	d
DMI_SBCS_SBACCESS64	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS64 /;"	d
DMI_SBCS_SBACCESS64_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS64_LENGTH /;"	d
DMI_SBCS_SBACCESS64_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS64_LENGTH /;"	d
DMI_SBCS_SBACCESS64_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS64_OFFSET /;"	d
DMI_SBCS_SBACCESS64_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS64_OFFSET /;"	d
DMI_SBCS_SBACCESS8	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS8 /;"	d
DMI_SBCS_SBACCESS8	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS8 /;"	d
DMI_SBCS_SBACCESS8_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS8_LENGTH /;"	d
DMI_SBCS_SBACCESS8_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS8_LENGTH /;"	d
DMI_SBCS_SBACCESS8_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS8_OFFSET /;"	d
DMI_SBCS_SBACCESS8_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS8_OFFSET /;"	d
DMI_SBCS_SBACCESS_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS_LENGTH /;"	d
DMI_SBCS_SBACCESS_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS_LENGTH /;"	d
DMI_SBCS_SBACCESS_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBACCESS_OFFSET /;"	d
DMI_SBCS_SBACCESS_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBACCESS_OFFSET /;"	d
DMI_SBCS_SBASIZE	fesvr/debug_defines.h	/^#define DMI_SBCS_SBASIZE /;"	d
DMI_SBCS_SBASIZE	riscv/debug_defines.h	/^#define DMI_SBCS_SBASIZE /;"	d
DMI_SBCS_SBASIZE_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBASIZE_LENGTH /;"	d
DMI_SBCS_SBASIZE_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBASIZE_LENGTH /;"	d
DMI_SBCS_SBASIZE_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBASIZE_OFFSET /;"	d
DMI_SBCS_SBASIZE_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBASIZE_OFFSET /;"	d
DMI_SBCS_SBAUTOINCREMENT	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT /;"	d
DMI_SBCS_SBAUTOINCREMENT	riscv/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT /;"	d
DMI_SBCS_SBAUTOINCREMENT_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT_LENGTH /;"	d
DMI_SBCS_SBAUTOINCREMENT_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT_LENGTH /;"	d
DMI_SBCS_SBAUTOINCREMENT_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT_OFFSET /;"	d
DMI_SBCS_SBAUTOINCREMENT_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBAUTOINCREMENT_OFFSET /;"	d
DMI_SBCS_SBAUTOREAD	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOREAD /;"	d
DMI_SBCS_SBAUTOREAD_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOREAD_LENGTH /;"	d
DMI_SBCS_SBAUTOREAD_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBAUTOREAD_OFFSET /;"	d
DMI_SBCS_SBBUSY	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSY /;"	d
DMI_SBCS_SBBUSYERROR	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSYERROR /;"	d
DMI_SBCS_SBBUSYERROR_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSYERROR_LENGTH /;"	d
DMI_SBCS_SBBUSYERROR_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSYERROR_OFFSET /;"	d
DMI_SBCS_SBBUSY_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSY_LENGTH /;"	d
DMI_SBCS_SBBUSY_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBBUSY_OFFSET /;"	d
DMI_SBCS_SBERROR	fesvr/debug_defines.h	/^#define DMI_SBCS_SBERROR /;"	d
DMI_SBCS_SBERROR	riscv/debug_defines.h	/^#define DMI_SBCS_SBERROR /;"	d
DMI_SBCS_SBERROR_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBERROR_LENGTH /;"	d
DMI_SBCS_SBERROR_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBERROR_LENGTH /;"	d
DMI_SBCS_SBERROR_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBERROR_OFFSET /;"	d
DMI_SBCS_SBERROR_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBERROR_OFFSET /;"	d
DMI_SBCS_SBREADONADDR	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONADDR /;"	d
DMI_SBCS_SBREADONADDR_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONADDR_LENGTH /;"	d
DMI_SBCS_SBREADONADDR_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONADDR_OFFSET /;"	d
DMI_SBCS_SBREADONDATA	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONDATA /;"	d
DMI_SBCS_SBREADONDATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONDATA_LENGTH /;"	d
DMI_SBCS_SBREADONDATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBREADONDATA_OFFSET /;"	d
DMI_SBCS_SBSINGLEREAD	fesvr/debug_defines.h	/^#define DMI_SBCS_SBSINGLEREAD /;"	d
DMI_SBCS_SBSINGLEREAD_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBCS_SBSINGLEREAD_LENGTH /;"	d
DMI_SBCS_SBSINGLEREAD_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBCS_SBSINGLEREAD_OFFSET /;"	d
DMI_SBCS_SBVERSION	riscv/debug_defines.h	/^#define DMI_SBCS_SBVERSION /;"	d
DMI_SBCS_SBVERSION_LENGTH	riscv/debug_defines.h	/^#define DMI_SBCS_SBVERSION_LENGTH /;"	d
DMI_SBCS_SBVERSION_OFFSET	riscv/debug_defines.h	/^#define DMI_SBCS_SBVERSION_OFFSET /;"	d
DMI_SBDATA0	fesvr/debug_defines.h	/^#define DMI_SBDATA0 /;"	d
DMI_SBDATA0	riscv/debug_defines.h	/^#define DMI_SBDATA0 /;"	d
DMI_SBDATA0_DATA	fesvr/debug_defines.h	/^#define DMI_SBDATA0_DATA /;"	d
DMI_SBDATA0_DATA	riscv/debug_defines.h	/^#define DMI_SBDATA0_DATA /;"	d
DMI_SBDATA0_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBDATA0_DATA_LENGTH /;"	d
DMI_SBDATA0_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SBDATA0_DATA_LENGTH /;"	d
DMI_SBDATA0_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBDATA0_DATA_OFFSET /;"	d
DMI_SBDATA0_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SBDATA0_DATA_OFFSET /;"	d
DMI_SBDATA1	fesvr/debug_defines.h	/^#define DMI_SBDATA1 /;"	d
DMI_SBDATA1	riscv/debug_defines.h	/^#define DMI_SBDATA1 /;"	d
DMI_SBDATA1_DATA	fesvr/debug_defines.h	/^#define DMI_SBDATA1_DATA /;"	d
DMI_SBDATA1_DATA	riscv/debug_defines.h	/^#define DMI_SBDATA1_DATA /;"	d
DMI_SBDATA1_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBDATA1_DATA_LENGTH /;"	d
DMI_SBDATA1_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SBDATA1_DATA_LENGTH /;"	d
DMI_SBDATA1_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBDATA1_DATA_OFFSET /;"	d
DMI_SBDATA1_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SBDATA1_DATA_OFFSET /;"	d
DMI_SBDATA2	fesvr/debug_defines.h	/^#define DMI_SBDATA2 /;"	d
DMI_SBDATA2	riscv/debug_defines.h	/^#define DMI_SBDATA2 /;"	d
DMI_SBDATA2_DATA	fesvr/debug_defines.h	/^#define DMI_SBDATA2_DATA /;"	d
DMI_SBDATA2_DATA	riscv/debug_defines.h	/^#define DMI_SBDATA2_DATA /;"	d
DMI_SBDATA2_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBDATA2_DATA_LENGTH /;"	d
DMI_SBDATA2_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SBDATA2_DATA_LENGTH /;"	d
DMI_SBDATA2_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBDATA2_DATA_OFFSET /;"	d
DMI_SBDATA2_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SBDATA2_DATA_OFFSET /;"	d
DMI_SBDATA3	fesvr/debug_defines.h	/^#define DMI_SBDATA3 /;"	d
DMI_SBDATA3	riscv/debug_defines.h	/^#define DMI_SBDATA3 /;"	d
DMI_SBDATA3_DATA	fesvr/debug_defines.h	/^#define DMI_SBDATA3_DATA /;"	d
DMI_SBDATA3_DATA	riscv/debug_defines.h	/^#define DMI_SBDATA3_DATA /;"	d
DMI_SBDATA3_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SBDATA3_DATA_LENGTH /;"	d
DMI_SBDATA3_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SBDATA3_DATA_LENGTH /;"	d
DMI_SBDATA3_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SBDATA3_DATA_OFFSET /;"	d
DMI_SBDATA3_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SBDATA3_DATA_OFFSET /;"	d
DMI_SERCS	fesvr/debug_defines.h	/^#define DMI_SERCS /;"	d
DMI_SERCS	riscv/debug_defines.h	/^#define DMI_SERCS /;"	d
DMI_SERCS_ERROR0	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR0 /;"	d
DMI_SERCS_ERROR0	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR0 /;"	d
DMI_SERCS_ERROR0_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR0_LENGTH /;"	d
DMI_SERCS_ERROR0_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR0_LENGTH /;"	d
DMI_SERCS_ERROR0_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR0_OFFSET /;"	d
DMI_SERCS_ERROR0_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR0_OFFSET /;"	d
DMI_SERCS_ERROR1	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR1 /;"	d
DMI_SERCS_ERROR1	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR1 /;"	d
DMI_SERCS_ERROR1_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR1_LENGTH /;"	d
DMI_SERCS_ERROR1_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR1_LENGTH /;"	d
DMI_SERCS_ERROR1_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR1_OFFSET /;"	d
DMI_SERCS_ERROR1_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR1_OFFSET /;"	d
DMI_SERCS_ERROR2	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR2 /;"	d
DMI_SERCS_ERROR2	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR2 /;"	d
DMI_SERCS_ERROR2_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR2_LENGTH /;"	d
DMI_SERCS_ERROR2_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR2_LENGTH /;"	d
DMI_SERCS_ERROR2_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR2_OFFSET /;"	d
DMI_SERCS_ERROR2_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR2_OFFSET /;"	d
DMI_SERCS_ERROR3	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR3 /;"	d
DMI_SERCS_ERROR3	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR3 /;"	d
DMI_SERCS_ERROR3_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR3_LENGTH /;"	d
DMI_SERCS_ERROR3_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR3_LENGTH /;"	d
DMI_SERCS_ERROR3_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR3_OFFSET /;"	d
DMI_SERCS_ERROR3_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR3_OFFSET /;"	d
DMI_SERCS_ERROR4	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR4 /;"	d
DMI_SERCS_ERROR4	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR4 /;"	d
DMI_SERCS_ERROR4_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR4_LENGTH /;"	d
DMI_SERCS_ERROR4_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR4_LENGTH /;"	d
DMI_SERCS_ERROR4_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR4_OFFSET /;"	d
DMI_SERCS_ERROR4_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR4_OFFSET /;"	d
DMI_SERCS_ERROR5	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR5 /;"	d
DMI_SERCS_ERROR5	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR5 /;"	d
DMI_SERCS_ERROR5_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR5_LENGTH /;"	d
DMI_SERCS_ERROR5_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR5_LENGTH /;"	d
DMI_SERCS_ERROR5_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR5_OFFSET /;"	d
DMI_SERCS_ERROR5_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR5_OFFSET /;"	d
DMI_SERCS_ERROR6	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR6 /;"	d
DMI_SERCS_ERROR6	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR6 /;"	d
DMI_SERCS_ERROR6_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR6_LENGTH /;"	d
DMI_SERCS_ERROR6_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR6_LENGTH /;"	d
DMI_SERCS_ERROR6_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR6_OFFSET /;"	d
DMI_SERCS_ERROR6_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR6_OFFSET /;"	d
DMI_SERCS_ERROR7	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR7 /;"	d
DMI_SERCS_ERROR7	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR7 /;"	d
DMI_SERCS_ERROR7_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR7_LENGTH /;"	d
DMI_SERCS_ERROR7_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR7_LENGTH /;"	d
DMI_SERCS_ERROR7_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_ERROR7_OFFSET /;"	d
DMI_SERCS_ERROR7_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_ERROR7_OFFSET /;"	d
DMI_SERCS_FULL0	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL0 /;"	d
DMI_SERCS_FULL0	riscv/debug_defines.h	/^#define DMI_SERCS_FULL0 /;"	d
DMI_SERCS_FULL0_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL0_LENGTH /;"	d
DMI_SERCS_FULL0_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL0_LENGTH /;"	d
DMI_SERCS_FULL0_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL0_OFFSET /;"	d
DMI_SERCS_FULL0_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL0_OFFSET /;"	d
DMI_SERCS_FULL1	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL1 /;"	d
DMI_SERCS_FULL1	riscv/debug_defines.h	/^#define DMI_SERCS_FULL1 /;"	d
DMI_SERCS_FULL1_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL1_LENGTH /;"	d
DMI_SERCS_FULL1_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL1_LENGTH /;"	d
DMI_SERCS_FULL1_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL1_OFFSET /;"	d
DMI_SERCS_FULL1_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL1_OFFSET /;"	d
DMI_SERCS_FULL2	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL2 /;"	d
DMI_SERCS_FULL2	riscv/debug_defines.h	/^#define DMI_SERCS_FULL2 /;"	d
DMI_SERCS_FULL2_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL2_LENGTH /;"	d
DMI_SERCS_FULL2_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL2_LENGTH /;"	d
DMI_SERCS_FULL2_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL2_OFFSET /;"	d
DMI_SERCS_FULL2_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL2_OFFSET /;"	d
DMI_SERCS_FULL3	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL3 /;"	d
DMI_SERCS_FULL3	riscv/debug_defines.h	/^#define DMI_SERCS_FULL3 /;"	d
DMI_SERCS_FULL3_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL3_LENGTH /;"	d
DMI_SERCS_FULL3_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL3_LENGTH /;"	d
DMI_SERCS_FULL3_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL3_OFFSET /;"	d
DMI_SERCS_FULL3_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL3_OFFSET /;"	d
DMI_SERCS_FULL4	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL4 /;"	d
DMI_SERCS_FULL4	riscv/debug_defines.h	/^#define DMI_SERCS_FULL4 /;"	d
DMI_SERCS_FULL4_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL4_LENGTH /;"	d
DMI_SERCS_FULL4_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL4_LENGTH /;"	d
DMI_SERCS_FULL4_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL4_OFFSET /;"	d
DMI_SERCS_FULL4_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL4_OFFSET /;"	d
DMI_SERCS_FULL5	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL5 /;"	d
DMI_SERCS_FULL5	riscv/debug_defines.h	/^#define DMI_SERCS_FULL5 /;"	d
DMI_SERCS_FULL5_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL5_LENGTH /;"	d
DMI_SERCS_FULL5_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL5_LENGTH /;"	d
DMI_SERCS_FULL5_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL5_OFFSET /;"	d
DMI_SERCS_FULL5_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL5_OFFSET /;"	d
DMI_SERCS_FULL6	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL6 /;"	d
DMI_SERCS_FULL6	riscv/debug_defines.h	/^#define DMI_SERCS_FULL6 /;"	d
DMI_SERCS_FULL6_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL6_LENGTH /;"	d
DMI_SERCS_FULL6_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL6_LENGTH /;"	d
DMI_SERCS_FULL6_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL6_OFFSET /;"	d
DMI_SERCS_FULL6_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL6_OFFSET /;"	d
DMI_SERCS_FULL7	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL7 /;"	d
DMI_SERCS_FULL7	riscv/debug_defines.h	/^#define DMI_SERCS_FULL7 /;"	d
DMI_SERCS_FULL7_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL7_LENGTH /;"	d
DMI_SERCS_FULL7_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_FULL7_LENGTH /;"	d
DMI_SERCS_FULL7_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_FULL7_OFFSET /;"	d
DMI_SERCS_FULL7_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_FULL7_OFFSET /;"	d
DMI_SERCS_SERIAL	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIAL /;"	d
DMI_SERCS_SERIAL	riscv/debug_defines.h	/^#define DMI_SERCS_SERIAL /;"	d
DMI_SERCS_SERIALCOUNT	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT /;"	d
DMI_SERCS_SERIALCOUNT	riscv/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT /;"	d
DMI_SERCS_SERIALCOUNT_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT_LENGTH /;"	d
DMI_SERCS_SERIALCOUNT_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT_LENGTH /;"	d
DMI_SERCS_SERIALCOUNT_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT_OFFSET /;"	d
DMI_SERCS_SERIALCOUNT_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_SERIALCOUNT_OFFSET /;"	d
DMI_SERCS_SERIAL_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIAL_LENGTH /;"	d
DMI_SERCS_SERIAL_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_SERIAL_LENGTH /;"	d
DMI_SERCS_SERIAL_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_SERIAL_OFFSET /;"	d
DMI_SERCS_SERIAL_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_SERIAL_OFFSET /;"	d
DMI_SERCS_VALID0	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID0 /;"	d
DMI_SERCS_VALID0	riscv/debug_defines.h	/^#define DMI_SERCS_VALID0 /;"	d
DMI_SERCS_VALID0_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID0_LENGTH /;"	d
DMI_SERCS_VALID0_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID0_LENGTH /;"	d
DMI_SERCS_VALID0_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID0_OFFSET /;"	d
DMI_SERCS_VALID0_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID0_OFFSET /;"	d
DMI_SERCS_VALID1	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID1 /;"	d
DMI_SERCS_VALID1	riscv/debug_defines.h	/^#define DMI_SERCS_VALID1 /;"	d
DMI_SERCS_VALID1_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID1_LENGTH /;"	d
DMI_SERCS_VALID1_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID1_LENGTH /;"	d
DMI_SERCS_VALID1_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID1_OFFSET /;"	d
DMI_SERCS_VALID1_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID1_OFFSET /;"	d
DMI_SERCS_VALID2	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID2 /;"	d
DMI_SERCS_VALID2	riscv/debug_defines.h	/^#define DMI_SERCS_VALID2 /;"	d
DMI_SERCS_VALID2_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID2_LENGTH /;"	d
DMI_SERCS_VALID2_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID2_LENGTH /;"	d
DMI_SERCS_VALID2_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID2_OFFSET /;"	d
DMI_SERCS_VALID2_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID2_OFFSET /;"	d
DMI_SERCS_VALID3	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID3 /;"	d
DMI_SERCS_VALID3	riscv/debug_defines.h	/^#define DMI_SERCS_VALID3 /;"	d
DMI_SERCS_VALID3_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID3_LENGTH /;"	d
DMI_SERCS_VALID3_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID3_LENGTH /;"	d
DMI_SERCS_VALID3_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID3_OFFSET /;"	d
DMI_SERCS_VALID3_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID3_OFFSET /;"	d
DMI_SERCS_VALID4	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID4 /;"	d
DMI_SERCS_VALID4	riscv/debug_defines.h	/^#define DMI_SERCS_VALID4 /;"	d
DMI_SERCS_VALID4_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID4_LENGTH /;"	d
DMI_SERCS_VALID4_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID4_LENGTH /;"	d
DMI_SERCS_VALID4_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID4_OFFSET /;"	d
DMI_SERCS_VALID4_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID4_OFFSET /;"	d
DMI_SERCS_VALID5	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID5 /;"	d
DMI_SERCS_VALID5	riscv/debug_defines.h	/^#define DMI_SERCS_VALID5 /;"	d
DMI_SERCS_VALID5_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID5_LENGTH /;"	d
DMI_SERCS_VALID5_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID5_LENGTH /;"	d
DMI_SERCS_VALID5_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID5_OFFSET /;"	d
DMI_SERCS_VALID5_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID5_OFFSET /;"	d
DMI_SERCS_VALID6	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID6 /;"	d
DMI_SERCS_VALID6	riscv/debug_defines.h	/^#define DMI_SERCS_VALID6 /;"	d
DMI_SERCS_VALID6_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID6_LENGTH /;"	d
DMI_SERCS_VALID6_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID6_LENGTH /;"	d
DMI_SERCS_VALID6_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID6_OFFSET /;"	d
DMI_SERCS_VALID6_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID6_OFFSET /;"	d
DMI_SERCS_VALID7	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID7 /;"	d
DMI_SERCS_VALID7	riscv/debug_defines.h	/^#define DMI_SERCS_VALID7 /;"	d
DMI_SERCS_VALID7_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID7_LENGTH /;"	d
DMI_SERCS_VALID7_LENGTH	riscv/debug_defines.h	/^#define DMI_SERCS_VALID7_LENGTH /;"	d
DMI_SERCS_VALID7_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERCS_VALID7_OFFSET /;"	d
DMI_SERCS_VALID7_OFFSET	riscv/debug_defines.h	/^#define DMI_SERCS_VALID7_OFFSET /;"	d
DMI_SERRX	fesvr/debug_defines.h	/^#define DMI_SERRX /;"	d
DMI_SERRX	riscv/debug_defines.h	/^#define DMI_SERRX /;"	d
DMI_SERRX_DATA	fesvr/debug_defines.h	/^#define DMI_SERRX_DATA /;"	d
DMI_SERRX_DATA	riscv/debug_defines.h	/^#define DMI_SERRX_DATA /;"	d
DMI_SERRX_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERRX_DATA_LENGTH /;"	d
DMI_SERRX_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SERRX_DATA_LENGTH /;"	d
DMI_SERRX_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERRX_DATA_OFFSET /;"	d
DMI_SERRX_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SERRX_DATA_OFFSET /;"	d
DMI_SERTX	fesvr/debug_defines.h	/^#define DMI_SERTX /;"	d
DMI_SERTX	riscv/debug_defines.h	/^#define DMI_SERTX /;"	d
DMI_SERTX_DATA	fesvr/debug_defines.h	/^#define DMI_SERTX_DATA /;"	d
DMI_SERTX_DATA	riscv/debug_defines.h	/^#define DMI_SERTX_DATA /;"	d
DMI_SERTX_DATA_LENGTH	fesvr/debug_defines.h	/^#define DMI_SERTX_DATA_LENGTH /;"	d
DMI_SERTX_DATA_LENGTH	riscv/debug_defines.h	/^#define DMI_SERTX_DATA_LENGTH /;"	d
DMI_SERTX_DATA_OFFSET	fesvr/debug_defines.h	/^#define DMI_SERTX_DATA_OFFSET /;"	d
DMI_SERTX_DATA_OFFSET	riscv/debug_defines.h	/^#define DMI_SERTX_DATA_OFFSET /;"	d
DO_WRITE_FREG	riscv/decode.h	/^#define DO_WRITE_FREG(/;"	d
DRAM_BASE	riscv/encoding.h	/^#define DRAM_BASE /;"	d
DTC	build/config.h	/^#define DTC /;"	d
DTC	configure.ac	/^AC_DEFINE_UNQUOTED(DTC, ["dtc"], [Executable name of device-tree-compiler])$/;"	d
DTMCONTROL_ABITS	riscv/jtag_dtm.cc	/^#define DTMCONTROL_ABITS /;"	d	file:
DTMCONTROL_DMIHARDRESET	riscv/jtag_dtm.cc	/^#define DTMCONTROL_DMIHARDRESET /;"	d	file:
DTMCONTROL_DMIRESET	riscv/jtag_dtm.cc	/^#define DTMCONTROL_DMIRESET /;"	d	file:
DTMCONTROL_DMISTAT	riscv/jtag_dtm.cc	/^#define DTMCONTROL_DMISTAT /;"	d	file:
DTMCONTROL_IDLE	riscv/jtag_dtm.cc	/^#define DTMCONTROL_IDLE /;"	d	file:
DTMCONTROL_VERSION	riscv/jtag_dtm.cc	/^#define DTMCONTROL_VERSION /;"	d	file:
DTM_DMI	fesvr/debug_defines.h	/^#define DTM_DMI /;"	d
DTM_DMI	riscv/debug_defines.h	/^#define DTM_DMI /;"	d
DTM_DMI_ADDRESS	fesvr/debug_defines.h	/^#define DTM_DMI_ADDRESS /;"	d
DTM_DMI_ADDRESS	riscv/debug_defines.h	/^#define DTM_DMI_ADDRESS /;"	d
DTM_DMI_ADDRESS_LENGTH	fesvr/debug_defines.h	/^#define DTM_DMI_ADDRESS_LENGTH /;"	d
DTM_DMI_ADDRESS_LENGTH	riscv/debug_defines.h	/^#define DTM_DMI_ADDRESS_LENGTH /;"	d
DTM_DMI_ADDRESS_OFFSET	fesvr/debug_defines.h	/^#define DTM_DMI_ADDRESS_OFFSET /;"	d
DTM_DMI_ADDRESS_OFFSET	riscv/debug_defines.h	/^#define DTM_DMI_ADDRESS_OFFSET /;"	d
DTM_DMI_DATA	fesvr/debug_defines.h	/^#define DTM_DMI_DATA /;"	d
DTM_DMI_DATA	riscv/debug_defines.h	/^#define DTM_DMI_DATA /;"	d
DTM_DMI_DATA_LENGTH	fesvr/debug_defines.h	/^#define DTM_DMI_DATA_LENGTH /;"	d
DTM_DMI_DATA_LENGTH	riscv/debug_defines.h	/^#define DTM_DMI_DATA_LENGTH /;"	d
DTM_DMI_DATA_OFFSET	fesvr/debug_defines.h	/^#define DTM_DMI_DATA_OFFSET /;"	d
DTM_DMI_DATA_OFFSET	riscv/debug_defines.h	/^#define DTM_DMI_DATA_OFFSET /;"	d
DTM_DMI_OP	fesvr/debug_defines.h	/^#define DTM_DMI_OP /;"	d
DTM_DMI_OP	riscv/debug_defines.h	/^#define DTM_DMI_OP /;"	d
DTM_DMI_OP_LENGTH	fesvr/debug_defines.h	/^#define DTM_DMI_OP_LENGTH /;"	d
DTM_DMI_OP_LENGTH	riscv/debug_defines.h	/^#define DTM_DMI_OP_LENGTH /;"	d
DTM_DMI_OP_OFFSET	fesvr/debug_defines.h	/^#define DTM_DMI_OP_OFFSET /;"	d
DTM_DMI_OP_OFFSET	riscv/debug_defines.h	/^#define DTM_DMI_OP_OFFSET /;"	d
DTM_DTMCS	fesvr/debug_defines.h	/^#define DTM_DTMCS /;"	d
DTM_DTMCS	riscv/debug_defines.h	/^#define DTM_DTMCS /;"	d
DTM_DTMCS_ABITS	fesvr/debug_defines.h	/^#define DTM_DTMCS_ABITS /;"	d
DTM_DTMCS_ABITS	riscv/debug_defines.h	/^#define DTM_DTMCS_ABITS /;"	d
DTM_DTMCS_ABITS_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_ABITS_LENGTH /;"	d
DTM_DTMCS_ABITS_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_ABITS_LENGTH /;"	d
DTM_DTMCS_ABITS_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_ABITS_OFFSET /;"	d
DTM_DTMCS_ABITS_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_ABITS_OFFSET /;"	d
DTM_DTMCS_DMIHARDRESET	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET /;"	d
DTM_DTMCS_DMIHARDRESET	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET /;"	d
DTM_DTMCS_DMIHARDRESET_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET_LENGTH /;"	d
DTM_DTMCS_DMIHARDRESET_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET_LENGTH /;"	d
DTM_DTMCS_DMIHARDRESET_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET_OFFSET /;"	d
DTM_DTMCS_DMIHARDRESET_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIHARDRESET_OFFSET /;"	d
DTM_DTMCS_DMIRESET	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIRESET /;"	d
DTM_DTMCS_DMIRESET	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIRESET /;"	d
DTM_DTMCS_DMIRESET_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIRESET_LENGTH /;"	d
DTM_DTMCS_DMIRESET_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIRESET_LENGTH /;"	d
DTM_DTMCS_DMIRESET_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMIRESET_OFFSET /;"	d
DTM_DTMCS_DMIRESET_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_DMIRESET_OFFSET /;"	d
DTM_DTMCS_DMISTAT	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMISTAT /;"	d
DTM_DTMCS_DMISTAT	riscv/debug_defines.h	/^#define DTM_DTMCS_DMISTAT /;"	d
DTM_DTMCS_DMISTAT_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMISTAT_LENGTH /;"	d
DTM_DTMCS_DMISTAT_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_DMISTAT_LENGTH /;"	d
DTM_DTMCS_DMISTAT_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_DMISTAT_OFFSET /;"	d
DTM_DTMCS_DMISTAT_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_DMISTAT_OFFSET /;"	d
DTM_DTMCS_IDLE	fesvr/debug_defines.h	/^#define DTM_DTMCS_IDLE /;"	d
DTM_DTMCS_IDLE	riscv/debug_defines.h	/^#define DTM_DTMCS_IDLE /;"	d
DTM_DTMCS_IDLE_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_IDLE_LENGTH /;"	d
DTM_DTMCS_IDLE_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_IDLE_LENGTH /;"	d
DTM_DTMCS_IDLE_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_IDLE_OFFSET /;"	d
DTM_DTMCS_IDLE_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_IDLE_OFFSET /;"	d
DTM_DTMCS_VERSION	fesvr/debug_defines.h	/^#define DTM_DTMCS_VERSION /;"	d
DTM_DTMCS_VERSION	riscv/debug_defines.h	/^#define DTM_DTMCS_VERSION /;"	d
DTM_DTMCS_VERSION_LENGTH	fesvr/debug_defines.h	/^#define DTM_DTMCS_VERSION_LENGTH /;"	d
DTM_DTMCS_VERSION_LENGTH	riscv/debug_defines.h	/^#define DTM_DTMCS_VERSION_LENGTH /;"	d
DTM_DTMCS_VERSION_OFFSET	fesvr/debug_defines.h	/^#define DTM_DTMCS_VERSION_OFFSET /;"	d
DTM_DTMCS_VERSION_OFFSET	riscv/debug_defines.h	/^#define DTM_DTMCS_VERSION_OFFSET /;"	d
DTM_IDCODE	fesvr/debug_defines.h	/^#define DTM_IDCODE /;"	d
DTM_IDCODE	riscv/debug_defines.h	/^#define DTM_IDCODE /;"	d
DTM_IDCODE_1	fesvr/debug_defines.h	/^#define DTM_IDCODE_1 /;"	d
DTM_IDCODE_1	riscv/debug_defines.h	/^#define DTM_IDCODE_1 /;"	d
DTM_IDCODE_1_LENGTH	fesvr/debug_defines.h	/^#define DTM_IDCODE_1_LENGTH /;"	d
DTM_IDCODE_1_LENGTH	riscv/debug_defines.h	/^#define DTM_IDCODE_1_LENGTH /;"	d
DTM_IDCODE_1_OFFSET	fesvr/debug_defines.h	/^#define DTM_IDCODE_1_OFFSET /;"	d
DTM_IDCODE_1_OFFSET	riscv/debug_defines.h	/^#define DTM_IDCODE_1_OFFSET /;"	d
DTM_IDCODE_MANUFID	fesvr/debug_defines.h	/^#define DTM_IDCODE_MANUFID /;"	d
DTM_IDCODE_MANUFID	riscv/debug_defines.h	/^#define DTM_IDCODE_MANUFID /;"	d
DTM_IDCODE_MANUFID_LENGTH	fesvr/debug_defines.h	/^#define DTM_IDCODE_MANUFID_LENGTH /;"	d
DTM_IDCODE_MANUFID_LENGTH	riscv/debug_defines.h	/^#define DTM_IDCODE_MANUFID_LENGTH /;"	d
DTM_IDCODE_MANUFID_OFFSET	fesvr/debug_defines.h	/^#define DTM_IDCODE_MANUFID_OFFSET /;"	d
DTM_IDCODE_MANUFID_OFFSET	riscv/debug_defines.h	/^#define DTM_IDCODE_MANUFID_OFFSET /;"	d
DTM_IDCODE_PARTNUMBER	fesvr/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER /;"	d
DTM_IDCODE_PARTNUMBER	riscv/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER /;"	d
DTM_IDCODE_PARTNUMBER_LENGTH	fesvr/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER_LENGTH /;"	d
DTM_IDCODE_PARTNUMBER_LENGTH	riscv/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER_LENGTH /;"	d
DTM_IDCODE_PARTNUMBER_OFFSET	fesvr/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER_OFFSET /;"	d
DTM_IDCODE_PARTNUMBER_OFFSET	riscv/debug_defines.h	/^#define DTM_IDCODE_PARTNUMBER_OFFSET /;"	d
DTM_IDCODE_VERSION	fesvr/debug_defines.h	/^#define DTM_IDCODE_VERSION /;"	d
DTM_IDCODE_VERSION	riscv/debug_defines.h	/^#define DTM_IDCODE_VERSION /;"	d
DTM_IDCODE_VERSION_LENGTH	fesvr/debug_defines.h	/^#define DTM_IDCODE_VERSION_LENGTH /;"	d
DTM_IDCODE_VERSION_LENGTH	riscv/debug_defines.h	/^#define DTM_IDCODE_VERSION_LENGTH /;"	d
DTM_IDCODE_VERSION_OFFSET	fesvr/debug_defines.h	/^#define DTM_IDCODE_VERSION_OFFSET /;"	d
DTM_IDCODE_VERSION_OFFSET	riscv/debug_defines.h	/^#define DTM_IDCODE_VERSION_OFFSET /;"	d
Debugging With Gdb	README.md	/^Debugging With Gdb$/;"	s
EBREAK	fesvr/dtm.cc	/^#define EBREAK /;"	d	file:
ELEN	riscv/processor.h	/^      reg_t ELEN, VLEN;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
ELFS	debug_rom/Makefile	/^ELFS = debug_rom$/;"	m
ELF_SWAP	fesvr/elf.h	/^#define ELF_SWAP(/;"	d
EM_NONE	fesvr/elf.h	/^#define EM_NONE /;"	d
EM_RISCV	fesvr/elf.h	/^#define EM_RISCV /;"	d
ENCODE_ITYPE_IMM	fesvr/dtm.cc	/^#define ENCODE_ITYPE_IMM(/;"	d	file:
ENCODE_SBTYPE_IMM	fesvr/dtm.cc	/^#define ENCODE_SBTYPE_IMM(/;"	d	file:
ENCODE_STYPE_IMM	fesvr/dtm.cc	/^#define ENCODE_STYPE_IMM(/;"	d	file:
ENCODE_UJTYPE_IMM	fesvr/dtm.cc	/^#define ENCODE_UJTYPE_IMM(/;"	d	file:
ENCODE_UTYPE_IMM	fesvr/dtm.cc	/^#define ENCODE_UTYPE_IMM(/;"	d	file:
EOF	scripts/config.guess	/^		    sed 's\/^              \/\/' << EOF >$dummy.c$/;"	h
EOF	scripts/config.guess	/^		sed 's\/^		\/\/' << EOF >$dummy.c$/;"	h
EOF	scripts/config.guess	/^	sed 's\/^	\/\/' << EOF >$dummy.c$/;"	h
EOF	scripts/config.guess	/^cat >$dummy.c <<EOF$/;"	h
EOF	scripts/config.guess	/^cat >&2 <<EOF$/;"	h
ET_EXEC	fesvr/elf.h	/^#define ET_EXEC /;"	d
EV_CURRENT	fesvr/elf.h	/^#define EV_CURRENT /;"	d
EXIT1_DR	riscv/jtag_dtm.h	/^  EXIT1_DR,$/;"	e	enum:__anon58dfc25b0103
EXIT1_IR	riscv/jtag_dtm.h	/^  EXIT1_IR,$/;"	e	enum:__anon58dfc25b0103
EXIT2_DR	riscv/jtag_dtm.h	/^  EXIT2_DR,$/;"	e	enum:__anon58dfc25b0103
EXIT2_IR	riscv/jtag_dtm.h	/^  EXIT2_IR,$/;"	e	enum:__anon58dfc25b0103
EXTRACT_BYTE	fdt/libfdt_env.h	/^#define EXTRACT_BYTE(/;"	d
EXT_IO_BASE	riscv/encoding.h	/^#define EXT_IO_BASE /;"	d
EXT_ZFH	riscv/processor.h	/^  EXT_ZFH   = 0,$/;"	e	enum:__anon2b80edf10703
EXT_ZVEDIV	riscv/processor.h	/^  EXT_ZVEDIV,$/;"	e	enum:__anon2b80edf10703
EbreakTest	tests/ebreak.py	/^class EbreakTest(unittest.TestCase):$/;"	c
Elf32_Ehdr	fesvr/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon9d3644870108
Elf32_Phdr	fesvr/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon9d3644870308
Elf32_Shdr	fesvr/elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon9d3644870208
Elf32_Sym	fesvr/elf.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon9d3644870408
Elf64_Ehdr	fesvr/elf.h	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon9d3644870508
Elf64_Phdr	fesvr/elf.h	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon9d3644870708
Elf64_Shdr	fesvr/elf.h	/^} Elf64_Shdr;$/;"	t	typeref:struct:__anon9d3644870608
Elf64_Sym	fesvr/elf.h	/^} Elf64_Sym;$/;"	t	typeref:struct:__anon9d3644870808
F16_SIGN	riscv/decode.h	/^#define F16_SIGN /;"	d
F32_SIGN	riscv/decode.h	/^#define F32_SIGN /;"	d
F64_SIGN	riscv/decode.h	/^#define F64_SIGN /;"	d
FB_ALIGN	fesvr/rfb.h	/^  static const int FB_ALIGN = 256;$/;"	m	class:rfb_t	typeref:typename:const int
FDT_ALIGN	fdt/libfdt_internal.h	/^#define FDT_ALIGN(/;"	d
FDT_BEGIN_NODE	fdt/fdt.h	/^#define FDT_BEGIN_NODE	/;"	d
FDT_BITWISE	fdt/libfdt_env.h	/^#define FDT_BITWISE /;"	d
FDT_BITWISE	fdt/libfdt_env.h	/^#define FDT_BITWISE$/;"	d
FDT_CREATE_FLAGS_ALL	fdt/libfdt.h	/^#define FDT_CREATE_FLAGS_ALL	/;"	d
FDT_CREATE_FLAG_NO_NAME_DEDUP	fdt/libfdt.h	/^#define FDT_CREATE_FLAG_NO_NAME_DEDUP /;"	d
FDT_ENABLED	build/config.h	/^#define FDT_ENABLED /;"	d
FDT_END	fdt/fdt.h	/^#define FDT_END	/;"	d
FDT_END_NODE	fdt/fdt.h	/^#define FDT_END_NODE	/;"	d
FDT_ERRTABENT	fdt/fdt_strerror.c	/^#define FDT_ERRTABENT(/;"	d	file:
FDT_ERRTABSIZE	fdt/fdt_strerror.c	/^#define FDT_ERRTABSIZE	/;"	d	file:
FDT_ERR_BADFLAGS	fdt/libfdt.h	/^#define FDT_ERR_BADFLAGS	/;"	d
FDT_ERR_BADLAYOUT	fdt/libfdt.h	/^#define FDT_ERR_BADLAYOUT	/;"	d
FDT_ERR_BADMAGIC	fdt/libfdt.h	/^#define FDT_ERR_BADMAGIC	/;"	d
FDT_ERR_BADNCELLS	fdt/libfdt.h	/^#define FDT_ERR_BADNCELLS	/;"	d
FDT_ERR_BADOFFSET	fdt/libfdt.h	/^#define FDT_ERR_BADOFFSET	/;"	d
FDT_ERR_BADOVERLAY	fdt/libfdt.h	/^#define FDT_ERR_BADOVERLAY	/;"	d
FDT_ERR_BADPATH	fdt/libfdt.h	/^#define FDT_ERR_BADPATH	/;"	d
FDT_ERR_BADPHANDLE	fdt/libfdt.h	/^#define FDT_ERR_BADPHANDLE	/;"	d
FDT_ERR_BADSTATE	fdt/libfdt.h	/^#define FDT_ERR_BADSTATE	/;"	d
FDT_ERR_BADSTRUCTURE	fdt/libfdt.h	/^#define FDT_ERR_BADSTRUCTURE	/;"	d
FDT_ERR_BADVALUE	fdt/libfdt.h	/^#define FDT_ERR_BADVALUE	/;"	d
FDT_ERR_BADVERSION	fdt/libfdt.h	/^#define FDT_ERR_BADVERSION	/;"	d
FDT_ERR_EXISTS	fdt/libfdt.h	/^#define FDT_ERR_EXISTS	/;"	d
FDT_ERR_INTERNAL	fdt/libfdt.h	/^#define FDT_ERR_INTERNAL	/;"	d
FDT_ERR_MAX	fdt/libfdt.h	/^#define FDT_ERR_MAX	/;"	d
FDT_ERR_NOPHANDLES	fdt/libfdt.h	/^#define FDT_ERR_NOPHANDLES	/;"	d
FDT_ERR_NOSPACE	fdt/libfdt.h	/^#define FDT_ERR_NOSPACE	/;"	d
FDT_ERR_NOTFOUND	fdt/libfdt.h	/^#define FDT_ERR_NOTFOUND	/;"	d
FDT_ERR_TRUNCATED	fdt/libfdt.h	/^#define FDT_ERR_TRUNCATED	/;"	d
FDT_FIRST_SUPPORTED_VERSION	fdt/libfdt.h	/^#define FDT_FIRST_SUPPORTED_VERSION	/;"	d
FDT_FORCE	fdt/libfdt_env.h	/^#define FDT_FORCE /;"	d
FDT_FORCE	fdt/libfdt_env.h	/^#define FDT_FORCE$/;"	d
FDT_H	fdt/fdt.h	/^#define FDT_H$/;"	d
FDT_LAST_SUPPORTED_VERSION	fdt/libfdt.h	/^#define FDT_LAST_SUPPORTED_VERSION	/;"	d
FDT_MAGIC	fdt/fdt.h	/^#define FDT_MAGIC	/;"	d
FDT_MAX_NCELLS	fdt/libfdt.h	/^#define FDT_MAX_NCELLS	/;"	d
FDT_MAX_PHANDLE	fdt/libfdt.h	/^#define FDT_MAX_PHANDLE /;"	d
FDT_NOP	fdt/fdt.h	/^#define FDT_NOP	/;"	d
FDT_PROP	fdt/fdt.h	/^#define FDT_PROP	/;"	d
FDT_RO_PROBE	fdt/libfdt_internal.h	/^#define FDT_RO_PROBE(/;"	d
FDT_RW_PROBE	fdt/fdt_rw.c	/^#define FDT_RW_PROBE(/;"	d	file:
FDT_SW_MAGIC	fdt/libfdt_internal.h	/^#define FDT_SW_MAGIC	/;"	d
FDT_SW_PROBE	fdt/fdt_sw.c	/^#define FDT_SW_PROBE(/;"	d	file:
FDT_SW_PROBE_MEMRSV	fdt/fdt_sw.c	/^#define FDT_SW_PROBE_MEMRSV(/;"	d	file:
FDT_SW_PROBE_STRUCT	fdt/fdt_sw.c	/^#define FDT_SW_PROBE_STRUCT(/;"	d	file:
FDT_TAGALIGN	fdt/libfdt_internal.h	/^#define FDT_TAGALIGN(/;"	d
FDT_TAGSIZE	fdt/fdt.h	/^#define FDT_TAGSIZE	/;"	d
FDT_V16_SIZE	fdt/fdt.h	/^#define FDT_V16_SIZE	/;"	d
FDT_V17_SIZE	fdt/fdt.h	/^#define FDT_V17_SIZE	/;"	d
FDT_V1_SIZE	fdt/fdt.h	/^#define FDT_V1_SIZE	/;"	d
FDT_V2_SIZE	fdt/fdt.h	/^#define FDT_V2_SIZE	/;"	d
FDT_V3_SIZE	fdt/fdt.h	/^#define FDT_V3_SIZE	/;"	d
FENCE_I	fesvr/dtm.cc	/^#define FENCE_I /;"	d	file:
FESVR_ENABLED	build/config.h	/^#define FESVR_ENABLED /;"	d
FETCH	riscv/memtracer.h	/^  FETCH,$/;"	e	enum:access_type
FLEN	riscv/decode.h	/^#define FLEN /;"	d
FPEXC_DZ	riscv/decode.h	/^#define FPEXC_DZ /;"	d
FPEXC_NV	riscv/decode.h	/^#define FPEXC_NV /;"	d
FPEXC_NX	riscv/decode.h	/^#define FPEXC_NX /;"	d
FPEXC_OF	riscv/decode.h	/^#define FPEXC_OF /;"	d
FPEXC_UF	riscv/decode.h	/^#define FPEXC_UF /;"	d
FPR	riscv/processor.h	/^  regfile_t<freg_t, NFPR, false> FPR;$/;"	m	struct:state_t	typeref:typename:regfile_t<freg_t,NFPR,false>
FP_RD_0	riscv/decode.h	/^#define FP_RD_0 /;"	d
FP_RD_DN	riscv/decode.h	/^#define FP_RD_DN /;"	d
FP_RD_NE	riscv/decode.h	/^#define FP_RD_NE /;"	d
FP_RD_NMM	riscv/decode.h	/^#define FP_RD_NMM /;"	d
FP_RD_UP	riscv/decode.h	/^#define FP_RD_UP /;"	d
FRS1	riscv/decode.h	/^#define FRS1 /;"	d
FRS2	riscv/decode.h	/^#define FRS2 /;"	d
FRS3	riscv/decode.h	/^#define FRS3 /;"	d
FSR_AEXC	riscv/decode.h	/^#define FSR_AEXC /;"	d
FSR_AEXC_SHIFT	riscv/decode.h	/^#define FSR_AEXC_SHIFT /;"	d
FSR_DZA	riscv/decode.h	/^#define FSR_DZA /;"	d
FSR_NVA	riscv/decode.h	/^#define FSR_NVA /;"	d
FSR_NXA	riscv/decode.h	/^#define FSR_NXA /;"	d
FSR_OFA	riscv/decode.h	/^#define FSR_OFA /;"	d
FSR_RD	riscv/decode.h	/^#define FSR_RD /;"	d
FSR_RD_SHIFT	riscv/decode.h	/^#define FSR_RD_SHIFT /;"	d
FSR_UFA	riscv/decode.h	/^#define FSR_UFA /;"	d
GLIBC_64BIT_PTR_BUG	fesvr/context.h	/^#define GLIBC_64BIT_PTR_BUG$/;"	d
Gdb	tests/testlib.py	/^class Gdb(object):$/;"	c
HASH_SIZE	riscv/disasm.h	/^  static const int HASH_SIZE = 256;$/;"	m	class:disassembler_t	typeref:typename:const int
HAVE_DLOPEN	Makefile.in	/^HAVE_DLOPEN := @HAVE_DLOPEN@$/;"	m
HAVE_DLOPEN	build/Makefile	/^HAVE_DLOPEN := yes$/;"	m
HAVE_DLOPEN	build/config.h	/^#define HAVE_DLOPEN /;"	d
HAVE_INT128	Makefile.in	/^HAVE_INT128 := @HAVE_INT128@$/;"	m
HAVE_INT128	build/Makefile	/^HAVE_INT128 := yes$/;"	m
HAVE_INT128	configure.ac	/^AC_CHECK_TYPE([__int128_t], AC_SUBST([HAVE_INT128],[yes]))$/;"	s
HAVE_INTTYPES_H	build/config.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_LIBPTHREAD	build/config.h	/^#define HAVE_LIBPTHREAD /;"	d
HAVE_MEMORY_H	build/config.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_STDINT_H	build/config.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDLIB_H	build/config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRINGS_H	build/config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	build/config.h	/^#define HAVE_STRING_H /;"	d
HAVE_SYS_STAT_H	build/config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TYPES_H	build/config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_UNISTD_H	build/config.h	/^#define HAVE_UNISTD_H /;"	d
HGATP32_MODE	riscv/encoding.h	/^#define HGATP32_MODE /;"	d
HGATP32_PPN	riscv/encoding.h	/^#define HGATP32_PPN /;"	d
HGATP32_VMID	riscv/encoding.h	/^#define HGATP32_VMID /;"	d
HGATP64_MODE	riscv/encoding.h	/^#define HGATP64_MODE /;"	d
HGATP64_PPN	riscv/encoding.h	/^#define HGATP64_PPN /;"	d
HGATP64_VMID	riscv/encoding.h	/^#define HGATP64_VMID /;"	d
HGATP_MODE_OFF	riscv/encoding.h	/^#define HGATP_MODE_OFF /;"	d
HGATP_MODE_SV32X4	riscv/encoding.h	/^#define HGATP_MODE_SV32X4 /;"	d
HGATP_MODE_SV39X4	riscv/encoding.h	/^#define HGATP_MODE_SV39X4 /;"	d
HGATP_MODE_SV48X4	riscv/encoding.h	/^#define HGATP_MODE_SV48X4 /;"	d
HR_GROUP	riscv/processor.h	/^    HR_GROUP    \/* Halt requested due to halt group. *\/$/;"	e	enum:processor_t::__anon2b80edf10803
HR_NONE	riscv/processor.h	/^    HR_NONE,    \/* Halt request is inactive. *\/$/;"	e	enum:processor_t::__anon2b80edf10803
HR_REGULAR	riscv/processor.h	/^    HR_REGULAR, \/* Regular halt request\/debug interrupt. *\/$/;"	e	enum:processor_t::__anon2b80edf10803
HSTATUS_GVA	riscv/encoding.h	/^#define HSTATUS_GVA /;"	d
HSTATUS_HU	riscv/encoding.h	/^#define HSTATUS_HU /;"	d
HSTATUS_SPV	riscv/encoding.h	/^#define HSTATUS_SPV /;"	d
HSTATUS_SPVP	riscv/encoding.h	/^#define HSTATUS_SPVP /;"	d
HSTATUS_VGEIN	riscv/encoding.h	/^#define HSTATUS_VGEIN /;"	d
HSTATUS_VSBE	riscv/encoding.h	/^#define HSTATUS_VSBE /;"	d
HSTATUS_VSXL	riscv/encoding.h	/^#define HSTATUS_VSXL /;"	d
HSTATUS_VTSR	riscv/encoding.h	/^#define HSTATUS_VTSR /;"	d
HSTATUS_VTVM	riscv/encoding.h	/^#define HSTATUS_VTVM /;"	d
HSTATUS_VTW	riscv/encoding.h	/^#define HSTATUS_VTW /;"	d
HTIF_LONG_OPTIONS	fesvr/htif.h	/^#define HTIF_LONG_OPTIONS /;"	d
HTIF_LONG_OPTIONS_OPTIND	fesvr/htif.h	/^#define HTIF_LONG_OPTIONS_OPTIND /;"	d
HTIF_USAGE_OPTIONS	fesvr/htif.h	/^#define HTIF_USAGE_OPTIONS /;"	d
ICACHE_ACCESS	riscv/execute.cc	/^        #define ICACHE_ACCESS(/;"	d	file:
ICACHE_ENTRIES	riscv/mmu.h	/^  static const reg_t ICACHE_ENTRIES = 1024;$/;"	m	class:mmu_t	typeref:typename:const reg_t
IDENTITY_SIZE	fesvr/device.h	/^  static const size_t IDENTITY_SIZE = 64;$/;"	m	class:device_t	typeref:typename:const size_t
INIT_UINTM4	softfloat/primitiveTypes.h	/^#define INIT_UINTM4(/;"	d
INLINE	softfloat/platform.h	/^#define INLINE /;"	d
INLINE_LEVEL	softfloat/platform.h	/^#define INLINE_LEVEL /;"	d
INSNS_PER_RTC_TICK	riscv/sim.h	/^  static const size_t INSNS_PER_RTC_TICK = 100; \/\/ 10 MHz clock for 1 BIPS core$/;"	m	class:sim_t	typeref:typename:const size_t
INSTALL	Makefile.in	/^INSTALL       := @INSTALL@$/;"	m
INSTALL	build/Makefile	/^INSTALL       := \/usr\/bin\/install -c$/;"	m
INSTALLDIR	Makefile.in	/^INSTALLDIR ?= $(DESTDIR)$(prefix)$/;"	m
INSTALLDIR	build/Makefile	/^INSTALLDIR ?= $(DESTDIR)$(prefix)$/;"	m
INSTALL_EXE	Makefile.in	/^INSTALL_EXE   := $(INSTALL) -m 755$/;"	m
INSTALL_EXE	build/Makefile	/^INSTALL_EXE   := $(INSTALL) -m 755$/;"	m
INSTALL_HDR	Makefile.in	/^INSTALL_HDR   := $(INSTALL) -m 644$/;"	m
INSTALL_HDR	build/Makefile	/^INSTALL_HDR   := $(INSTALL) -m 644$/;"	m
INSTALL_LIB	Makefile.in	/^INSTALL_LIB   := $(INSTALL) -m 644$/;"	m
INSTALL_LIB	build/Makefile	/^INSTALL_LIB   := $(INSTALL) -m 644$/;"	m
INTERLEAVE	riscv/sim.h	/^  static const size_t INTERLEAVE = 5000;$/;"	m	class:sim_t	typeref:typename:const size_t
INT_MAX	fdt/libfdt_env.h	/^#define INT_MAX	/;"	d
INT_ROUNDING	riscv/decode.h	/^#define INT_ROUNDING(/;"	d
INVALID_RM	riscv/processor.h	/^  INVALID_RM$/;"	e	enum:VRM
IRQ_COP	riscv/encoding.h	/^#define IRQ_COP /;"	d
IRQ_HOST	riscv/encoding.h	/^#define IRQ_HOST /;"	d
IRQ_M_EXT	riscv/encoding.h	/^#define IRQ_M_EXT /;"	d
IRQ_M_SOFT	riscv/encoding.h	/^#define IRQ_M_SOFT /;"	d
IRQ_M_TIMER	riscv/encoding.h	/^#define IRQ_M_TIMER /;"	d
IRQ_S_EXT	riscv/encoding.h	/^#define IRQ_S_EXT /;"	d
IRQ_S_GEXT	riscv/encoding.h	/^#define IRQ_S_GEXT /;"	d
IRQ_S_SOFT	riscv/encoding.h	/^#define IRQ_S_SOFT /;"	d
IRQ_S_TIMER	riscv/encoding.h	/^#define IRQ_S_TIMER /;"	d
IRQ_U_EXT	riscv/encoding.h	/^#define IRQ_U_EXT /;"	d
IRQ_U_SOFT	riscv/encoding.h	/^#define IRQ_U_SOFT /;"	d
IRQ_U_TIMER	riscv/encoding.h	/^#define IRQ_U_TIMER /;"	d
IRQ_VS_EXT	riscv/encoding.h	/^#define IRQ_VS_EXT /;"	d
IRQ_VS_SOFT	riscv/encoding.h	/^#define IRQ_VS_SOFT /;"	d
IRQ_VS_TIMER	riscv/encoding.h	/^#define IRQ_VS_TIMER /;"	d
IR_DBUS	riscv/jtag_dtm.cc	/^  IR_DBUS=0x11,$/;"	e	enum:__anon74d80d790103	file:
IR_DTMCONTROL	riscv/jtag_dtm.cc	/^  IR_DTMCONTROL=0x10,$/;"	e	enum:__anon74d80d790103	file:
IR_IDCODE	riscv/jtag_dtm.cc	/^  IR_IDCODE=1,$/;"	e	enum:__anon74d80d790103	file:
IR_RESET	riscv/jtag_dtm.cc	/^  IR_RESET=0x1c$/;"	e	enum:__anon74d80d790103	file:
IS_ELF	fesvr/elf.h	/^#define IS_ELF(/;"	d
IS_ELF32	fesvr/elf.h	/^#define IS_ELF32(/;"	d
IS_ELF64	fesvr/elf.h	/^#define IS_ELF64(/;"	d
IS_ELFBE	fesvr/elf.h	/^#define IS_ELFBE(/;"	d
IS_ELFLE	fesvr/elf.h	/^#define IS_ELFLE(/;"	d
IS_ELF_EM_NONE	fesvr/elf.h	/^#define IS_ELF_EM_NONE(/;"	d
IS_ELF_EXEC	fesvr/elf.h	/^#define IS_ELF_EXEC(/;"	d
IS_ELF_RISCV	fesvr/elf.h	/^#define IS_ELF_RISCV(/;"	d
IS_ELF_VCURRENT	fesvr/elf.h	/^#define IS_ELF_VCURRENT(/;"	d
Interactive Debug Mode	README.md	/^Interactive Debug Mode$/;"	s
JTAG_DTM_H	riscv/jtag_dtm.h	/^#define JTAG_DTM_H$/;"	d
JUMP	fesvr/dtm.cc	/^#define JUMP(/;"	d	file:
JUMP_TARGET	riscv/decode.h	/^#define JUMP_TARGET /;"	d
LD	Makefile.in	/^LD            := $(CXX)$/;"	m
LD	build/Makefile	/^LD            := $(CXX)$/;"	m
LIBFDT_ENV_H	fdt/libfdt_env.h	/^#define LIBFDT_ENV_H$/;"	d
LIBFDT_H	fdt/libfdt.h	/^#define LIBFDT_H$/;"	d
LIBFDT_INTERNAL_H	fdt/libfdt_internal.h	/^#define LIBFDT_INTERNAL_H$/;"	d
LIBS	Makefile.in	/^LIBS          := @LIBS@$/;"	m
LIBS	build/Makefile	/^LIBS          := -lpthread -ldl -lpthread $/;"	m
LINK	Makefile.in	/^LINK          := $(LD) -L. $(all-link-flags) -Wl,-rpath,$(install_libs_dir) $(patsubst -L%,-Wl$(/;"	m
LINK	build/Makefile	/^LINK          := $(LD) -L. $(all-link-flags) -Wl,-rpath,$(install_libs_dir) $(patsubst -L%,-Wl$(/;"	m
LITTLEENDIAN	softfloat/platform.h	/^#define LITTLEENDIAN /;"	d
LOAD	fesvr/dtm.cc	/^#define LOAD(/;"	d	file:
LOAD	riscv/memtracer.h	/^  LOAD,$/;"	e	enum:access_type
LOAD_ELF	fesvr/elfloader.cc	/^  #define LOAD_ELF(/;"	d	file:
LOG_CSR	riscv/processor.cc	/^#define LOG_CSR(/;"	d	file:
MASK_ADD	riscv/encoding.h	/^#define MASK_ADD /;"	d
MASK_ADDI	riscv/encoding.h	/^#define MASK_ADDI /;"	d
MASK_ADDIW	riscv/encoding.h	/^#define MASK_ADDIW /;"	d
MASK_ADDIWU	riscv/encoding.h	/^#define MASK_ADDIWU /;"	d
MASK_ADDU_W	riscv/encoding.h	/^#define MASK_ADDU_W /;"	d
MASK_ADDW	riscv/encoding.h	/^#define MASK_ADDW /;"	d
MASK_ADDWU	riscv/encoding.h	/^#define MASK_ADDWU /;"	d
MASK_AMOADD_D	riscv/encoding.h	/^#define MASK_AMOADD_D /;"	d
MASK_AMOADD_W	riscv/encoding.h	/^#define MASK_AMOADD_W /;"	d
MASK_AMOAND_D	riscv/encoding.h	/^#define MASK_AMOAND_D /;"	d
MASK_AMOAND_W	riscv/encoding.h	/^#define MASK_AMOAND_W /;"	d
MASK_AMOMAXU_D	riscv/encoding.h	/^#define MASK_AMOMAXU_D /;"	d
MASK_AMOMAXU_W	riscv/encoding.h	/^#define MASK_AMOMAXU_W /;"	d
MASK_AMOMAX_D	riscv/encoding.h	/^#define MASK_AMOMAX_D /;"	d
MASK_AMOMAX_W	riscv/encoding.h	/^#define MASK_AMOMAX_W /;"	d
MASK_AMOMINU_D	riscv/encoding.h	/^#define MASK_AMOMINU_D /;"	d
MASK_AMOMINU_W	riscv/encoding.h	/^#define MASK_AMOMINU_W /;"	d
MASK_AMOMIN_D	riscv/encoding.h	/^#define MASK_AMOMIN_D /;"	d
MASK_AMOMIN_W	riscv/encoding.h	/^#define MASK_AMOMIN_W /;"	d
MASK_AMOOR_D	riscv/encoding.h	/^#define MASK_AMOOR_D /;"	d
MASK_AMOOR_W	riscv/encoding.h	/^#define MASK_AMOOR_W /;"	d
MASK_AMOSWAP_D	riscv/encoding.h	/^#define MASK_AMOSWAP_D /;"	d
MASK_AMOSWAP_W	riscv/encoding.h	/^#define MASK_AMOSWAP_W /;"	d
MASK_AMOXOR_D	riscv/encoding.h	/^#define MASK_AMOXOR_D /;"	d
MASK_AMOXOR_W	riscv/encoding.h	/^#define MASK_AMOXOR_W /;"	d
MASK_AND	riscv/encoding.h	/^#define MASK_AND /;"	d
MASK_ANDI	riscv/encoding.h	/^#define MASK_ANDI /;"	d
MASK_ANDN	riscv/encoding.h	/^#define MASK_ANDN /;"	d
MASK_AUIPC	riscv/encoding.h	/^#define MASK_AUIPC /;"	d
MASK_BDEP	riscv/encoding.h	/^#define MASK_BDEP /;"	d
MASK_BDEPW	riscv/encoding.h	/^#define MASK_BDEPW /;"	d
MASK_BEQ	riscv/encoding.h	/^#define MASK_BEQ /;"	d
MASK_BEXT	riscv/encoding.h	/^#define MASK_BEXT /;"	d
MASK_BEXTW	riscv/encoding.h	/^#define MASK_BEXTW /;"	d
MASK_BFP	riscv/encoding.h	/^#define MASK_BFP /;"	d
MASK_BFPW	riscv/encoding.h	/^#define MASK_BFPW /;"	d
MASK_BGE	riscv/encoding.h	/^#define MASK_BGE /;"	d
MASK_BGEU	riscv/encoding.h	/^#define MASK_BGEU /;"	d
MASK_BLT	riscv/encoding.h	/^#define MASK_BLT /;"	d
MASK_BLTU	riscv/encoding.h	/^#define MASK_BLTU /;"	d
MASK_BMATFLIP	riscv/encoding.h	/^#define MASK_BMATFLIP /;"	d
MASK_BMATOR	riscv/encoding.h	/^#define MASK_BMATOR /;"	d
MASK_BMATXOR	riscv/encoding.h	/^#define MASK_BMATXOR /;"	d
MASK_BNE	riscv/encoding.h	/^#define MASK_BNE /;"	d
MASK_CLMUL	riscv/encoding.h	/^#define MASK_CLMUL /;"	d
MASK_CLMULH	riscv/encoding.h	/^#define MASK_CLMULH /;"	d
MASK_CLMULHW	riscv/encoding.h	/^#define MASK_CLMULHW /;"	d
MASK_CLMULR	riscv/encoding.h	/^#define MASK_CLMULR /;"	d
MASK_CLMULRW	riscv/encoding.h	/^#define MASK_CLMULRW /;"	d
MASK_CLMULW	riscv/encoding.h	/^#define MASK_CLMULW /;"	d
MASK_CLZ	riscv/encoding.h	/^#define MASK_CLZ /;"	d
MASK_CLZW	riscv/encoding.h	/^#define MASK_CLZW /;"	d
MASK_CMIX	riscv/encoding.h	/^#define MASK_CMIX /;"	d
MASK_CMOV	riscv/encoding.h	/^#define MASK_CMOV /;"	d
MASK_CRC32C_B	riscv/encoding.h	/^#define MASK_CRC32C_B /;"	d
MASK_CRC32C_D	riscv/encoding.h	/^#define MASK_CRC32C_D /;"	d
MASK_CRC32C_H	riscv/encoding.h	/^#define MASK_CRC32C_H /;"	d
MASK_CRC32C_W	riscv/encoding.h	/^#define MASK_CRC32C_W /;"	d
MASK_CRC32_B	riscv/encoding.h	/^#define MASK_CRC32_B /;"	d
MASK_CRC32_D	riscv/encoding.h	/^#define MASK_CRC32_D /;"	d
MASK_CRC32_H	riscv/encoding.h	/^#define MASK_CRC32_H /;"	d
MASK_CRC32_W	riscv/encoding.h	/^#define MASK_CRC32_W /;"	d
MASK_CSRRC	riscv/encoding.h	/^#define MASK_CSRRC /;"	d
MASK_CSRRCI	riscv/encoding.h	/^#define MASK_CSRRCI /;"	d
MASK_CSRRS	riscv/encoding.h	/^#define MASK_CSRRS /;"	d
MASK_CSRRSI	riscv/encoding.h	/^#define MASK_CSRRSI /;"	d
MASK_CSRRW	riscv/encoding.h	/^#define MASK_CSRRW /;"	d
MASK_CSRRWI	riscv/encoding.h	/^#define MASK_CSRRWI /;"	d
MASK_CTZ	riscv/encoding.h	/^#define MASK_CTZ /;"	d
MASK_CTZW	riscv/encoding.h	/^#define MASK_CTZW /;"	d
MASK_CUSTOM0	riscv/encoding.h	/^#define MASK_CUSTOM0 /;"	d
MASK_CUSTOM0_RD	riscv/encoding.h	/^#define MASK_CUSTOM0_RD /;"	d
MASK_CUSTOM0_RD_RS1	riscv/encoding.h	/^#define MASK_CUSTOM0_RD_RS1 /;"	d
MASK_CUSTOM0_RD_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM0_RD_RS1_RS2 /;"	d
MASK_CUSTOM0_RS1	riscv/encoding.h	/^#define MASK_CUSTOM0_RS1 /;"	d
MASK_CUSTOM0_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM0_RS1_RS2 /;"	d
MASK_CUSTOM1	riscv/encoding.h	/^#define MASK_CUSTOM1 /;"	d
MASK_CUSTOM1_RD	riscv/encoding.h	/^#define MASK_CUSTOM1_RD /;"	d
MASK_CUSTOM1_RD_RS1	riscv/encoding.h	/^#define MASK_CUSTOM1_RD_RS1 /;"	d
MASK_CUSTOM1_RD_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM1_RD_RS1_RS2 /;"	d
MASK_CUSTOM1_RS1	riscv/encoding.h	/^#define MASK_CUSTOM1_RS1 /;"	d
MASK_CUSTOM1_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM1_RS1_RS2 /;"	d
MASK_CUSTOM2	riscv/encoding.h	/^#define MASK_CUSTOM2 /;"	d
MASK_CUSTOM2_RD	riscv/encoding.h	/^#define MASK_CUSTOM2_RD /;"	d
MASK_CUSTOM2_RD_RS1	riscv/encoding.h	/^#define MASK_CUSTOM2_RD_RS1 /;"	d
MASK_CUSTOM2_RD_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM2_RD_RS1_RS2 /;"	d
MASK_CUSTOM2_RS1	riscv/encoding.h	/^#define MASK_CUSTOM2_RS1 /;"	d
MASK_CUSTOM2_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM2_RS1_RS2 /;"	d
MASK_CUSTOM3	riscv/encoding.h	/^#define MASK_CUSTOM3 /;"	d
MASK_CUSTOM3_RD	riscv/encoding.h	/^#define MASK_CUSTOM3_RD /;"	d
MASK_CUSTOM3_RD_RS1	riscv/encoding.h	/^#define MASK_CUSTOM3_RD_RS1 /;"	d
MASK_CUSTOM3_RD_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM3_RD_RS1_RS2 /;"	d
MASK_CUSTOM3_RS1	riscv/encoding.h	/^#define MASK_CUSTOM3_RS1 /;"	d
MASK_CUSTOM3_RS1_RS2	riscv/encoding.h	/^#define MASK_CUSTOM3_RS1_RS2 /;"	d
MASK_C_ADD	riscv/encoding.h	/^#define MASK_C_ADD /;"	d
MASK_C_ADDI	riscv/encoding.h	/^#define MASK_C_ADDI /;"	d
MASK_C_ADDI16SP	riscv/encoding.h	/^#define MASK_C_ADDI16SP /;"	d
MASK_C_ADDI4SPN	riscv/encoding.h	/^#define MASK_C_ADDI4SPN /;"	d
MASK_C_ADDIW	riscv/encoding.h	/^#define MASK_C_ADDIW /;"	d
MASK_C_ADDW	riscv/encoding.h	/^#define MASK_C_ADDW /;"	d
MASK_C_AND	riscv/encoding.h	/^#define MASK_C_AND /;"	d
MASK_C_ANDI	riscv/encoding.h	/^#define MASK_C_ANDI /;"	d
MASK_C_BEQZ	riscv/encoding.h	/^#define MASK_C_BEQZ /;"	d
MASK_C_BNEZ	riscv/encoding.h	/^#define MASK_C_BNEZ /;"	d
MASK_C_EBREAK	riscv/encoding.h	/^#define MASK_C_EBREAK /;"	d
MASK_C_FLD	riscv/encoding.h	/^#define MASK_C_FLD /;"	d
MASK_C_FLDSP	riscv/encoding.h	/^#define MASK_C_FLDSP /;"	d
MASK_C_FLW	riscv/encoding.h	/^#define MASK_C_FLW /;"	d
MASK_C_FLWSP	riscv/encoding.h	/^#define MASK_C_FLWSP /;"	d
MASK_C_FSD	riscv/encoding.h	/^#define MASK_C_FSD /;"	d
MASK_C_FSDSP	riscv/encoding.h	/^#define MASK_C_FSDSP /;"	d
MASK_C_FSW	riscv/encoding.h	/^#define MASK_C_FSW /;"	d
MASK_C_FSWSP	riscv/encoding.h	/^#define MASK_C_FSWSP /;"	d
MASK_C_J	riscv/encoding.h	/^#define MASK_C_J /;"	d
MASK_C_JAL	riscv/encoding.h	/^#define MASK_C_JAL /;"	d
MASK_C_JALR	riscv/encoding.h	/^#define MASK_C_JALR /;"	d
MASK_C_JR	riscv/encoding.h	/^#define MASK_C_JR /;"	d
MASK_C_LD	riscv/encoding.h	/^#define MASK_C_LD /;"	d
MASK_C_LDSP	riscv/encoding.h	/^#define MASK_C_LDSP /;"	d
MASK_C_LI	riscv/encoding.h	/^#define MASK_C_LI /;"	d
MASK_C_LQ	riscv/encoding.h	/^#define MASK_C_LQ /;"	d
MASK_C_LQSP	riscv/encoding.h	/^#define MASK_C_LQSP /;"	d
MASK_C_LUI	riscv/encoding.h	/^#define MASK_C_LUI /;"	d
MASK_C_LW	riscv/encoding.h	/^#define MASK_C_LW /;"	d
MASK_C_LWSP	riscv/encoding.h	/^#define MASK_C_LWSP /;"	d
MASK_C_MV	riscv/encoding.h	/^#define MASK_C_MV /;"	d
MASK_C_NOP	riscv/encoding.h	/^#define MASK_C_NOP /;"	d
MASK_C_OR	riscv/encoding.h	/^#define MASK_C_OR /;"	d
MASK_C_SD	riscv/encoding.h	/^#define MASK_C_SD /;"	d
MASK_C_SDSP	riscv/encoding.h	/^#define MASK_C_SDSP /;"	d
MASK_C_SLLI	riscv/encoding.h	/^#define MASK_C_SLLI /;"	d
MASK_C_SLLI_RV32	riscv/encoding.h	/^#define MASK_C_SLLI_RV32 /;"	d
MASK_C_SQ	riscv/encoding.h	/^#define MASK_C_SQ /;"	d
MASK_C_SQSP	riscv/encoding.h	/^#define MASK_C_SQSP /;"	d
MASK_C_SRAI	riscv/encoding.h	/^#define MASK_C_SRAI /;"	d
MASK_C_SRAI_RV32	riscv/encoding.h	/^#define MASK_C_SRAI_RV32 /;"	d
MASK_C_SRLI	riscv/encoding.h	/^#define MASK_C_SRLI /;"	d
MASK_C_SRLI_RV32	riscv/encoding.h	/^#define MASK_C_SRLI_RV32 /;"	d
MASK_C_SUB	riscv/encoding.h	/^#define MASK_C_SUB /;"	d
MASK_C_SUBW	riscv/encoding.h	/^#define MASK_C_SUBW /;"	d
MASK_C_SW	riscv/encoding.h	/^#define MASK_C_SW /;"	d
MASK_C_SWSP	riscv/encoding.h	/^#define MASK_C_SWSP /;"	d
MASK_C_XOR	riscv/encoding.h	/^#define MASK_C_XOR /;"	d
MASK_DIV	riscv/encoding.h	/^#define MASK_DIV /;"	d
MASK_DIVU	riscv/encoding.h	/^#define MASK_DIVU /;"	d
MASK_DIVUW	riscv/encoding.h	/^#define MASK_DIVUW /;"	d
MASK_DIVW	riscv/encoding.h	/^#define MASK_DIVW /;"	d
MASK_DRET	riscv/encoding.h	/^#define MASK_DRET /;"	d
MASK_EBREAK	riscv/encoding.h	/^#define MASK_EBREAK /;"	d
MASK_ECALL	riscv/encoding.h	/^#define MASK_ECALL /;"	d
MASK_FADD_D	riscv/encoding.h	/^#define MASK_FADD_D /;"	d
MASK_FADD_H	riscv/encoding.h	/^#define MASK_FADD_H /;"	d
MASK_FADD_Q	riscv/encoding.h	/^#define MASK_FADD_Q /;"	d
MASK_FADD_S	riscv/encoding.h	/^#define MASK_FADD_S /;"	d
MASK_FCLASS_D	riscv/encoding.h	/^#define MASK_FCLASS_D /;"	d
MASK_FCLASS_H	riscv/encoding.h	/^#define MASK_FCLASS_H /;"	d
MASK_FCLASS_Q	riscv/encoding.h	/^#define MASK_FCLASS_Q /;"	d
MASK_FCLASS_S	riscv/encoding.h	/^#define MASK_FCLASS_S /;"	d
MASK_FCVT_D_H	riscv/encoding.h	/^#define MASK_FCVT_D_H /;"	d
MASK_FCVT_D_L	riscv/encoding.h	/^#define MASK_FCVT_D_L /;"	d
MASK_FCVT_D_LU	riscv/encoding.h	/^#define MASK_FCVT_D_LU /;"	d
MASK_FCVT_D_Q	riscv/encoding.h	/^#define MASK_FCVT_D_Q /;"	d
MASK_FCVT_D_S	riscv/encoding.h	/^#define MASK_FCVT_D_S /;"	d
MASK_FCVT_D_W	riscv/encoding.h	/^#define MASK_FCVT_D_W /;"	d
MASK_FCVT_D_WU	riscv/encoding.h	/^#define MASK_FCVT_D_WU /;"	d
MASK_FCVT_H_D	riscv/encoding.h	/^#define MASK_FCVT_H_D /;"	d
MASK_FCVT_H_L	riscv/encoding.h	/^#define MASK_FCVT_H_L /;"	d
MASK_FCVT_H_LU	riscv/encoding.h	/^#define MASK_FCVT_H_LU /;"	d
MASK_FCVT_H_Q	riscv/encoding.h	/^#define MASK_FCVT_H_Q /;"	d
MASK_FCVT_H_S	riscv/encoding.h	/^#define MASK_FCVT_H_S /;"	d
MASK_FCVT_H_W	riscv/encoding.h	/^#define MASK_FCVT_H_W /;"	d
MASK_FCVT_H_WU	riscv/encoding.h	/^#define MASK_FCVT_H_WU /;"	d
MASK_FCVT_LU_D	riscv/encoding.h	/^#define MASK_FCVT_LU_D /;"	d
MASK_FCVT_LU_H	riscv/encoding.h	/^#define MASK_FCVT_LU_H /;"	d
MASK_FCVT_LU_Q	riscv/encoding.h	/^#define MASK_FCVT_LU_Q /;"	d
MASK_FCVT_LU_S	riscv/encoding.h	/^#define MASK_FCVT_LU_S /;"	d
MASK_FCVT_L_D	riscv/encoding.h	/^#define MASK_FCVT_L_D /;"	d
MASK_FCVT_L_H	riscv/encoding.h	/^#define MASK_FCVT_L_H /;"	d
MASK_FCVT_L_Q	riscv/encoding.h	/^#define MASK_FCVT_L_Q /;"	d
MASK_FCVT_L_S	riscv/encoding.h	/^#define MASK_FCVT_L_S /;"	d
MASK_FCVT_Q_D	riscv/encoding.h	/^#define MASK_FCVT_Q_D /;"	d
MASK_FCVT_Q_H	riscv/encoding.h	/^#define MASK_FCVT_Q_H /;"	d
MASK_FCVT_Q_L	riscv/encoding.h	/^#define MASK_FCVT_Q_L /;"	d
MASK_FCVT_Q_LU	riscv/encoding.h	/^#define MASK_FCVT_Q_LU /;"	d
MASK_FCVT_Q_S	riscv/encoding.h	/^#define MASK_FCVT_Q_S /;"	d
MASK_FCVT_Q_W	riscv/encoding.h	/^#define MASK_FCVT_Q_W /;"	d
MASK_FCVT_Q_WU	riscv/encoding.h	/^#define MASK_FCVT_Q_WU /;"	d
MASK_FCVT_S_D	riscv/encoding.h	/^#define MASK_FCVT_S_D /;"	d
MASK_FCVT_S_H	riscv/encoding.h	/^#define MASK_FCVT_S_H /;"	d
MASK_FCVT_S_L	riscv/encoding.h	/^#define MASK_FCVT_S_L /;"	d
MASK_FCVT_S_LU	riscv/encoding.h	/^#define MASK_FCVT_S_LU /;"	d
MASK_FCVT_S_Q	riscv/encoding.h	/^#define MASK_FCVT_S_Q /;"	d
MASK_FCVT_S_W	riscv/encoding.h	/^#define MASK_FCVT_S_W /;"	d
MASK_FCVT_S_WU	riscv/encoding.h	/^#define MASK_FCVT_S_WU /;"	d
MASK_FCVT_WU_D	riscv/encoding.h	/^#define MASK_FCVT_WU_D /;"	d
MASK_FCVT_WU_H	riscv/encoding.h	/^#define MASK_FCVT_WU_H /;"	d
MASK_FCVT_WU_Q	riscv/encoding.h	/^#define MASK_FCVT_WU_Q /;"	d
MASK_FCVT_WU_S	riscv/encoding.h	/^#define MASK_FCVT_WU_S /;"	d
MASK_FCVT_W_D	riscv/encoding.h	/^#define MASK_FCVT_W_D /;"	d
MASK_FCVT_W_H	riscv/encoding.h	/^#define MASK_FCVT_W_H /;"	d
MASK_FCVT_W_Q	riscv/encoding.h	/^#define MASK_FCVT_W_Q /;"	d
MASK_FCVT_W_S	riscv/encoding.h	/^#define MASK_FCVT_W_S /;"	d
MASK_FDIV_D	riscv/encoding.h	/^#define MASK_FDIV_D /;"	d
MASK_FDIV_H	riscv/encoding.h	/^#define MASK_FDIV_H /;"	d
MASK_FDIV_Q	riscv/encoding.h	/^#define MASK_FDIV_Q /;"	d
MASK_FDIV_S	riscv/encoding.h	/^#define MASK_FDIV_S /;"	d
MASK_FENCE	riscv/encoding.h	/^#define MASK_FENCE /;"	d
MASK_FENCE_I	riscv/encoding.h	/^#define MASK_FENCE_I /;"	d
MASK_FENCE_TSO	riscv/encoding.h	/^#define MASK_FENCE_TSO /;"	d
MASK_FEQ_D	riscv/encoding.h	/^#define MASK_FEQ_D /;"	d
MASK_FEQ_H	riscv/encoding.h	/^#define MASK_FEQ_H /;"	d
MASK_FEQ_Q	riscv/encoding.h	/^#define MASK_FEQ_Q /;"	d
MASK_FEQ_S	riscv/encoding.h	/^#define MASK_FEQ_S /;"	d
MASK_FLD	riscv/encoding.h	/^#define MASK_FLD /;"	d
MASK_FLE_D	riscv/encoding.h	/^#define MASK_FLE_D /;"	d
MASK_FLE_H	riscv/encoding.h	/^#define MASK_FLE_H /;"	d
MASK_FLE_Q	riscv/encoding.h	/^#define MASK_FLE_Q /;"	d
MASK_FLE_S	riscv/encoding.h	/^#define MASK_FLE_S /;"	d
MASK_FLH	riscv/encoding.h	/^#define MASK_FLH /;"	d
MASK_FLQ	riscv/encoding.h	/^#define MASK_FLQ /;"	d
MASK_FLT_D	riscv/encoding.h	/^#define MASK_FLT_D /;"	d
MASK_FLT_H	riscv/encoding.h	/^#define MASK_FLT_H /;"	d
MASK_FLT_Q	riscv/encoding.h	/^#define MASK_FLT_Q /;"	d
MASK_FLT_S	riscv/encoding.h	/^#define MASK_FLT_S /;"	d
MASK_FLW	riscv/encoding.h	/^#define MASK_FLW /;"	d
MASK_FMADD_D	riscv/encoding.h	/^#define MASK_FMADD_D /;"	d
MASK_FMADD_H	riscv/encoding.h	/^#define MASK_FMADD_H /;"	d
MASK_FMADD_Q	riscv/encoding.h	/^#define MASK_FMADD_Q /;"	d
MASK_FMADD_S	riscv/encoding.h	/^#define MASK_FMADD_S /;"	d
MASK_FMAX_D	riscv/encoding.h	/^#define MASK_FMAX_D /;"	d
MASK_FMAX_H	riscv/encoding.h	/^#define MASK_FMAX_H /;"	d
MASK_FMAX_Q	riscv/encoding.h	/^#define MASK_FMAX_Q /;"	d
MASK_FMAX_S	riscv/encoding.h	/^#define MASK_FMAX_S /;"	d
MASK_FMIN_D	riscv/encoding.h	/^#define MASK_FMIN_D /;"	d
MASK_FMIN_H	riscv/encoding.h	/^#define MASK_FMIN_H /;"	d
MASK_FMIN_Q	riscv/encoding.h	/^#define MASK_FMIN_Q /;"	d
MASK_FMIN_S	riscv/encoding.h	/^#define MASK_FMIN_S /;"	d
MASK_FMSUB_D	riscv/encoding.h	/^#define MASK_FMSUB_D /;"	d
MASK_FMSUB_H	riscv/encoding.h	/^#define MASK_FMSUB_H /;"	d
MASK_FMSUB_Q	riscv/encoding.h	/^#define MASK_FMSUB_Q /;"	d
MASK_FMSUB_S	riscv/encoding.h	/^#define MASK_FMSUB_S /;"	d
MASK_FMUL_D	riscv/encoding.h	/^#define MASK_FMUL_D /;"	d
MASK_FMUL_H	riscv/encoding.h	/^#define MASK_FMUL_H /;"	d
MASK_FMUL_Q	riscv/encoding.h	/^#define MASK_FMUL_Q /;"	d
MASK_FMUL_S	riscv/encoding.h	/^#define MASK_FMUL_S /;"	d
MASK_FMV_D_X	riscv/encoding.h	/^#define MASK_FMV_D_X /;"	d
MASK_FMV_H_X	riscv/encoding.h	/^#define MASK_FMV_H_X /;"	d
MASK_FMV_Q_X	riscv/encoding.h	/^#define MASK_FMV_Q_X /;"	d
MASK_FMV_S_X	riscv/encoding.h	/^#define MASK_FMV_S_X /;"	d
MASK_FMV_W_X	riscv/encoding.h	/^#define MASK_FMV_W_X /;"	d
MASK_FMV_X_D	riscv/encoding.h	/^#define MASK_FMV_X_D /;"	d
MASK_FMV_X_H	riscv/encoding.h	/^#define MASK_FMV_X_H /;"	d
MASK_FMV_X_Q	riscv/encoding.h	/^#define MASK_FMV_X_Q /;"	d
MASK_FMV_X_S	riscv/encoding.h	/^#define MASK_FMV_X_S /;"	d
MASK_FMV_X_W	riscv/encoding.h	/^#define MASK_FMV_X_W /;"	d
MASK_FNMADD_D	riscv/encoding.h	/^#define MASK_FNMADD_D /;"	d
MASK_FNMADD_H	riscv/encoding.h	/^#define MASK_FNMADD_H /;"	d
MASK_FNMADD_Q	riscv/encoding.h	/^#define MASK_FNMADD_Q /;"	d
MASK_FNMADD_S	riscv/encoding.h	/^#define MASK_FNMADD_S /;"	d
MASK_FNMSUB_D	riscv/encoding.h	/^#define MASK_FNMSUB_D /;"	d
MASK_FNMSUB_H	riscv/encoding.h	/^#define MASK_FNMSUB_H /;"	d
MASK_FNMSUB_Q	riscv/encoding.h	/^#define MASK_FNMSUB_Q /;"	d
MASK_FNMSUB_S	riscv/encoding.h	/^#define MASK_FNMSUB_S /;"	d
MASK_FRCSR	riscv/encoding.h	/^#define MASK_FRCSR /;"	d
MASK_FRFLAGS	riscv/encoding.h	/^#define MASK_FRFLAGS /;"	d
MASK_FRRM	riscv/encoding.h	/^#define MASK_FRRM /;"	d
MASK_FSCSR	riscv/encoding.h	/^#define MASK_FSCSR /;"	d
MASK_FSD	riscv/encoding.h	/^#define MASK_FSD /;"	d
MASK_FSFLAGS	riscv/encoding.h	/^#define MASK_FSFLAGS /;"	d
MASK_FSFLAGSI	riscv/encoding.h	/^#define MASK_FSFLAGSI /;"	d
MASK_FSGNJN_D	riscv/encoding.h	/^#define MASK_FSGNJN_D /;"	d
MASK_FSGNJN_H	riscv/encoding.h	/^#define MASK_FSGNJN_H /;"	d
MASK_FSGNJN_Q	riscv/encoding.h	/^#define MASK_FSGNJN_Q /;"	d
MASK_FSGNJN_S	riscv/encoding.h	/^#define MASK_FSGNJN_S /;"	d
MASK_FSGNJX_D	riscv/encoding.h	/^#define MASK_FSGNJX_D /;"	d
MASK_FSGNJX_H	riscv/encoding.h	/^#define MASK_FSGNJX_H /;"	d
MASK_FSGNJX_Q	riscv/encoding.h	/^#define MASK_FSGNJX_Q /;"	d
MASK_FSGNJX_S	riscv/encoding.h	/^#define MASK_FSGNJX_S /;"	d
MASK_FSGNJ_D	riscv/encoding.h	/^#define MASK_FSGNJ_D /;"	d
MASK_FSGNJ_H	riscv/encoding.h	/^#define MASK_FSGNJ_H /;"	d
MASK_FSGNJ_Q	riscv/encoding.h	/^#define MASK_FSGNJ_Q /;"	d
MASK_FSGNJ_S	riscv/encoding.h	/^#define MASK_FSGNJ_S /;"	d
MASK_FSH	riscv/encoding.h	/^#define MASK_FSH /;"	d
MASK_FSL	riscv/encoding.h	/^#define MASK_FSL /;"	d
MASK_FSLW	riscv/encoding.h	/^#define MASK_FSLW /;"	d
MASK_FSQ	riscv/encoding.h	/^#define MASK_FSQ /;"	d
MASK_FSQRT_D	riscv/encoding.h	/^#define MASK_FSQRT_D /;"	d
MASK_FSQRT_H	riscv/encoding.h	/^#define MASK_FSQRT_H /;"	d
MASK_FSQRT_Q	riscv/encoding.h	/^#define MASK_FSQRT_Q /;"	d
MASK_FSQRT_S	riscv/encoding.h	/^#define MASK_FSQRT_S /;"	d
MASK_FSR	riscv/encoding.h	/^#define MASK_FSR /;"	d
MASK_FSRI	riscv/encoding.h	/^#define MASK_FSRI /;"	d
MASK_FSRIW	riscv/encoding.h	/^#define MASK_FSRIW /;"	d
MASK_FSRM	riscv/encoding.h	/^#define MASK_FSRM /;"	d
MASK_FSRMI	riscv/encoding.h	/^#define MASK_FSRMI /;"	d
MASK_FSRW	riscv/encoding.h	/^#define MASK_FSRW /;"	d
MASK_FSUB_D	riscv/encoding.h	/^#define MASK_FSUB_D /;"	d
MASK_FSUB_H	riscv/encoding.h	/^#define MASK_FSUB_H /;"	d
MASK_FSUB_Q	riscv/encoding.h	/^#define MASK_FSUB_Q /;"	d
MASK_FSUB_S	riscv/encoding.h	/^#define MASK_FSUB_S /;"	d
MASK_FSW	riscv/encoding.h	/^#define MASK_FSW /;"	d
MASK_GORC	riscv/encoding.h	/^#define MASK_GORC /;"	d
MASK_GORCI	riscv/encoding.h	/^#define MASK_GORCI /;"	d
MASK_GORCIW	riscv/encoding.h	/^#define MASK_GORCIW /;"	d
MASK_GORCW	riscv/encoding.h	/^#define MASK_GORCW /;"	d
MASK_GREV	riscv/encoding.h	/^#define MASK_GREV /;"	d
MASK_GREVI	riscv/encoding.h	/^#define MASK_GREVI /;"	d
MASK_GREVIW	riscv/encoding.h	/^#define MASK_GREVIW /;"	d
MASK_GREVW	riscv/encoding.h	/^#define MASK_GREVW /;"	d
MASK_HFENCE_GVMA	riscv/encoding.h	/^#define MASK_HFENCE_GVMA /;"	d
MASK_HFENCE_VVMA	riscv/encoding.h	/^#define MASK_HFENCE_VVMA /;"	d
MASK_HLVX_HU	riscv/encoding.h	/^#define MASK_HLVX_HU /;"	d
MASK_HLVX_WU	riscv/encoding.h	/^#define MASK_HLVX_WU /;"	d
MASK_HLV_B	riscv/encoding.h	/^#define MASK_HLV_B /;"	d
MASK_HLV_BU	riscv/encoding.h	/^#define MASK_HLV_BU /;"	d
MASK_HLV_D	riscv/encoding.h	/^#define MASK_HLV_D /;"	d
MASK_HLV_H	riscv/encoding.h	/^#define MASK_HLV_H /;"	d
MASK_HLV_HU	riscv/encoding.h	/^#define MASK_HLV_HU /;"	d
MASK_HLV_W	riscv/encoding.h	/^#define MASK_HLV_W /;"	d
MASK_HLV_WU	riscv/encoding.h	/^#define MASK_HLV_WU /;"	d
MASK_HSV_B	riscv/encoding.h	/^#define MASK_HSV_B /;"	d
MASK_HSV_D	riscv/encoding.h	/^#define MASK_HSV_D /;"	d
MASK_HSV_H	riscv/encoding.h	/^#define MASK_HSV_H /;"	d
MASK_HSV_W	riscv/encoding.h	/^#define MASK_HSV_W /;"	d
MASK_JAL	riscv/encoding.h	/^#define MASK_JAL /;"	d
MASK_JALR	riscv/encoding.h	/^#define MASK_JALR /;"	d
MASK_LB	riscv/encoding.h	/^#define MASK_LB /;"	d
MASK_LBU	riscv/encoding.h	/^#define MASK_LBU /;"	d
MASK_LD	riscv/encoding.h	/^#define MASK_LD /;"	d
MASK_LH	riscv/encoding.h	/^#define MASK_LH /;"	d
MASK_LHU	riscv/encoding.h	/^#define MASK_LHU /;"	d
MASK_LR_D	riscv/encoding.h	/^#define MASK_LR_D /;"	d
MASK_LR_W	riscv/encoding.h	/^#define MASK_LR_W /;"	d
MASK_LUI	riscv/encoding.h	/^#define MASK_LUI /;"	d
MASK_LW	riscv/encoding.h	/^#define MASK_LW /;"	d
MASK_LWU	riscv/encoding.h	/^#define MASK_LWU /;"	d
MASK_MAX	riscv/encoding.h	/^#define MASK_MAX /;"	d
MASK_MAXU	riscv/encoding.h	/^#define MASK_MAXU /;"	d
MASK_MIN	riscv/encoding.h	/^#define MASK_MIN /;"	d
MASK_MINU	riscv/encoding.h	/^#define MASK_MINU /;"	d
MASK_MRET	riscv/encoding.h	/^#define MASK_MRET /;"	d
MASK_MUL	riscv/encoding.h	/^#define MASK_MUL /;"	d
MASK_MULH	riscv/encoding.h	/^#define MASK_MULH /;"	d
MASK_MULHSU	riscv/encoding.h	/^#define MASK_MULHSU /;"	d
MASK_MULHU	riscv/encoding.h	/^#define MASK_MULHU /;"	d
MASK_MULW	riscv/encoding.h	/^#define MASK_MULW /;"	d
MASK_OR	riscv/encoding.h	/^#define MASK_OR /;"	d
MASK_ORI	riscv/encoding.h	/^#define MASK_ORI /;"	d
MASK_ORN	riscv/encoding.h	/^#define MASK_ORN /;"	d
MASK_PACK	riscv/encoding.h	/^#define MASK_PACK /;"	d
MASK_PACKH	riscv/encoding.h	/^#define MASK_PACKH /;"	d
MASK_PACKU	riscv/encoding.h	/^#define MASK_PACKU /;"	d
MASK_PACKUW	riscv/encoding.h	/^#define MASK_PACKUW /;"	d
MASK_PACKW	riscv/encoding.h	/^#define MASK_PACKW /;"	d
MASK_PAUSE	riscv/encoding.h	/^#define MASK_PAUSE /;"	d
MASK_PCNT	riscv/encoding.h	/^#define MASK_PCNT /;"	d
MASK_PCNTW	riscv/encoding.h	/^#define MASK_PCNTW /;"	d
MASK_RDCYCLE	riscv/encoding.h	/^#define MASK_RDCYCLE /;"	d
MASK_RDCYCLEH	riscv/encoding.h	/^#define MASK_RDCYCLEH /;"	d
MASK_RDINSTRET	riscv/encoding.h	/^#define MASK_RDINSTRET /;"	d
MASK_RDINSTRETH	riscv/encoding.h	/^#define MASK_RDINSTRETH /;"	d
MASK_RDTIME	riscv/encoding.h	/^#define MASK_RDTIME /;"	d
MASK_RDTIMEH	riscv/encoding.h	/^#define MASK_RDTIMEH /;"	d
MASK_REM	riscv/encoding.h	/^#define MASK_REM /;"	d
MASK_REMU	riscv/encoding.h	/^#define MASK_REMU /;"	d
MASK_REMUW	riscv/encoding.h	/^#define MASK_REMUW /;"	d
MASK_REMW	riscv/encoding.h	/^#define MASK_REMW /;"	d
MASK_ROL	riscv/encoding.h	/^#define MASK_ROL /;"	d
MASK_ROLW	riscv/encoding.h	/^#define MASK_ROLW /;"	d
MASK_ROR	riscv/encoding.h	/^#define MASK_ROR /;"	d
MASK_RORI	riscv/encoding.h	/^#define MASK_RORI /;"	d
MASK_RORIW	riscv/encoding.h	/^#define MASK_RORIW /;"	d
MASK_RORW	riscv/encoding.h	/^#define MASK_RORW /;"	d
MASK_SB	riscv/encoding.h	/^#define MASK_SB /;"	d
MASK_SBCLR	riscv/encoding.h	/^#define MASK_SBCLR /;"	d
MASK_SBCLRI	riscv/encoding.h	/^#define MASK_SBCLRI /;"	d
MASK_SBCLRIW	riscv/encoding.h	/^#define MASK_SBCLRIW /;"	d
MASK_SBCLRW	riscv/encoding.h	/^#define MASK_SBCLRW /;"	d
MASK_SBEXT	riscv/encoding.h	/^#define MASK_SBEXT /;"	d
MASK_SBEXTI	riscv/encoding.h	/^#define MASK_SBEXTI /;"	d
MASK_SBEXTW	riscv/encoding.h	/^#define MASK_SBEXTW /;"	d
MASK_SBINV	riscv/encoding.h	/^#define MASK_SBINV /;"	d
MASK_SBINVI	riscv/encoding.h	/^#define MASK_SBINVI /;"	d
MASK_SBINVIW	riscv/encoding.h	/^#define MASK_SBINVIW /;"	d
MASK_SBINVW	riscv/encoding.h	/^#define MASK_SBINVW /;"	d
MASK_SBREAK	riscv/encoding.h	/^#define MASK_SBREAK /;"	d
MASK_SBSET	riscv/encoding.h	/^#define MASK_SBSET /;"	d
MASK_SBSETI	riscv/encoding.h	/^#define MASK_SBSETI /;"	d
MASK_SBSETIW	riscv/encoding.h	/^#define MASK_SBSETIW /;"	d
MASK_SBSETW	riscv/encoding.h	/^#define MASK_SBSETW /;"	d
MASK_SCALL	riscv/encoding.h	/^#define MASK_SCALL /;"	d
MASK_SC_D	riscv/encoding.h	/^#define MASK_SC_D /;"	d
MASK_SC_W	riscv/encoding.h	/^#define MASK_SC_W /;"	d
MASK_SD	riscv/encoding.h	/^#define MASK_SD /;"	d
MASK_SEXT_B	riscv/encoding.h	/^#define MASK_SEXT_B /;"	d
MASK_SEXT_H	riscv/encoding.h	/^#define MASK_SEXT_H /;"	d
MASK_SFENCE_VMA	riscv/encoding.h	/^#define MASK_SFENCE_VMA /;"	d
MASK_SH	riscv/encoding.h	/^#define MASK_SH /;"	d
MASK_SH1ADD	riscv/encoding.h	/^#define MASK_SH1ADD /;"	d
MASK_SH1ADDU_W	riscv/encoding.h	/^#define MASK_SH1ADDU_W /;"	d
MASK_SH2ADD	riscv/encoding.h	/^#define MASK_SH2ADD /;"	d
MASK_SH2ADDU_W	riscv/encoding.h	/^#define MASK_SH2ADDU_W /;"	d
MASK_SH3ADD	riscv/encoding.h	/^#define MASK_SH3ADD /;"	d
MASK_SH3ADDU_W	riscv/encoding.h	/^#define MASK_SH3ADDU_W /;"	d
MASK_SHFL	riscv/encoding.h	/^#define MASK_SHFL /;"	d
MASK_SHFLI	riscv/encoding.h	/^#define MASK_SHFLI /;"	d
MASK_SHFLW	riscv/encoding.h	/^#define MASK_SHFLW /;"	d
MASK_SLL	riscv/encoding.h	/^#define MASK_SLL /;"	d
MASK_SLLI	riscv/encoding.h	/^#define MASK_SLLI /;"	d
MASK_SLLIU_W	riscv/encoding.h	/^#define MASK_SLLIU_W /;"	d
MASK_SLLIW	riscv/encoding.h	/^#define MASK_SLLIW /;"	d
MASK_SLLI_RV32	riscv/encoding.h	/^#define MASK_SLLI_RV32 /;"	d
MASK_SLLW	riscv/encoding.h	/^#define MASK_SLLW /;"	d
MASK_SLO	riscv/encoding.h	/^#define MASK_SLO /;"	d
MASK_SLOI	riscv/encoding.h	/^#define MASK_SLOI /;"	d
MASK_SLOIW	riscv/encoding.h	/^#define MASK_SLOIW /;"	d
MASK_SLOW	riscv/encoding.h	/^#define MASK_SLOW /;"	d
MASK_SLT	riscv/encoding.h	/^#define MASK_SLT /;"	d
MASK_SLTI	riscv/encoding.h	/^#define MASK_SLTI /;"	d
MASK_SLTIU	riscv/encoding.h	/^#define MASK_SLTIU /;"	d
MASK_SLTU	riscv/encoding.h	/^#define MASK_SLTU /;"	d
MASK_SRA	riscv/encoding.h	/^#define MASK_SRA /;"	d
MASK_SRAI	riscv/encoding.h	/^#define MASK_SRAI /;"	d
MASK_SRAIW	riscv/encoding.h	/^#define MASK_SRAIW /;"	d
MASK_SRAI_RV32	riscv/encoding.h	/^#define MASK_SRAI_RV32 /;"	d
MASK_SRAW	riscv/encoding.h	/^#define MASK_SRAW /;"	d
MASK_SRET	riscv/encoding.h	/^#define MASK_SRET /;"	d
MASK_SRL	riscv/encoding.h	/^#define MASK_SRL /;"	d
MASK_SRLI	riscv/encoding.h	/^#define MASK_SRLI /;"	d
MASK_SRLIW	riscv/encoding.h	/^#define MASK_SRLIW /;"	d
MASK_SRLI_RV32	riscv/encoding.h	/^#define MASK_SRLI_RV32 /;"	d
MASK_SRLW	riscv/encoding.h	/^#define MASK_SRLW /;"	d
MASK_SRO	riscv/encoding.h	/^#define MASK_SRO /;"	d
MASK_SROI	riscv/encoding.h	/^#define MASK_SROI /;"	d
MASK_SROIW	riscv/encoding.h	/^#define MASK_SROIW /;"	d
MASK_SROW	riscv/encoding.h	/^#define MASK_SROW /;"	d
MASK_SUB	riscv/encoding.h	/^#define MASK_SUB /;"	d
MASK_SUBU_W	riscv/encoding.h	/^#define MASK_SUBU_W /;"	d
MASK_SUBW	riscv/encoding.h	/^#define MASK_SUBW /;"	d
MASK_SUBWU	riscv/encoding.h	/^#define MASK_SUBWU /;"	d
MASK_SW	riscv/encoding.h	/^#define MASK_SW /;"	d
MASK_UNSHFL	riscv/encoding.h	/^#define MASK_UNSHFL /;"	d
MASK_UNSHFLI	riscv/encoding.h	/^#define MASK_UNSHFLI /;"	d
MASK_UNSHFLW	riscv/encoding.h	/^#define MASK_UNSHFLW /;"	d
MASK_URET	riscv/encoding.h	/^#define MASK_URET /;"	d
MASK_VAADDU_VV	riscv/encoding.h	/^#define MASK_VAADDU_VV /;"	d
MASK_VAADDU_VX	riscv/encoding.h	/^#define MASK_VAADDU_VX /;"	d
MASK_VAADD_VV	riscv/encoding.h	/^#define MASK_VAADD_VV /;"	d
MASK_VAADD_VX	riscv/encoding.h	/^#define MASK_VAADD_VX /;"	d
MASK_VADC_VIM	riscv/encoding.h	/^#define MASK_VADC_VIM /;"	d
MASK_VADC_VVM	riscv/encoding.h	/^#define MASK_VADC_VVM /;"	d
MASK_VADC_VXM	riscv/encoding.h	/^#define MASK_VADC_VXM /;"	d
MASK_VADD_VI	riscv/encoding.h	/^#define MASK_VADD_VI /;"	d
MASK_VADD_VV	riscv/encoding.h	/^#define MASK_VADD_VV /;"	d
MASK_VADD_VX	riscv/encoding.h	/^#define MASK_VADD_VX /;"	d
MASK_VAMOADDEI16_V	riscv/encoding.h	/^#define MASK_VAMOADDEI16_V /;"	d
MASK_VAMOADDEI32_V	riscv/encoding.h	/^#define MASK_VAMOADDEI32_V /;"	d
MASK_VAMOADDEI64_V	riscv/encoding.h	/^#define MASK_VAMOADDEI64_V /;"	d
MASK_VAMOADDEI8_V	riscv/encoding.h	/^#define MASK_VAMOADDEI8_V /;"	d
MASK_VAMOANDEI16_V	riscv/encoding.h	/^#define MASK_VAMOANDEI16_V /;"	d
MASK_VAMOANDEI32_V	riscv/encoding.h	/^#define MASK_VAMOANDEI32_V /;"	d
MASK_VAMOANDEI64_V	riscv/encoding.h	/^#define MASK_VAMOANDEI64_V /;"	d
MASK_VAMOANDEI8_V	riscv/encoding.h	/^#define MASK_VAMOANDEI8_V /;"	d
MASK_VAMOMAXEI16_V	riscv/encoding.h	/^#define MASK_VAMOMAXEI16_V /;"	d
MASK_VAMOMAXEI32_V	riscv/encoding.h	/^#define MASK_VAMOMAXEI32_V /;"	d
MASK_VAMOMAXEI64_V	riscv/encoding.h	/^#define MASK_VAMOMAXEI64_V /;"	d
MASK_VAMOMAXEI8_V	riscv/encoding.h	/^#define MASK_VAMOMAXEI8_V /;"	d
MASK_VAMOMAXUEI16_V	riscv/encoding.h	/^#define MASK_VAMOMAXUEI16_V /;"	d
MASK_VAMOMAXUEI32_V	riscv/encoding.h	/^#define MASK_VAMOMAXUEI32_V /;"	d
MASK_VAMOMAXUEI64_V	riscv/encoding.h	/^#define MASK_VAMOMAXUEI64_V /;"	d
MASK_VAMOMAXUEI8_V	riscv/encoding.h	/^#define MASK_VAMOMAXUEI8_V /;"	d
MASK_VAMOMINEI16_V	riscv/encoding.h	/^#define MASK_VAMOMINEI16_V /;"	d
MASK_VAMOMINEI32_V	riscv/encoding.h	/^#define MASK_VAMOMINEI32_V /;"	d
MASK_VAMOMINEI64_V	riscv/encoding.h	/^#define MASK_VAMOMINEI64_V /;"	d
MASK_VAMOMINEI8_V	riscv/encoding.h	/^#define MASK_VAMOMINEI8_V /;"	d
MASK_VAMOMINUEI16_V	riscv/encoding.h	/^#define MASK_VAMOMINUEI16_V /;"	d
MASK_VAMOMINUEI32_V	riscv/encoding.h	/^#define MASK_VAMOMINUEI32_V /;"	d
MASK_VAMOMINUEI64_V	riscv/encoding.h	/^#define MASK_VAMOMINUEI64_V /;"	d
MASK_VAMOMINUEI8_V	riscv/encoding.h	/^#define MASK_VAMOMINUEI8_V /;"	d
MASK_VAMOOREI16_V	riscv/encoding.h	/^#define MASK_VAMOOREI16_V /;"	d
MASK_VAMOOREI32_V	riscv/encoding.h	/^#define MASK_VAMOOREI32_V /;"	d
MASK_VAMOOREI64_V	riscv/encoding.h	/^#define MASK_VAMOOREI64_V /;"	d
MASK_VAMOOREI8_V	riscv/encoding.h	/^#define MASK_VAMOOREI8_V /;"	d
MASK_VAMOSWAPEI16_V	riscv/encoding.h	/^#define MASK_VAMOSWAPEI16_V /;"	d
MASK_VAMOSWAPEI32_V	riscv/encoding.h	/^#define MASK_VAMOSWAPEI32_V /;"	d
MASK_VAMOSWAPEI64_V	riscv/encoding.h	/^#define MASK_VAMOSWAPEI64_V /;"	d
MASK_VAMOSWAPEI8_V	riscv/encoding.h	/^#define MASK_VAMOSWAPEI8_V /;"	d
MASK_VAMOXOREI16_V	riscv/encoding.h	/^#define MASK_VAMOXOREI16_V /;"	d
MASK_VAMOXOREI32_V	riscv/encoding.h	/^#define MASK_VAMOXOREI32_V /;"	d
MASK_VAMOXOREI64_V	riscv/encoding.h	/^#define MASK_VAMOXOREI64_V /;"	d
MASK_VAMOXOREI8_V	riscv/encoding.h	/^#define MASK_VAMOXOREI8_V /;"	d
MASK_VAND_VI	riscv/encoding.h	/^#define MASK_VAND_VI /;"	d
MASK_VAND_VV	riscv/encoding.h	/^#define MASK_VAND_VV /;"	d
MASK_VAND_VX	riscv/encoding.h	/^#define MASK_VAND_VX /;"	d
MASK_VASUBU_VV	riscv/encoding.h	/^#define MASK_VASUBU_VV /;"	d
MASK_VASUBU_VX	riscv/encoding.h	/^#define MASK_VASUBU_VX /;"	d
MASK_VASUB_VV	riscv/encoding.h	/^#define MASK_VASUB_VV /;"	d
MASK_VASUB_VX	riscv/encoding.h	/^#define MASK_VASUB_VX /;"	d
MASK_VCOMPRESS_VM	riscv/encoding.h	/^#define MASK_VCOMPRESS_VM /;"	d
MASK_VDIVU_VV	riscv/encoding.h	/^#define MASK_VDIVU_VV /;"	d
MASK_VDIVU_VX	riscv/encoding.h	/^#define MASK_VDIVU_VX /;"	d
MASK_VDIV_VV	riscv/encoding.h	/^#define MASK_VDIV_VV /;"	d
MASK_VDIV_VX	riscv/encoding.h	/^#define MASK_VDIV_VX /;"	d
MASK_VDOTU_VV	riscv/encoding.h	/^#define MASK_VDOTU_VV /;"	d
MASK_VDOT_VV	riscv/encoding.h	/^#define MASK_VDOT_VV /;"	d
MASK_VFADD_VF	riscv/encoding.h	/^#define MASK_VFADD_VF /;"	d
MASK_VFADD_VV	riscv/encoding.h	/^#define MASK_VFADD_VV /;"	d
MASK_VFCLASS_V	riscv/encoding.h	/^#define MASK_VFCLASS_V /;"	d
MASK_VFCVT_F_XU_V	riscv/encoding.h	/^#define MASK_VFCVT_F_XU_V /;"	d
MASK_VFCVT_F_X_V	riscv/encoding.h	/^#define MASK_VFCVT_F_X_V /;"	d
MASK_VFCVT_RTZ_XU_F_V	riscv/encoding.h	/^#define MASK_VFCVT_RTZ_XU_F_V /;"	d
MASK_VFCVT_RTZ_X_F_V	riscv/encoding.h	/^#define MASK_VFCVT_RTZ_X_F_V /;"	d
MASK_VFCVT_XU_F_V	riscv/encoding.h	/^#define MASK_VFCVT_XU_F_V /;"	d
MASK_VFCVT_X_F_V	riscv/encoding.h	/^#define MASK_VFCVT_X_F_V /;"	d
MASK_VFDIV_VF	riscv/encoding.h	/^#define MASK_VFDIV_VF /;"	d
MASK_VFDIV_VV	riscv/encoding.h	/^#define MASK_VFDIV_VV /;"	d
MASK_VFDOT_VV	riscv/encoding.h	/^#define MASK_VFDOT_VV /;"	d
MASK_VFIRST_M	riscv/encoding.h	/^#define MASK_VFIRST_M /;"	d
MASK_VFMACC_VF	riscv/encoding.h	/^#define MASK_VFMACC_VF /;"	d
MASK_VFMACC_VV	riscv/encoding.h	/^#define MASK_VFMACC_VV /;"	d
MASK_VFMADD_VF	riscv/encoding.h	/^#define MASK_VFMADD_VF /;"	d
MASK_VFMADD_VV	riscv/encoding.h	/^#define MASK_VFMADD_VV /;"	d
MASK_VFMAX_VF	riscv/encoding.h	/^#define MASK_VFMAX_VF /;"	d
MASK_VFMAX_VV	riscv/encoding.h	/^#define MASK_VFMAX_VV /;"	d
MASK_VFMERGE_VFM	riscv/encoding.h	/^#define MASK_VFMERGE_VFM /;"	d
MASK_VFMIN_VF	riscv/encoding.h	/^#define MASK_VFMIN_VF /;"	d
MASK_VFMIN_VV	riscv/encoding.h	/^#define MASK_VFMIN_VV /;"	d
MASK_VFMSAC_VF	riscv/encoding.h	/^#define MASK_VFMSAC_VF /;"	d
MASK_VFMSAC_VV	riscv/encoding.h	/^#define MASK_VFMSAC_VV /;"	d
MASK_VFMSUB_VF	riscv/encoding.h	/^#define MASK_VFMSUB_VF /;"	d
MASK_VFMSUB_VV	riscv/encoding.h	/^#define MASK_VFMSUB_VV /;"	d
MASK_VFMUL_VF	riscv/encoding.h	/^#define MASK_VFMUL_VF /;"	d
MASK_VFMUL_VV	riscv/encoding.h	/^#define MASK_VFMUL_VV /;"	d
MASK_VFMV_F_S	riscv/encoding.h	/^#define MASK_VFMV_F_S /;"	d
MASK_VFMV_S_F	riscv/encoding.h	/^#define MASK_VFMV_S_F /;"	d
MASK_VFMV_V_F	riscv/encoding.h	/^#define MASK_VFMV_V_F /;"	d
MASK_VFNCVT_F_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_F_F_W /;"	d
MASK_VFNCVT_F_XU_W	riscv/encoding.h	/^#define MASK_VFNCVT_F_XU_W /;"	d
MASK_VFNCVT_F_X_W	riscv/encoding.h	/^#define MASK_VFNCVT_F_X_W /;"	d
MASK_VFNCVT_ROD_F_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_ROD_F_F_W /;"	d
MASK_VFNCVT_RTZ_XU_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_RTZ_XU_F_W /;"	d
MASK_VFNCVT_RTZ_X_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_RTZ_X_F_W /;"	d
MASK_VFNCVT_XU_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_XU_F_W /;"	d
MASK_VFNCVT_X_F_W	riscv/encoding.h	/^#define MASK_VFNCVT_X_F_W /;"	d
MASK_VFNMACC_VF	riscv/encoding.h	/^#define MASK_VFNMACC_VF /;"	d
MASK_VFNMACC_VV	riscv/encoding.h	/^#define MASK_VFNMACC_VV /;"	d
MASK_VFNMADD_VF	riscv/encoding.h	/^#define MASK_VFNMADD_VF /;"	d
MASK_VFNMADD_VV	riscv/encoding.h	/^#define MASK_VFNMADD_VV /;"	d
MASK_VFNMSAC_VF	riscv/encoding.h	/^#define MASK_VFNMSAC_VF /;"	d
MASK_VFNMSAC_VV	riscv/encoding.h	/^#define MASK_VFNMSAC_VV /;"	d
MASK_VFNMSUB_VF	riscv/encoding.h	/^#define MASK_VFNMSUB_VF /;"	d
MASK_VFNMSUB_VV	riscv/encoding.h	/^#define MASK_VFNMSUB_VV /;"	d
MASK_VFRDIV_VF	riscv/encoding.h	/^#define MASK_VFRDIV_VF /;"	d
MASK_VFRECE7_V	riscv/encoding.h	/^#define MASK_VFRECE7_V /;"	d
MASK_VFREDMAX_VS	riscv/encoding.h	/^#define MASK_VFREDMAX_VS /;"	d
MASK_VFREDMIN_VS	riscv/encoding.h	/^#define MASK_VFREDMIN_VS /;"	d
MASK_VFREDOSUM_VS	riscv/encoding.h	/^#define MASK_VFREDOSUM_VS /;"	d
MASK_VFREDSUM_VS	riscv/encoding.h	/^#define MASK_VFREDSUM_VS /;"	d
MASK_VFRSQRTE7_V	riscv/encoding.h	/^#define MASK_VFRSQRTE7_V /;"	d
MASK_VFRSUB_VF	riscv/encoding.h	/^#define MASK_VFRSUB_VF /;"	d
MASK_VFSGNJN_VF	riscv/encoding.h	/^#define MASK_VFSGNJN_VF /;"	d
MASK_VFSGNJN_VV	riscv/encoding.h	/^#define MASK_VFSGNJN_VV /;"	d
MASK_VFSGNJX_VF	riscv/encoding.h	/^#define MASK_VFSGNJX_VF /;"	d
MASK_VFSGNJX_VV	riscv/encoding.h	/^#define MASK_VFSGNJX_VV /;"	d
MASK_VFSGNJ_VF	riscv/encoding.h	/^#define MASK_VFSGNJ_VF /;"	d
MASK_VFSGNJ_VV	riscv/encoding.h	/^#define MASK_VFSGNJ_VV /;"	d
MASK_VFSLIDE1DOWN_VF	riscv/encoding.h	/^#define MASK_VFSLIDE1DOWN_VF /;"	d
MASK_VFSLIDE1UP_VF	riscv/encoding.h	/^#define MASK_VFSLIDE1UP_VF /;"	d
MASK_VFSQRT_V	riscv/encoding.h	/^#define MASK_VFSQRT_V /;"	d
MASK_VFSUB_VF	riscv/encoding.h	/^#define MASK_VFSUB_VF /;"	d
MASK_VFSUB_VV	riscv/encoding.h	/^#define MASK_VFSUB_VV /;"	d
MASK_VFWADD_VF	riscv/encoding.h	/^#define MASK_VFWADD_VF /;"	d
MASK_VFWADD_VV	riscv/encoding.h	/^#define MASK_VFWADD_VV /;"	d
MASK_VFWADD_WF	riscv/encoding.h	/^#define MASK_VFWADD_WF /;"	d
MASK_VFWADD_WV	riscv/encoding.h	/^#define MASK_VFWADD_WV /;"	d
MASK_VFWCVT_F_F_V	riscv/encoding.h	/^#define MASK_VFWCVT_F_F_V /;"	d
MASK_VFWCVT_F_XU_V	riscv/encoding.h	/^#define MASK_VFWCVT_F_XU_V /;"	d
MASK_VFWCVT_F_X_V	riscv/encoding.h	/^#define MASK_VFWCVT_F_X_V /;"	d
MASK_VFWCVT_RTZ_XU_F_V	riscv/encoding.h	/^#define MASK_VFWCVT_RTZ_XU_F_V /;"	d
MASK_VFWCVT_RTZ_X_F_V	riscv/encoding.h	/^#define MASK_VFWCVT_RTZ_X_F_V /;"	d
MASK_VFWCVT_XU_F_V	riscv/encoding.h	/^#define MASK_VFWCVT_XU_F_V /;"	d
MASK_VFWCVT_X_F_V	riscv/encoding.h	/^#define MASK_VFWCVT_X_F_V /;"	d
MASK_VFWMACC_VF	riscv/encoding.h	/^#define MASK_VFWMACC_VF /;"	d
MASK_VFWMACC_VV	riscv/encoding.h	/^#define MASK_VFWMACC_VV /;"	d
MASK_VFWMSAC_VF	riscv/encoding.h	/^#define MASK_VFWMSAC_VF /;"	d
MASK_VFWMSAC_VV	riscv/encoding.h	/^#define MASK_VFWMSAC_VV /;"	d
MASK_VFWMUL_VF	riscv/encoding.h	/^#define MASK_VFWMUL_VF /;"	d
MASK_VFWMUL_VV	riscv/encoding.h	/^#define MASK_VFWMUL_VV /;"	d
MASK_VFWNMACC_VF	riscv/encoding.h	/^#define MASK_VFWNMACC_VF /;"	d
MASK_VFWNMACC_VV	riscv/encoding.h	/^#define MASK_VFWNMACC_VV /;"	d
MASK_VFWNMSAC_VF	riscv/encoding.h	/^#define MASK_VFWNMSAC_VF /;"	d
MASK_VFWNMSAC_VV	riscv/encoding.h	/^#define MASK_VFWNMSAC_VV /;"	d
MASK_VFWREDOSUM_VS	riscv/encoding.h	/^#define MASK_VFWREDOSUM_VS /;"	d
MASK_VFWREDSUM_VS	riscv/encoding.h	/^#define MASK_VFWREDSUM_VS /;"	d
MASK_VFWSUB_VF	riscv/encoding.h	/^#define MASK_VFWSUB_VF /;"	d
MASK_VFWSUB_VV	riscv/encoding.h	/^#define MASK_VFWSUB_VV /;"	d
MASK_VFWSUB_WF	riscv/encoding.h	/^#define MASK_VFWSUB_WF /;"	d
MASK_VFWSUB_WV	riscv/encoding.h	/^#define MASK_VFWSUB_WV /;"	d
MASK_VID_V	riscv/encoding.h	/^#define MASK_VID_V /;"	d
MASK_VIOTA_M	riscv/encoding.h	/^#define MASK_VIOTA_M /;"	d
MASK_VL1RE16_V	riscv/encoding.h	/^#define MASK_VL1RE16_V /;"	d
MASK_VL1RE32_V	riscv/encoding.h	/^#define MASK_VL1RE32_V /;"	d
MASK_VL1RE64_V	riscv/encoding.h	/^#define MASK_VL1RE64_V /;"	d
MASK_VL1RE8_V	riscv/encoding.h	/^#define MASK_VL1RE8_V /;"	d
MASK_VL1R_V	riscv/encoding.h	/^#define MASK_VL1R_V /;"	d
MASK_VL2RE16_V	riscv/encoding.h	/^#define MASK_VL2RE16_V /;"	d
MASK_VL2RE32_V	riscv/encoding.h	/^#define MASK_VL2RE32_V /;"	d
MASK_VL2RE64_V	riscv/encoding.h	/^#define MASK_VL2RE64_V /;"	d
MASK_VL2RE8_V	riscv/encoding.h	/^#define MASK_VL2RE8_V /;"	d
MASK_VL2R_V	riscv/encoding.h	/^#define MASK_VL2R_V /;"	d
MASK_VL4RE16_V	riscv/encoding.h	/^#define MASK_VL4RE16_V /;"	d
MASK_VL4RE32_V	riscv/encoding.h	/^#define MASK_VL4RE32_V /;"	d
MASK_VL4RE64_V	riscv/encoding.h	/^#define MASK_VL4RE64_V /;"	d
MASK_VL4RE8_V	riscv/encoding.h	/^#define MASK_VL4RE8_V /;"	d
MASK_VL4R_V	riscv/encoding.h	/^#define MASK_VL4R_V /;"	d
MASK_VL8RE16_V	riscv/encoding.h	/^#define MASK_VL8RE16_V /;"	d
MASK_VL8RE32_V	riscv/encoding.h	/^#define MASK_VL8RE32_V /;"	d
MASK_VL8RE64_V	riscv/encoding.h	/^#define MASK_VL8RE64_V /;"	d
MASK_VL8RE8_V	riscv/encoding.h	/^#define MASK_VL8RE8_V /;"	d
MASK_VL8R_V	riscv/encoding.h	/^#define MASK_VL8R_V /;"	d
MASK_VLE1024FF_V	riscv/encoding.h	/^#define MASK_VLE1024FF_V /;"	d
MASK_VLE1024_V	riscv/encoding.h	/^#define MASK_VLE1024_V /;"	d
MASK_VLE128FF_V	riscv/encoding.h	/^#define MASK_VLE128FF_V /;"	d
MASK_VLE128_V	riscv/encoding.h	/^#define MASK_VLE128_V /;"	d
MASK_VLE16FF_V	riscv/encoding.h	/^#define MASK_VLE16FF_V /;"	d
MASK_VLE16_V	riscv/encoding.h	/^#define MASK_VLE16_V /;"	d
MASK_VLE256FF_V	riscv/encoding.h	/^#define MASK_VLE256FF_V /;"	d
MASK_VLE256_V	riscv/encoding.h	/^#define MASK_VLE256_V /;"	d
MASK_VLE32FF_V	riscv/encoding.h	/^#define MASK_VLE32FF_V /;"	d
MASK_VLE32_V	riscv/encoding.h	/^#define MASK_VLE32_V /;"	d
MASK_VLE512FF_V	riscv/encoding.h	/^#define MASK_VLE512FF_V /;"	d
MASK_VLE512_V	riscv/encoding.h	/^#define MASK_VLE512_V /;"	d
MASK_VLE64FF_V	riscv/encoding.h	/^#define MASK_VLE64FF_V /;"	d
MASK_VLE64_V	riscv/encoding.h	/^#define MASK_VLE64_V /;"	d
MASK_VLE8FF_V	riscv/encoding.h	/^#define MASK_VLE8FF_V /;"	d
MASK_VLE8_V	riscv/encoding.h	/^#define MASK_VLE8_V /;"	d
MASK_VLSE1024_V	riscv/encoding.h	/^#define MASK_VLSE1024_V /;"	d
MASK_VLSE128_V	riscv/encoding.h	/^#define MASK_VLSE128_V /;"	d
MASK_VLSE16_V	riscv/encoding.h	/^#define MASK_VLSE16_V /;"	d
MASK_VLSE256_V	riscv/encoding.h	/^#define MASK_VLSE256_V /;"	d
MASK_VLSE32_V	riscv/encoding.h	/^#define MASK_VLSE32_V /;"	d
MASK_VLSE512_V	riscv/encoding.h	/^#define MASK_VLSE512_V /;"	d
MASK_VLSE64_V	riscv/encoding.h	/^#define MASK_VLSE64_V /;"	d
MASK_VLSE8_V	riscv/encoding.h	/^#define MASK_VLSE8_V /;"	d
MASK_VLXEI1024_V	riscv/encoding.h	/^#define MASK_VLXEI1024_V /;"	d
MASK_VLXEI128_V	riscv/encoding.h	/^#define MASK_VLXEI128_V /;"	d
MASK_VLXEI16_V	riscv/encoding.h	/^#define MASK_VLXEI16_V /;"	d
MASK_VLXEI256_V	riscv/encoding.h	/^#define MASK_VLXEI256_V /;"	d
MASK_VLXEI32_V	riscv/encoding.h	/^#define MASK_VLXEI32_V /;"	d
MASK_VLXEI512_V	riscv/encoding.h	/^#define MASK_VLXEI512_V /;"	d
MASK_VLXEI64_V	riscv/encoding.h	/^#define MASK_VLXEI64_V /;"	d
MASK_VLXEI8_V	riscv/encoding.h	/^#define MASK_VLXEI8_V /;"	d
MASK_VMACC_VV	riscv/encoding.h	/^#define MASK_VMACC_VV /;"	d
MASK_VMACC_VX	riscv/encoding.h	/^#define MASK_VMACC_VX /;"	d
MASK_VMADC_VIM	riscv/encoding.h	/^#define MASK_VMADC_VIM /;"	d
MASK_VMADC_VVM	riscv/encoding.h	/^#define MASK_VMADC_VVM /;"	d
MASK_VMADC_VXM	riscv/encoding.h	/^#define MASK_VMADC_VXM /;"	d
MASK_VMADD_VV	riscv/encoding.h	/^#define MASK_VMADD_VV /;"	d
MASK_VMADD_VX	riscv/encoding.h	/^#define MASK_VMADD_VX /;"	d
MASK_VMANDNOT_MM	riscv/encoding.h	/^#define MASK_VMANDNOT_MM /;"	d
MASK_VMAND_MM	riscv/encoding.h	/^#define MASK_VMAND_MM /;"	d
MASK_VMAXU_VV	riscv/encoding.h	/^#define MASK_VMAXU_VV /;"	d
MASK_VMAXU_VX	riscv/encoding.h	/^#define MASK_VMAXU_VX /;"	d
MASK_VMAX_VV	riscv/encoding.h	/^#define MASK_VMAX_VV /;"	d
MASK_VMAX_VX	riscv/encoding.h	/^#define MASK_VMAX_VX /;"	d
MASK_VMERGE_VIM	riscv/encoding.h	/^#define MASK_VMERGE_VIM /;"	d
MASK_VMERGE_VVM	riscv/encoding.h	/^#define MASK_VMERGE_VVM /;"	d
MASK_VMERGE_VXM	riscv/encoding.h	/^#define MASK_VMERGE_VXM /;"	d
MASK_VMFEQ_VF	riscv/encoding.h	/^#define MASK_VMFEQ_VF /;"	d
MASK_VMFEQ_VV	riscv/encoding.h	/^#define MASK_VMFEQ_VV /;"	d
MASK_VMFGE_VF	riscv/encoding.h	/^#define MASK_VMFGE_VF /;"	d
MASK_VMFGT_VF	riscv/encoding.h	/^#define MASK_VMFGT_VF /;"	d
MASK_VMFLE_VF	riscv/encoding.h	/^#define MASK_VMFLE_VF /;"	d
MASK_VMFLE_VV	riscv/encoding.h	/^#define MASK_VMFLE_VV /;"	d
MASK_VMFLT_VF	riscv/encoding.h	/^#define MASK_VMFLT_VF /;"	d
MASK_VMFLT_VV	riscv/encoding.h	/^#define MASK_VMFLT_VV /;"	d
MASK_VMFNE_VF	riscv/encoding.h	/^#define MASK_VMFNE_VF /;"	d
MASK_VMFNE_VV	riscv/encoding.h	/^#define MASK_VMFNE_VV /;"	d
MASK_VMINU_VV	riscv/encoding.h	/^#define MASK_VMINU_VV /;"	d
MASK_VMINU_VX	riscv/encoding.h	/^#define MASK_VMINU_VX /;"	d
MASK_VMIN_VV	riscv/encoding.h	/^#define MASK_VMIN_VV /;"	d
MASK_VMIN_VX	riscv/encoding.h	/^#define MASK_VMIN_VX /;"	d
MASK_VMNAND_MM	riscv/encoding.h	/^#define MASK_VMNAND_MM /;"	d
MASK_VMNOR_MM	riscv/encoding.h	/^#define MASK_VMNOR_MM /;"	d
MASK_VMORNOT_MM	riscv/encoding.h	/^#define MASK_VMORNOT_MM /;"	d
MASK_VMOR_MM	riscv/encoding.h	/^#define MASK_VMOR_MM /;"	d
MASK_VMSBC_VVM	riscv/encoding.h	/^#define MASK_VMSBC_VVM /;"	d
MASK_VMSBC_VXM	riscv/encoding.h	/^#define MASK_VMSBC_VXM /;"	d
MASK_VMSBF_M	riscv/encoding.h	/^#define MASK_VMSBF_M /;"	d
MASK_VMSEQ_VI	riscv/encoding.h	/^#define MASK_VMSEQ_VI /;"	d
MASK_VMSEQ_VV	riscv/encoding.h	/^#define MASK_VMSEQ_VV /;"	d
MASK_VMSEQ_VX	riscv/encoding.h	/^#define MASK_VMSEQ_VX /;"	d
MASK_VMSGTU_VI	riscv/encoding.h	/^#define MASK_VMSGTU_VI /;"	d
MASK_VMSGTU_VX	riscv/encoding.h	/^#define MASK_VMSGTU_VX /;"	d
MASK_VMSGT_VI	riscv/encoding.h	/^#define MASK_VMSGT_VI /;"	d
MASK_VMSGT_VX	riscv/encoding.h	/^#define MASK_VMSGT_VX /;"	d
MASK_VMSIF_M	riscv/encoding.h	/^#define MASK_VMSIF_M /;"	d
MASK_VMSLEU_VI	riscv/encoding.h	/^#define MASK_VMSLEU_VI /;"	d
MASK_VMSLEU_VV	riscv/encoding.h	/^#define MASK_VMSLEU_VV /;"	d
MASK_VMSLEU_VX	riscv/encoding.h	/^#define MASK_VMSLEU_VX /;"	d
MASK_VMSLE_VI	riscv/encoding.h	/^#define MASK_VMSLE_VI /;"	d
MASK_VMSLE_VV	riscv/encoding.h	/^#define MASK_VMSLE_VV /;"	d
MASK_VMSLE_VX	riscv/encoding.h	/^#define MASK_VMSLE_VX /;"	d
MASK_VMSLTU_VV	riscv/encoding.h	/^#define MASK_VMSLTU_VV /;"	d
MASK_VMSLTU_VX	riscv/encoding.h	/^#define MASK_VMSLTU_VX /;"	d
MASK_VMSLT_VV	riscv/encoding.h	/^#define MASK_VMSLT_VV /;"	d
MASK_VMSLT_VX	riscv/encoding.h	/^#define MASK_VMSLT_VX /;"	d
MASK_VMSNE_VI	riscv/encoding.h	/^#define MASK_VMSNE_VI /;"	d
MASK_VMSNE_VV	riscv/encoding.h	/^#define MASK_VMSNE_VV /;"	d
MASK_VMSNE_VX	riscv/encoding.h	/^#define MASK_VMSNE_VX /;"	d
MASK_VMSOF_M	riscv/encoding.h	/^#define MASK_VMSOF_M /;"	d
MASK_VMULHSU_VV	riscv/encoding.h	/^#define MASK_VMULHSU_VV /;"	d
MASK_VMULHSU_VX	riscv/encoding.h	/^#define MASK_VMULHSU_VX /;"	d
MASK_VMULHU_VV	riscv/encoding.h	/^#define MASK_VMULHU_VV /;"	d
MASK_VMULHU_VX	riscv/encoding.h	/^#define MASK_VMULHU_VX /;"	d
MASK_VMULH_VV	riscv/encoding.h	/^#define MASK_VMULH_VV /;"	d
MASK_VMULH_VX	riscv/encoding.h	/^#define MASK_VMULH_VX /;"	d
MASK_VMUL_VV	riscv/encoding.h	/^#define MASK_VMUL_VV /;"	d
MASK_VMUL_VX	riscv/encoding.h	/^#define MASK_VMUL_VX /;"	d
MASK_VMV1R_V	riscv/encoding.h	/^#define MASK_VMV1R_V /;"	d
MASK_VMV2R_V	riscv/encoding.h	/^#define MASK_VMV2R_V /;"	d
MASK_VMV4R_V	riscv/encoding.h	/^#define MASK_VMV4R_V /;"	d
MASK_VMV8R_V	riscv/encoding.h	/^#define MASK_VMV8R_V /;"	d
MASK_VMVNFR_V	riscv/encoding.h	/^#define MASK_VMVNFR_V /;"	d
MASK_VMV_S_X	riscv/encoding.h	/^#define MASK_VMV_S_X /;"	d
MASK_VMV_V_I	riscv/encoding.h	/^#define MASK_VMV_V_I /;"	d
MASK_VMV_V_V	riscv/encoding.h	/^#define MASK_VMV_V_V /;"	d
MASK_VMV_V_X	riscv/encoding.h	/^#define MASK_VMV_V_X /;"	d
MASK_VMV_X_S	riscv/encoding.h	/^#define MASK_VMV_X_S /;"	d
MASK_VMXNOR_MM	riscv/encoding.h	/^#define MASK_VMXNOR_MM /;"	d
MASK_VMXOR_MM	riscv/encoding.h	/^#define MASK_VMXOR_MM /;"	d
MASK_VNCLIPU_WI	riscv/encoding.h	/^#define MASK_VNCLIPU_WI /;"	d
MASK_VNCLIPU_WV	riscv/encoding.h	/^#define MASK_VNCLIPU_WV /;"	d
MASK_VNCLIPU_WX	riscv/encoding.h	/^#define MASK_VNCLIPU_WX /;"	d
MASK_VNCLIP_WI	riscv/encoding.h	/^#define MASK_VNCLIP_WI /;"	d
MASK_VNCLIP_WV	riscv/encoding.h	/^#define MASK_VNCLIP_WV /;"	d
MASK_VNCLIP_WX	riscv/encoding.h	/^#define MASK_VNCLIP_WX /;"	d
MASK_VNMSAC_VV	riscv/encoding.h	/^#define MASK_VNMSAC_VV /;"	d
MASK_VNMSAC_VX	riscv/encoding.h	/^#define MASK_VNMSAC_VX /;"	d
MASK_VNMSUB_VV	riscv/encoding.h	/^#define MASK_VNMSUB_VV /;"	d
MASK_VNMSUB_VX	riscv/encoding.h	/^#define MASK_VNMSUB_VX /;"	d
MASK_VNSRA_WI	riscv/encoding.h	/^#define MASK_VNSRA_WI /;"	d
MASK_VNSRA_WV	riscv/encoding.h	/^#define MASK_VNSRA_WV /;"	d
MASK_VNSRA_WX	riscv/encoding.h	/^#define MASK_VNSRA_WX /;"	d
MASK_VNSRL_WI	riscv/encoding.h	/^#define MASK_VNSRL_WI /;"	d
MASK_VNSRL_WV	riscv/encoding.h	/^#define MASK_VNSRL_WV /;"	d
MASK_VNSRL_WX	riscv/encoding.h	/^#define MASK_VNSRL_WX /;"	d
MASK_VOR_VI	riscv/encoding.h	/^#define MASK_VOR_VI /;"	d
MASK_VOR_VV	riscv/encoding.h	/^#define MASK_VOR_VV /;"	d
MASK_VOR_VX	riscv/encoding.h	/^#define MASK_VOR_VX /;"	d
MASK_VPOPC_M	riscv/encoding.h	/^#define MASK_VPOPC_M /;"	d
MASK_VQMACCSU_VV	riscv/encoding.h	/^#define MASK_VQMACCSU_VV /;"	d
MASK_VQMACCU_VV	riscv/encoding.h	/^#define MASK_VQMACCU_VV /;"	d
MASK_VQMACC_VV	riscv/encoding.h	/^#define MASK_VQMACC_VV /;"	d
MASK_VREDAND_VS	riscv/encoding.h	/^#define MASK_VREDAND_VS /;"	d
MASK_VREDMAXU_VS	riscv/encoding.h	/^#define MASK_VREDMAXU_VS /;"	d
MASK_VREDMAX_VS	riscv/encoding.h	/^#define MASK_VREDMAX_VS /;"	d
MASK_VREDMINU_VS	riscv/encoding.h	/^#define MASK_VREDMINU_VS /;"	d
MASK_VREDMIN_VS	riscv/encoding.h	/^#define MASK_VREDMIN_VS /;"	d
MASK_VREDOR_VS	riscv/encoding.h	/^#define MASK_VREDOR_VS /;"	d
MASK_VREDSUM_VS	riscv/encoding.h	/^#define MASK_VREDSUM_VS /;"	d
MASK_VREDXOR_VS	riscv/encoding.h	/^#define MASK_VREDXOR_VS /;"	d
MASK_VREMU_VV	riscv/encoding.h	/^#define MASK_VREMU_VV /;"	d
MASK_VREMU_VX	riscv/encoding.h	/^#define MASK_VREMU_VX /;"	d
MASK_VREM_VV	riscv/encoding.h	/^#define MASK_VREM_VV /;"	d
MASK_VREM_VX	riscv/encoding.h	/^#define MASK_VREM_VX /;"	d
MASK_VRGATHEREI16_VV	riscv/encoding.h	/^#define MASK_VRGATHEREI16_VV /;"	d
MASK_VRGATHER_VI	riscv/encoding.h	/^#define MASK_VRGATHER_VI /;"	d
MASK_VRGATHER_VV	riscv/encoding.h	/^#define MASK_VRGATHER_VV /;"	d
MASK_VRGATHER_VX	riscv/encoding.h	/^#define MASK_VRGATHER_VX /;"	d
MASK_VRSUB_VI	riscv/encoding.h	/^#define MASK_VRSUB_VI /;"	d
MASK_VRSUB_VX	riscv/encoding.h	/^#define MASK_VRSUB_VX /;"	d
MASK_VS1R_V	riscv/encoding.h	/^#define MASK_VS1R_V /;"	d
MASK_VS2R_V	riscv/encoding.h	/^#define MASK_VS2R_V /;"	d
MASK_VS4R_V	riscv/encoding.h	/^#define MASK_VS4R_V /;"	d
MASK_VS8R_V	riscv/encoding.h	/^#define MASK_VS8R_V /;"	d
MASK_VSADDU_VI	riscv/encoding.h	/^#define MASK_VSADDU_VI /;"	d
MASK_VSADDU_VV	riscv/encoding.h	/^#define MASK_VSADDU_VV /;"	d
MASK_VSADDU_VX	riscv/encoding.h	/^#define MASK_VSADDU_VX /;"	d
MASK_VSADD_VI	riscv/encoding.h	/^#define MASK_VSADD_VI /;"	d
MASK_VSADD_VV	riscv/encoding.h	/^#define MASK_VSADD_VV /;"	d
MASK_VSADD_VX	riscv/encoding.h	/^#define MASK_VSADD_VX /;"	d
MASK_VSBC_VVM	riscv/encoding.h	/^#define MASK_VSBC_VVM /;"	d
MASK_VSBC_VXM	riscv/encoding.h	/^#define MASK_VSBC_VXM /;"	d
MASK_VSE1024_V	riscv/encoding.h	/^#define MASK_VSE1024_V /;"	d
MASK_VSE128_V	riscv/encoding.h	/^#define MASK_VSE128_V /;"	d
MASK_VSE16_V	riscv/encoding.h	/^#define MASK_VSE16_V /;"	d
MASK_VSE256_V	riscv/encoding.h	/^#define MASK_VSE256_V /;"	d
MASK_VSE32_V	riscv/encoding.h	/^#define MASK_VSE32_V /;"	d
MASK_VSE512_V	riscv/encoding.h	/^#define MASK_VSE512_V /;"	d
MASK_VSE64_V	riscv/encoding.h	/^#define MASK_VSE64_V /;"	d
MASK_VSE8_V	riscv/encoding.h	/^#define MASK_VSE8_V /;"	d
MASK_VSETVL	riscv/encoding.h	/^#define MASK_VSETVL /;"	d
MASK_VSETVLI	riscv/encoding.h	/^#define MASK_VSETVLI /;"	d
MASK_VSEXT_VF2	riscv/encoding.h	/^#define MASK_VSEXT_VF2 /;"	d
MASK_VSEXT_VF4	riscv/encoding.h	/^#define MASK_VSEXT_VF4 /;"	d
MASK_VSEXT_VF8	riscv/encoding.h	/^#define MASK_VSEXT_VF8 /;"	d
MASK_VSLIDE1DOWN_VX	riscv/encoding.h	/^#define MASK_VSLIDE1DOWN_VX /;"	d
MASK_VSLIDE1UP_VX	riscv/encoding.h	/^#define MASK_VSLIDE1UP_VX /;"	d
MASK_VSLIDEDOWN_VI	riscv/encoding.h	/^#define MASK_VSLIDEDOWN_VI /;"	d
MASK_VSLIDEDOWN_VX	riscv/encoding.h	/^#define MASK_VSLIDEDOWN_VX /;"	d
MASK_VSLIDEUP_VI	riscv/encoding.h	/^#define MASK_VSLIDEUP_VI /;"	d
MASK_VSLIDEUP_VX	riscv/encoding.h	/^#define MASK_VSLIDEUP_VX /;"	d
MASK_VSLL_VI	riscv/encoding.h	/^#define MASK_VSLL_VI /;"	d
MASK_VSLL_VV	riscv/encoding.h	/^#define MASK_VSLL_VV /;"	d
MASK_VSLL_VX	riscv/encoding.h	/^#define MASK_VSLL_VX /;"	d
MASK_VSMUL_VV	riscv/encoding.h	/^#define MASK_VSMUL_VV /;"	d
MASK_VSMUL_VX	riscv/encoding.h	/^#define MASK_VSMUL_VX /;"	d
MASK_VSRA_VI	riscv/encoding.h	/^#define MASK_VSRA_VI /;"	d
MASK_VSRA_VV	riscv/encoding.h	/^#define MASK_VSRA_VV /;"	d
MASK_VSRA_VX	riscv/encoding.h	/^#define MASK_VSRA_VX /;"	d
MASK_VSRL_VI	riscv/encoding.h	/^#define MASK_VSRL_VI /;"	d
MASK_VSRL_VV	riscv/encoding.h	/^#define MASK_VSRL_VV /;"	d
MASK_VSRL_VX	riscv/encoding.h	/^#define MASK_VSRL_VX /;"	d
MASK_VSSE1024_V	riscv/encoding.h	/^#define MASK_VSSE1024_V /;"	d
MASK_VSSE128_V	riscv/encoding.h	/^#define MASK_VSSE128_V /;"	d
MASK_VSSE16_V	riscv/encoding.h	/^#define MASK_VSSE16_V /;"	d
MASK_VSSE256_V	riscv/encoding.h	/^#define MASK_VSSE256_V /;"	d
MASK_VSSE32_V	riscv/encoding.h	/^#define MASK_VSSE32_V /;"	d
MASK_VSSE512_V	riscv/encoding.h	/^#define MASK_VSSE512_V /;"	d
MASK_VSSE64_V	riscv/encoding.h	/^#define MASK_VSSE64_V /;"	d
MASK_VSSE8_V	riscv/encoding.h	/^#define MASK_VSSE8_V /;"	d
MASK_VSSRA_VI	riscv/encoding.h	/^#define MASK_VSSRA_VI /;"	d
MASK_VSSRA_VV	riscv/encoding.h	/^#define MASK_VSSRA_VV /;"	d
MASK_VSSRA_VX	riscv/encoding.h	/^#define MASK_VSSRA_VX /;"	d
MASK_VSSRL_VI	riscv/encoding.h	/^#define MASK_VSSRL_VI /;"	d
MASK_VSSRL_VV	riscv/encoding.h	/^#define MASK_VSSRL_VV /;"	d
MASK_VSSRL_VX	riscv/encoding.h	/^#define MASK_VSSRL_VX /;"	d
MASK_VSSUBU_VV	riscv/encoding.h	/^#define MASK_VSSUBU_VV /;"	d
MASK_VSSUBU_VX	riscv/encoding.h	/^#define MASK_VSSUBU_VX /;"	d
MASK_VSSUB_VV	riscv/encoding.h	/^#define MASK_VSSUB_VV /;"	d
MASK_VSSUB_VX	riscv/encoding.h	/^#define MASK_VSSUB_VX /;"	d
MASK_VSUB_VV	riscv/encoding.h	/^#define MASK_VSUB_VV /;"	d
MASK_VSUB_VX	riscv/encoding.h	/^#define MASK_VSUB_VX /;"	d
MASK_VSUXEI1024_V	riscv/encoding.h	/^#define MASK_VSUXEI1024_V /;"	d
MASK_VSUXEI128_V	riscv/encoding.h	/^#define MASK_VSUXEI128_V /;"	d
MASK_VSUXEI16_V	riscv/encoding.h	/^#define MASK_VSUXEI16_V /;"	d
MASK_VSUXEI256_V	riscv/encoding.h	/^#define MASK_VSUXEI256_V /;"	d
MASK_VSUXEI32_V	riscv/encoding.h	/^#define MASK_VSUXEI32_V /;"	d
MASK_VSUXEI512_V	riscv/encoding.h	/^#define MASK_VSUXEI512_V /;"	d
MASK_VSUXEI64_V	riscv/encoding.h	/^#define MASK_VSUXEI64_V /;"	d
MASK_VSUXEI8_V	riscv/encoding.h	/^#define MASK_VSUXEI8_V /;"	d
MASK_VSXEI1024_V	riscv/encoding.h	/^#define MASK_VSXEI1024_V /;"	d
MASK_VSXEI128_V	riscv/encoding.h	/^#define MASK_VSXEI128_V /;"	d
MASK_VSXEI16_V	riscv/encoding.h	/^#define MASK_VSXEI16_V /;"	d
MASK_VSXEI256_V	riscv/encoding.h	/^#define MASK_VSXEI256_V /;"	d
MASK_VSXEI32_V	riscv/encoding.h	/^#define MASK_VSXEI32_V /;"	d
MASK_VSXEI512_V	riscv/encoding.h	/^#define MASK_VSXEI512_V /;"	d
MASK_VSXEI64_V	riscv/encoding.h	/^#define MASK_VSXEI64_V /;"	d
MASK_VSXEI8_V	riscv/encoding.h	/^#define MASK_VSXEI8_V /;"	d
MASK_VWADDU_VV	riscv/encoding.h	/^#define MASK_VWADDU_VV /;"	d
MASK_VWADDU_VX	riscv/encoding.h	/^#define MASK_VWADDU_VX /;"	d
MASK_VWADDU_WV	riscv/encoding.h	/^#define MASK_VWADDU_WV /;"	d
MASK_VWADDU_WX	riscv/encoding.h	/^#define MASK_VWADDU_WX /;"	d
MASK_VWADD_VV	riscv/encoding.h	/^#define MASK_VWADD_VV /;"	d
MASK_VWADD_VX	riscv/encoding.h	/^#define MASK_VWADD_VX /;"	d
MASK_VWADD_WV	riscv/encoding.h	/^#define MASK_VWADD_WV /;"	d
MASK_VWADD_WX	riscv/encoding.h	/^#define MASK_VWADD_WX /;"	d
MASK_VWMACCSU_VV	riscv/encoding.h	/^#define MASK_VWMACCSU_VV /;"	d
MASK_VWMACCSU_VX	riscv/encoding.h	/^#define MASK_VWMACCSU_VX /;"	d
MASK_VWMACCUS_VX	riscv/encoding.h	/^#define MASK_VWMACCUS_VX /;"	d
MASK_VWMACCU_VV	riscv/encoding.h	/^#define MASK_VWMACCU_VV /;"	d
MASK_VWMACCU_VX	riscv/encoding.h	/^#define MASK_VWMACCU_VX /;"	d
MASK_VWMACC_VV	riscv/encoding.h	/^#define MASK_VWMACC_VV /;"	d
MASK_VWMACC_VX	riscv/encoding.h	/^#define MASK_VWMACC_VX /;"	d
MASK_VWMULSU_VV	riscv/encoding.h	/^#define MASK_VWMULSU_VV /;"	d
MASK_VWMULSU_VX	riscv/encoding.h	/^#define MASK_VWMULSU_VX /;"	d
MASK_VWMULU_VV	riscv/encoding.h	/^#define MASK_VWMULU_VV /;"	d
MASK_VWMULU_VX	riscv/encoding.h	/^#define MASK_VWMULU_VX /;"	d
MASK_VWMUL_VV	riscv/encoding.h	/^#define MASK_VWMUL_VV /;"	d
MASK_VWMUL_VX	riscv/encoding.h	/^#define MASK_VWMUL_VX /;"	d
MASK_VWREDSUMU_VS	riscv/encoding.h	/^#define MASK_VWREDSUMU_VS /;"	d
MASK_VWREDSUM_VS	riscv/encoding.h	/^#define MASK_VWREDSUM_VS /;"	d
MASK_VWSUBU_VV	riscv/encoding.h	/^#define MASK_VWSUBU_VV /;"	d
MASK_VWSUBU_VX	riscv/encoding.h	/^#define MASK_VWSUBU_VX /;"	d
MASK_VWSUBU_WV	riscv/encoding.h	/^#define MASK_VWSUBU_WV /;"	d
MASK_VWSUBU_WX	riscv/encoding.h	/^#define MASK_VWSUBU_WX /;"	d
MASK_VWSUB_VV	riscv/encoding.h	/^#define MASK_VWSUB_VV /;"	d
MASK_VWSUB_VX	riscv/encoding.h	/^#define MASK_VWSUB_VX /;"	d
MASK_VWSUB_WV	riscv/encoding.h	/^#define MASK_VWSUB_WV /;"	d
MASK_VWSUB_WX	riscv/encoding.h	/^#define MASK_VWSUB_WX /;"	d
MASK_VXOR_VI	riscv/encoding.h	/^#define MASK_VXOR_VI /;"	d
MASK_VXOR_VV	riscv/encoding.h	/^#define MASK_VXOR_VV /;"	d
MASK_VXOR_VX	riscv/encoding.h	/^#define MASK_VXOR_VX /;"	d
MASK_VZEXT_VF2	riscv/encoding.h	/^#define MASK_VZEXT_VF2 /;"	d
MASK_VZEXT_VF4	riscv/encoding.h	/^#define MASK_VZEXT_VF4 /;"	d
MASK_VZEXT_VF8	riscv/encoding.h	/^#define MASK_VZEXT_VF8 /;"	d
MASK_WFI	riscv/encoding.h	/^#define MASK_WFI /;"	d
MASK_XNOR	riscv/encoding.h	/^#define MASK_XNOR /;"	d
MASK_XOR	riscv/encoding.h	/^#define MASK_XOR /;"	d
MASK_XORI	riscv/encoding.h	/^#define MASK_XORI /;"	d
MATCH_ADD	riscv/encoding.h	/^#define MATCH_ADD /;"	d
MATCH_ADDI	riscv/encoding.h	/^#define MATCH_ADDI /;"	d
MATCH_ADDIW	riscv/encoding.h	/^#define MATCH_ADDIW /;"	d
MATCH_ADDIWU	riscv/encoding.h	/^#define MATCH_ADDIWU /;"	d
MATCH_ADDU_W	riscv/encoding.h	/^#define MATCH_ADDU_W /;"	d
MATCH_ADDW	riscv/encoding.h	/^#define MATCH_ADDW /;"	d
MATCH_ADDWU	riscv/encoding.h	/^#define MATCH_ADDWU /;"	d
MATCH_AMOADD_D	riscv/encoding.h	/^#define MATCH_AMOADD_D /;"	d
MATCH_AMOADD_W	riscv/encoding.h	/^#define MATCH_AMOADD_W /;"	d
MATCH_AMOAND_D	riscv/encoding.h	/^#define MATCH_AMOAND_D /;"	d
MATCH_AMOAND_W	riscv/encoding.h	/^#define MATCH_AMOAND_W /;"	d
MATCH_AMOMAXU_D	riscv/encoding.h	/^#define MATCH_AMOMAXU_D /;"	d
MATCH_AMOMAXU_W	riscv/encoding.h	/^#define MATCH_AMOMAXU_W /;"	d
MATCH_AMOMAX_D	riscv/encoding.h	/^#define MATCH_AMOMAX_D /;"	d
MATCH_AMOMAX_W	riscv/encoding.h	/^#define MATCH_AMOMAX_W /;"	d
MATCH_AMOMINU_D	riscv/encoding.h	/^#define MATCH_AMOMINU_D /;"	d
MATCH_AMOMINU_W	riscv/encoding.h	/^#define MATCH_AMOMINU_W /;"	d
MATCH_AMOMIN_D	riscv/encoding.h	/^#define MATCH_AMOMIN_D /;"	d
MATCH_AMOMIN_W	riscv/encoding.h	/^#define MATCH_AMOMIN_W /;"	d
MATCH_AMOOR_D	riscv/encoding.h	/^#define MATCH_AMOOR_D /;"	d
MATCH_AMOOR_W	riscv/encoding.h	/^#define MATCH_AMOOR_W /;"	d
MATCH_AMOSWAP_D	riscv/encoding.h	/^#define MATCH_AMOSWAP_D /;"	d
MATCH_AMOSWAP_W	riscv/encoding.h	/^#define MATCH_AMOSWAP_W /;"	d
MATCH_AMOXOR_D	riscv/encoding.h	/^#define MATCH_AMOXOR_D /;"	d
MATCH_AMOXOR_W	riscv/encoding.h	/^#define MATCH_AMOXOR_W /;"	d
MATCH_AND	riscv/encoding.h	/^#define MATCH_AND /;"	d
MATCH_ANDI	riscv/encoding.h	/^#define MATCH_ANDI /;"	d
MATCH_ANDN	riscv/encoding.h	/^#define MATCH_ANDN /;"	d
MATCH_AUIPC	riscv/encoding.h	/^#define MATCH_AUIPC /;"	d
MATCH_BDEP	riscv/encoding.h	/^#define MATCH_BDEP /;"	d
MATCH_BDEPW	riscv/encoding.h	/^#define MATCH_BDEPW /;"	d
MATCH_BEQ	riscv/encoding.h	/^#define MATCH_BEQ /;"	d
MATCH_BEXT	riscv/encoding.h	/^#define MATCH_BEXT /;"	d
MATCH_BEXTW	riscv/encoding.h	/^#define MATCH_BEXTW /;"	d
MATCH_BFP	riscv/encoding.h	/^#define MATCH_BFP /;"	d
MATCH_BFPW	riscv/encoding.h	/^#define MATCH_BFPW /;"	d
MATCH_BGE	riscv/encoding.h	/^#define MATCH_BGE /;"	d
MATCH_BGEU	riscv/encoding.h	/^#define MATCH_BGEU /;"	d
MATCH_BLT	riscv/encoding.h	/^#define MATCH_BLT /;"	d
MATCH_BLTU	riscv/encoding.h	/^#define MATCH_BLTU /;"	d
MATCH_BMATFLIP	riscv/encoding.h	/^#define MATCH_BMATFLIP /;"	d
MATCH_BMATOR	riscv/encoding.h	/^#define MATCH_BMATOR /;"	d
MATCH_BMATXOR	riscv/encoding.h	/^#define MATCH_BMATXOR /;"	d
MATCH_BNE	riscv/encoding.h	/^#define MATCH_BNE /;"	d
MATCH_CLMUL	riscv/encoding.h	/^#define MATCH_CLMUL /;"	d
MATCH_CLMULH	riscv/encoding.h	/^#define MATCH_CLMULH /;"	d
MATCH_CLMULHW	riscv/encoding.h	/^#define MATCH_CLMULHW /;"	d
MATCH_CLMULR	riscv/encoding.h	/^#define MATCH_CLMULR /;"	d
MATCH_CLMULRW	riscv/encoding.h	/^#define MATCH_CLMULRW /;"	d
MATCH_CLMULW	riscv/encoding.h	/^#define MATCH_CLMULW /;"	d
MATCH_CLZ	riscv/encoding.h	/^#define MATCH_CLZ /;"	d
MATCH_CLZW	riscv/encoding.h	/^#define MATCH_CLZW /;"	d
MATCH_CMIX	riscv/encoding.h	/^#define MATCH_CMIX /;"	d
MATCH_CMOV	riscv/encoding.h	/^#define MATCH_CMOV /;"	d
MATCH_CRC32C_B	riscv/encoding.h	/^#define MATCH_CRC32C_B /;"	d
MATCH_CRC32C_D	riscv/encoding.h	/^#define MATCH_CRC32C_D /;"	d
MATCH_CRC32C_H	riscv/encoding.h	/^#define MATCH_CRC32C_H /;"	d
MATCH_CRC32C_W	riscv/encoding.h	/^#define MATCH_CRC32C_W /;"	d
MATCH_CRC32_B	riscv/encoding.h	/^#define MATCH_CRC32_B /;"	d
MATCH_CRC32_D	riscv/encoding.h	/^#define MATCH_CRC32_D /;"	d
MATCH_CRC32_H	riscv/encoding.h	/^#define MATCH_CRC32_H /;"	d
MATCH_CRC32_W	riscv/encoding.h	/^#define MATCH_CRC32_W /;"	d
MATCH_CSRRC	riscv/encoding.h	/^#define MATCH_CSRRC /;"	d
MATCH_CSRRCI	riscv/encoding.h	/^#define MATCH_CSRRCI /;"	d
MATCH_CSRRS	riscv/encoding.h	/^#define MATCH_CSRRS /;"	d
MATCH_CSRRSI	riscv/encoding.h	/^#define MATCH_CSRRSI /;"	d
MATCH_CSRRW	riscv/encoding.h	/^#define MATCH_CSRRW /;"	d
MATCH_CSRRWI	riscv/encoding.h	/^#define MATCH_CSRRWI /;"	d
MATCH_CTZ	riscv/encoding.h	/^#define MATCH_CTZ /;"	d
MATCH_CTZW	riscv/encoding.h	/^#define MATCH_CTZW /;"	d
MATCH_CUSTOM0	riscv/encoding.h	/^#define MATCH_CUSTOM0 /;"	d
MATCH_CUSTOM0_RD	riscv/encoding.h	/^#define MATCH_CUSTOM0_RD /;"	d
MATCH_CUSTOM0_RD_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM0_RD_RS1 /;"	d
MATCH_CUSTOM0_RD_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM0_RD_RS1_RS2 /;"	d
MATCH_CUSTOM0_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM0_RS1 /;"	d
MATCH_CUSTOM0_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM0_RS1_RS2 /;"	d
MATCH_CUSTOM1	riscv/encoding.h	/^#define MATCH_CUSTOM1 /;"	d
MATCH_CUSTOM1_RD	riscv/encoding.h	/^#define MATCH_CUSTOM1_RD /;"	d
MATCH_CUSTOM1_RD_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM1_RD_RS1 /;"	d
MATCH_CUSTOM1_RD_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM1_RD_RS1_RS2 /;"	d
MATCH_CUSTOM1_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM1_RS1 /;"	d
MATCH_CUSTOM1_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM1_RS1_RS2 /;"	d
MATCH_CUSTOM2	riscv/encoding.h	/^#define MATCH_CUSTOM2 /;"	d
MATCH_CUSTOM2_RD	riscv/encoding.h	/^#define MATCH_CUSTOM2_RD /;"	d
MATCH_CUSTOM2_RD_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM2_RD_RS1 /;"	d
MATCH_CUSTOM2_RD_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM2_RD_RS1_RS2 /;"	d
MATCH_CUSTOM2_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM2_RS1 /;"	d
MATCH_CUSTOM2_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM2_RS1_RS2 /;"	d
MATCH_CUSTOM3	riscv/encoding.h	/^#define MATCH_CUSTOM3 /;"	d
MATCH_CUSTOM3_RD	riscv/encoding.h	/^#define MATCH_CUSTOM3_RD /;"	d
MATCH_CUSTOM3_RD_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM3_RD_RS1 /;"	d
MATCH_CUSTOM3_RD_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM3_RD_RS1_RS2 /;"	d
MATCH_CUSTOM3_RS1	riscv/encoding.h	/^#define MATCH_CUSTOM3_RS1 /;"	d
MATCH_CUSTOM3_RS1_RS2	riscv/encoding.h	/^#define MATCH_CUSTOM3_RS1_RS2 /;"	d
MATCH_C_ADD	riscv/encoding.h	/^#define MATCH_C_ADD /;"	d
MATCH_C_ADDI	riscv/encoding.h	/^#define MATCH_C_ADDI /;"	d
MATCH_C_ADDI16SP	riscv/encoding.h	/^#define MATCH_C_ADDI16SP /;"	d
MATCH_C_ADDI4SPN	riscv/encoding.h	/^#define MATCH_C_ADDI4SPN /;"	d
MATCH_C_ADDIW	riscv/encoding.h	/^#define MATCH_C_ADDIW /;"	d
MATCH_C_ADDW	riscv/encoding.h	/^#define MATCH_C_ADDW /;"	d
MATCH_C_AND	riscv/encoding.h	/^#define MATCH_C_AND /;"	d
MATCH_C_ANDI	riscv/encoding.h	/^#define MATCH_C_ANDI /;"	d
MATCH_C_BEQZ	riscv/encoding.h	/^#define MATCH_C_BEQZ /;"	d
MATCH_C_BNEZ	riscv/encoding.h	/^#define MATCH_C_BNEZ /;"	d
MATCH_C_EBREAK	riscv/encoding.h	/^#define MATCH_C_EBREAK /;"	d
MATCH_C_FLD	riscv/encoding.h	/^#define MATCH_C_FLD /;"	d
MATCH_C_FLDSP	riscv/encoding.h	/^#define MATCH_C_FLDSP /;"	d
MATCH_C_FLW	riscv/encoding.h	/^#define MATCH_C_FLW /;"	d
MATCH_C_FLWSP	riscv/encoding.h	/^#define MATCH_C_FLWSP /;"	d
MATCH_C_FSD	riscv/encoding.h	/^#define MATCH_C_FSD /;"	d
MATCH_C_FSDSP	riscv/encoding.h	/^#define MATCH_C_FSDSP /;"	d
MATCH_C_FSW	riscv/encoding.h	/^#define MATCH_C_FSW /;"	d
MATCH_C_FSWSP	riscv/encoding.h	/^#define MATCH_C_FSWSP /;"	d
MATCH_C_J	riscv/encoding.h	/^#define MATCH_C_J /;"	d
MATCH_C_JAL	riscv/encoding.h	/^#define MATCH_C_JAL /;"	d
MATCH_C_JALR	riscv/encoding.h	/^#define MATCH_C_JALR /;"	d
MATCH_C_JR	riscv/encoding.h	/^#define MATCH_C_JR /;"	d
MATCH_C_LD	riscv/encoding.h	/^#define MATCH_C_LD /;"	d
MATCH_C_LDSP	riscv/encoding.h	/^#define MATCH_C_LDSP /;"	d
MATCH_C_LI	riscv/encoding.h	/^#define MATCH_C_LI /;"	d
MATCH_C_LQ	riscv/encoding.h	/^#define MATCH_C_LQ /;"	d
MATCH_C_LQSP	riscv/encoding.h	/^#define MATCH_C_LQSP /;"	d
MATCH_C_LUI	riscv/encoding.h	/^#define MATCH_C_LUI /;"	d
MATCH_C_LW	riscv/encoding.h	/^#define MATCH_C_LW /;"	d
MATCH_C_LWSP	riscv/encoding.h	/^#define MATCH_C_LWSP /;"	d
MATCH_C_MV	riscv/encoding.h	/^#define MATCH_C_MV /;"	d
MATCH_C_NOP	riscv/encoding.h	/^#define MATCH_C_NOP /;"	d
MATCH_C_OR	riscv/encoding.h	/^#define MATCH_C_OR /;"	d
MATCH_C_SD	riscv/encoding.h	/^#define MATCH_C_SD /;"	d
MATCH_C_SDSP	riscv/encoding.h	/^#define MATCH_C_SDSP /;"	d
MATCH_C_SLLI	riscv/encoding.h	/^#define MATCH_C_SLLI /;"	d
MATCH_C_SLLI_RV32	riscv/encoding.h	/^#define MATCH_C_SLLI_RV32 /;"	d
MATCH_C_SQ	riscv/encoding.h	/^#define MATCH_C_SQ /;"	d
MATCH_C_SQSP	riscv/encoding.h	/^#define MATCH_C_SQSP /;"	d
MATCH_C_SRAI	riscv/encoding.h	/^#define MATCH_C_SRAI /;"	d
MATCH_C_SRAI_RV32	riscv/encoding.h	/^#define MATCH_C_SRAI_RV32 /;"	d
MATCH_C_SRLI	riscv/encoding.h	/^#define MATCH_C_SRLI /;"	d
MATCH_C_SRLI_RV32	riscv/encoding.h	/^#define MATCH_C_SRLI_RV32 /;"	d
MATCH_C_SUB	riscv/encoding.h	/^#define MATCH_C_SUB /;"	d
MATCH_C_SUBW	riscv/encoding.h	/^#define MATCH_C_SUBW /;"	d
MATCH_C_SW	riscv/encoding.h	/^#define MATCH_C_SW /;"	d
MATCH_C_SWSP	riscv/encoding.h	/^#define MATCH_C_SWSP /;"	d
MATCH_C_XOR	riscv/encoding.h	/^#define MATCH_C_XOR /;"	d
MATCH_DIV	riscv/encoding.h	/^#define MATCH_DIV /;"	d
MATCH_DIVU	riscv/encoding.h	/^#define MATCH_DIVU /;"	d
MATCH_DIVUW	riscv/encoding.h	/^#define MATCH_DIVUW /;"	d
MATCH_DIVW	riscv/encoding.h	/^#define MATCH_DIVW /;"	d
MATCH_DRET	riscv/encoding.h	/^#define MATCH_DRET /;"	d
MATCH_EBREAK	riscv/encoding.h	/^#define MATCH_EBREAK /;"	d
MATCH_ECALL	riscv/encoding.h	/^#define MATCH_ECALL /;"	d
MATCH_EQUAL	riscv/processor.h	/^  MATCH_EQUAL = MCONTROL_MATCH_EQUAL,$/;"	e	enum:__anon2b80edf10303
MATCH_FADD_D	riscv/encoding.h	/^#define MATCH_FADD_D /;"	d
MATCH_FADD_H	riscv/encoding.h	/^#define MATCH_FADD_H /;"	d
MATCH_FADD_Q	riscv/encoding.h	/^#define MATCH_FADD_Q /;"	d
MATCH_FADD_S	riscv/encoding.h	/^#define MATCH_FADD_S /;"	d
MATCH_FCLASS_D	riscv/encoding.h	/^#define MATCH_FCLASS_D /;"	d
MATCH_FCLASS_H	riscv/encoding.h	/^#define MATCH_FCLASS_H /;"	d
MATCH_FCLASS_Q	riscv/encoding.h	/^#define MATCH_FCLASS_Q /;"	d
MATCH_FCLASS_S	riscv/encoding.h	/^#define MATCH_FCLASS_S /;"	d
MATCH_FCVT_D_H	riscv/encoding.h	/^#define MATCH_FCVT_D_H /;"	d
MATCH_FCVT_D_L	riscv/encoding.h	/^#define MATCH_FCVT_D_L /;"	d
MATCH_FCVT_D_LU	riscv/encoding.h	/^#define MATCH_FCVT_D_LU /;"	d
MATCH_FCVT_D_Q	riscv/encoding.h	/^#define MATCH_FCVT_D_Q /;"	d
MATCH_FCVT_D_S	riscv/encoding.h	/^#define MATCH_FCVT_D_S /;"	d
MATCH_FCVT_D_W	riscv/encoding.h	/^#define MATCH_FCVT_D_W /;"	d
MATCH_FCVT_D_WU	riscv/encoding.h	/^#define MATCH_FCVT_D_WU /;"	d
MATCH_FCVT_H_D	riscv/encoding.h	/^#define MATCH_FCVT_H_D /;"	d
MATCH_FCVT_H_L	riscv/encoding.h	/^#define MATCH_FCVT_H_L /;"	d
MATCH_FCVT_H_LU	riscv/encoding.h	/^#define MATCH_FCVT_H_LU /;"	d
MATCH_FCVT_H_Q	riscv/encoding.h	/^#define MATCH_FCVT_H_Q /;"	d
MATCH_FCVT_H_S	riscv/encoding.h	/^#define MATCH_FCVT_H_S /;"	d
MATCH_FCVT_H_W	riscv/encoding.h	/^#define MATCH_FCVT_H_W /;"	d
MATCH_FCVT_H_WU	riscv/encoding.h	/^#define MATCH_FCVT_H_WU /;"	d
MATCH_FCVT_LU_D	riscv/encoding.h	/^#define MATCH_FCVT_LU_D /;"	d
MATCH_FCVT_LU_H	riscv/encoding.h	/^#define MATCH_FCVT_LU_H /;"	d
MATCH_FCVT_LU_Q	riscv/encoding.h	/^#define MATCH_FCVT_LU_Q /;"	d
MATCH_FCVT_LU_S	riscv/encoding.h	/^#define MATCH_FCVT_LU_S /;"	d
MATCH_FCVT_L_D	riscv/encoding.h	/^#define MATCH_FCVT_L_D /;"	d
MATCH_FCVT_L_H	riscv/encoding.h	/^#define MATCH_FCVT_L_H /;"	d
MATCH_FCVT_L_Q	riscv/encoding.h	/^#define MATCH_FCVT_L_Q /;"	d
MATCH_FCVT_L_S	riscv/encoding.h	/^#define MATCH_FCVT_L_S /;"	d
MATCH_FCVT_Q_D	riscv/encoding.h	/^#define MATCH_FCVT_Q_D /;"	d
MATCH_FCVT_Q_H	riscv/encoding.h	/^#define MATCH_FCVT_Q_H /;"	d
MATCH_FCVT_Q_L	riscv/encoding.h	/^#define MATCH_FCVT_Q_L /;"	d
MATCH_FCVT_Q_LU	riscv/encoding.h	/^#define MATCH_FCVT_Q_LU /;"	d
MATCH_FCVT_Q_S	riscv/encoding.h	/^#define MATCH_FCVT_Q_S /;"	d
MATCH_FCVT_Q_W	riscv/encoding.h	/^#define MATCH_FCVT_Q_W /;"	d
MATCH_FCVT_Q_WU	riscv/encoding.h	/^#define MATCH_FCVT_Q_WU /;"	d
MATCH_FCVT_S_D	riscv/encoding.h	/^#define MATCH_FCVT_S_D /;"	d
MATCH_FCVT_S_H	riscv/encoding.h	/^#define MATCH_FCVT_S_H /;"	d
MATCH_FCVT_S_L	riscv/encoding.h	/^#define MATCH_FCVT_S_L /;"	d
MATCH_FCVT_S_LU	riscv/encoding.h	/^#define MATCH_FCVT_S_LU /;"	d
MATCH_FCVT_S_Q	riscv/encoding.h	/^#define MATCH_FCVT_S_Q /;"	d
MATCH_FCVT_S_W	riscv/encoding.h	/^#define MATCH_FCVT_S_W /;"	d
MATCH_FCVT_S_WU	riscv/encoding.h	/^#define MATCH_FCVT_S_WU /;"	d
MATCH_FCVT_WU_D	riscv/encoding.h	/^#define MATCH_FCVT_WU_D /;"	d
MATCH_FCVT_WU_H	riscv/encoding.h	/^#define MATCH_FCVT_WU_H /;"	d
MATCH_FCVT_WU_Q	riscv/encoding.h	/^#define MATCH_FCVT_WU_Q /;"	d
MATCH_FCVT_WU_S	riscv/encoding.h	/^#define MATCH_FCVT_WU_S /;"	d
MATCH_FCVT_W_D	riscv/encoding.h	/^#define MATCH_FCVT_W_D /;"	d
MATCH_FCVT_W_H	riscv/encoding.h	/^#define MATCH_FCVT_W_H /;"	d
MATCH_FCVT_W_Q	riscv/encoding.h	/^#define MATCH_FCVT_W_Q /;"	d
MATCH_FCVT_W_S	riscv/encoding.h	/^#define MATCH_FCVT_W_S /;"	d
MATCH_FDIV_D	riscv/encoding.h	/^#define MATCH_FDIV_D /;"	d
MATCH_FDIV_H	riscv/encoding.h	/^#define MATCH_FDIV_H /;"	d
MATCH_FDIV_Q	riscv/encoding.h	/^#define MATCH_FDIV_Q /;"	d
MATCH_FDIV_S	riscv/encoding.h	/^#define MATCH_FDIV_S /;"	d
MATCH_FENCE	riscv/encoding.h	/^#define MATCH_FENCE /;"	d
MATCH_FENCE_I	riscv/encoding.h	/^#define MATCH_FENCE_I /;"	d
MATCH_FENCE_TSO	riscv/encoding.h	/^#define MATCH_FENCE_TSO /;"	d
MATCH_FEQ_D	riscv/encoding.h	/^#define MATCH_FEQ_D /;"	d
MATCH_FEQ_H	riscv/encoding.h	/^#define MATCH_FEQ_H /;"	d
MATCH_FEQ_Q	riscv/encoding.h	/^#define MATCH_FEQ_Q /;"	d
MATCH_FEQ_S	riscv/encoding.h	/^#define MATCH_FEQ_S /;"	d
MATCH_FLD	riscv/encoding.h	/^#define MATCH_FLD /;"	d
MATCH_FLE_D	riscv/encoding.h	/^#define MATCH_FLE_D /;"	d
MATCH_FLE_H	riscv/encoding.h	/^#define MATCH_FLE_H /;"	d
MATCH_FLE_Q	riscv/encoding.h	/^#define MATCH_FLE_Q /;"	d
MATCH_FLE_S	riscv/encoding.h	/^#define MATCH_FLE_S /;"	d
MATCH_FLH	riscv/encoding.h	/^#define MATCH_FLH /;"	d
MATCH_FLQ	riscv/encoding.h	/^#define MATCH_FLQ /;"	d
MATCH_FLT_D	riscv/encoding.h	/^#define MATCH_FLT_D /;"	d
MATCH_FLT_H	riscv/encoding.h	/^#define MATCH_FLT_H /;"	d
MATCH_FLT_Q	riscv/encoding.h	/^#define MATCH_FLT_Q /;"	d
MATCH_FLT_S	riscv/encoding.h	/^#define MATCH_FLT_S /;"	d
MATCH_FLW	riscv/encoding.h	/^#define MATCH_FLW /;"	d
MATCH_FMADD_D	riscv/encoding.h	/^#define MATCH_FMADD_D /;"	d
MATCH_FMADD_H	riscv/encoding.h	/^#define MATCH_FMADD_H /;"	d
MATCH_FMADD_Q	riscv/encoding.h	/^#define MATCH_FMADD_Q /;"	d
MATCH_FMADD_S	riscv/encoding.h	/^#define MATCH_FMADD_S /;"	d
MATCH_FMAX_D	riscv/encoding.h	/^#define MATCH_FMAX_D /;"	d
MATCH_FMAX_H	riscv/encoding.h	/^#define MATCH_FMAX_H /;"	d
MATCH_FMAX_Q	riscv/encoding.h	/^#define MATCH_FMAX_Q /;"	d
MATCH_FMAX_S	riscv/encoding.h	/^#define MATCH_FMAX_S /;"	d
MATCH_FMIN_D	riscv/encoding.h	/^#define MATCH_FMIN_D /;"	d
MATCH_FMIN_H	riscv/encoding.h	/^#define MATCH_FMIN_H /;"	d
MATCH_FMIN_Q	riscv/encoding.h	/^#define MATCH_FMIN_Q /;"	d
MATCH_FMIN_S	riscv/encoding.h	/^#define MATCH_FMIN_S /;"	d
MATCH_FMSUB_D	riscv/encoding.h	/^#define MATCH_FMSUB_D /;"	d
MATCH_FMSUB_H	riscv/encoding.h	/^#define MATCH_FMSUB_H /;"	d
MATCH_FMSUB_Q	riscv/encoding.h	/^#define MATCH_FMSUB_Q /;"	d
MATCH_FMSUB_S	riscv/encoding.h	/^#define MATCH_FMSUB_S /;"	d
MATCH_FMUL_D	riscv/encoding.h	/^#define MATCH_FMUL_D /;"	d
MATCH_FMUL_H	riscv/encoding.h	/^#define MATCH_FMUL_H /;"	d
MATCH_FMUL_Q	riscv/encoding.h	/^#define MATCH_FMUL_Q /;"	d
MATCH_FMUL_S	riscv/encoding.h	/^#define MATCH_FMUL_S /;"	d
MATCH_FMV_D_X	riscv/encoding.h	/^#define MATCH_FMV_D_X /;"	d
MATCH_FMV_H_X	riscv/encoding.h	/^#define MATCH_FMV_H_X /;"	d
MATCH_FMV_Q_X	riscv/encoding.h	/^#define MATCH_FMV_Q_X /;"	d
MATCH_FMV_S_X	riscv/encoding.h	/^#define MATCH_FMV_S_X /;"	d
MATCH_FMV_W_X	riscv/encoding.h	/^#define MATCH_FMV_W_X /;"	d
MATCH_FMV_X_D	riscv/encoding.h	/^#define MATCH_FMV_X_D /;"	d
MATCH_FMV_X_H	riscv/encoding.h	/^#define MATCH_FMV_X_H /;"	d
MATCH_FMV_X_Q	riscv/encoding.h	/^#define MATCH_FMV_X_Q /;"	d
MATCH_FMV_X_S	riscv/encoding.h	/^#define MATCH_FMV_X_S /;"	d
MATCH_FMV_X_W	riscv/encoding.h	/^#define MATCH_FMV_X_W /;"	d
MATCH_FNMADD_D	riscv/encoding.h	/^#define MATCH_FNMADD_D /;"	d
MATCH_FNMADD_H	riscv/encoding.h	/^#define MATCH_FNMADD_H /;"	d
MATCH_FNMADD_Q	riscv/encoding.h	/^#define MATCH_FNMADD_Q /;"	d
MATCH_FNMADD_S	riscv/encoding.h	/^#define MATCH_FNMADD_S /;"	d
MATCH_FNMSUB_D	riscv/encoding.h	/^#define MATCH_FNMSUB_D /;"	d
MATCH_FNMSUB_H	riscv/encoding.h	/^#define MATCH_FNMSUB_H /;"	d
MATCH_FNMSUB_Q	riscv/encoding.h	/^#define MATCH_FNMSUB_Q /;"	d
MATCH_FNMSUB_S	riscv/encoding.h	/^#define MATCH_FNMSUB_S /;"	d
MATCH_FRCSR	riscv/encoding.h	/^#define MATCH_FRCSR /;"	d
MATCH_FRFLAGS	riscv/encoding.h	/^#define MATCH_FRFLAGS /;"	d
MATCH_FRRM	riscv/encoding.h	/^#define MATCH_FRRM /;"	d
MATCH_FSCSR	riscv/encoding.h	/^#define MATCH_FSCSR /;"	d
MATCH_FSD	riscv/encoding.h	/^#define MATCH_FSD /;"	d
MATCH_FSFLAGS	riscv/encoding.h	/^#define MATCH_FSFLAGS /;"	d
MATCH_FSFLAGSI	riscv/encoding.h	/^#define MATCH_FSFLAGSI /;"	d
MATCH_FSGNJN_D	riscv/encoding.h	/^#define MATCH_FSGNJN_D /;"	d
MATCH_FSGNJN_H	riscv/encoding.h	/^#define MATCH_FSGNJN_H /;"	d
MATCH_FSGNJN_Q	riscv/encoding.h	/^#define MATCH_FSGNJN_Q /;"	d
MATCH_FSGNJN_S	riscv/encoding.h	/^#define MATCH_FSGNJN_S /;"	d
MATCH_FSGNJX_D	riscv/encoding.h	/^#define MATCH_FSGNJX_D /;"	d
MATCH_FSGNJX_H	riscv/encoding.h	/^#define MATCH_FSGNJX_H /;"	d
MATCH_FSGNJX_Q	riscv/encoding.h	/^#define MATCH_FSGNJX_Q /;"	d
MATCH_FSGNJX_S	riscv/encoding.h	/^#define MATCH_FSGNJX_S /;"	d
MATCH_FSGNJ_D	riscv/encoding.h	/^#define MATCH_FSGNJ_D /;"	d
MATCH_FSGNJ_H	riscv/encoding.h	/^#define MATCH_FSGNJ_H /;"	d
MATCH_FSGNJ_Q	riscv/encoding.h	/^#define MATCH_FSGNJ_Q /;"	d
MATCH_FSGNJ_S	riscv/encoding.h	/^#define MATCH_FSGNJ_S /;"	d
MATCH_FSH	riscv/encoding.h	/^#define MATCH_FSH /;"	d
MATCH_FSL	riscv/encoding.h	/^#define MATCH_FSL /;"	d
MATCH_FSLW	riscv/encoding.h	/^#define MATCH_FSLW /;"	d
MATCH_FSQ	riscv/encoding.h	/^#define MATCH_FSQ /;"	d
MATCH_FSQRT_D	riscv/encoding.h	/^#define MATCH_FSQRT_D /;"	d
MATCH_FSQRT_H	riscv/encoding.h	/^#define MATCH_FSQRT_H /;"	d
MATCH_FSQRT_Q	riscv/encoding.h	/^#define MATCH_FSQRT_Q /;"	d
MATCH_FSQRT_S	riscv/encoding.h	/^#define MATCH_FSQRT_S /;"	d
MATCH_FSR	riscv/encoding.h	/^#define MATCH_FSR /;"	d
MATCH_FSRI	riscv/encoding.h	/^#define MATCH_FSRI /;"	d
MATCH_FSRIW	riscv/encoding.h	/^#define MATCH_FSRIW /;"	d
MATCH_FSRM	riscv/encoding.h	/^#define MATCH_FSRM /;"	d
MATCH_FSRMI	riscv/encoding.h	/^#define MATCH_FSRMI /;"	d
MATCH_FSRW	riscv/encoding.h	/^#define MATCH_FSRW /;"	d
MATCH_FSUB_D	riscv/encoding.h	/^#define MATCH_FSUB_D /;"	d
MATCH_FSUB_H	riscv/encoding.h	/^#define MATCH_FSUB_H /;"	d
MATCH_FSUB_Q	riscv/encoding.h	/^#define MATCH_FSUB_Q /;"	d
MATCH_FSUB_S	riscv/encoding.h	/^#define MATCH_FSUB_S /;"	d
MATCH_FSW	riscv/encoding.h	/^#define MATCH_FSW /;"	d
MATCH_GE	riscv/processor.h	/^  MATCH_GE = MCONTROL_MATCH_GE,$/;"	e	enum:__anon2b80edf10303
MATCH_GORC	riscv/encoding.h	/^#define MATCH_GORC /;"	d
MATCH_GORCI	riscv/encoding.h	/^#define MATCH_GORCI /;"	d
MATCH_GORCIW	riscv/encoding.h	/^#define MATCH_GORCIW /;"	d
MATCH_GORCW	riscv/encoding.h	/^#define MATCH_GORCW /;"	d
MATCH_GREV	riscv/encoding.h	/^#define MATCH_GREV /;"	d
MATCH_GREVI	riscv/encoding.h	/^#define MATCH_GREVI /;"	d
MATCH_GREVIW	riscv/encoding.h	/^#define MATCH_GREVIW /;"	d
MATCH_GREVW	riscv/encoding.h	/^#define MATCH_GREVW /;"	d
MATCH_HFENCE_GVMA	riscv/encoding.h	/^#define MATCH_HFENCE_GVMA /;"	d
MATCH_HFENCE_VVMA	riscv/encoding.h	/^#define MATCH_HFENCE_VVMA /;"	d
MATCH_HLVX_HU	riscv/encoding.h	/^#define MATCH_HLVX_HU /;"	d
MATCH_HLVX_WU	riscv/encoding.h	/^#define MATCH_HLVX_WU /;"	d
MATCH_HLV_B	riscv/encoding.h	/^#define MATCH_HLV_B /;"	d
MATCH_HLV_BU	riscv/encoding.h	/^#define MATCH_HLV_BU /;"	d
MATCH_HLV_D	riscv/encoding.h	/^#define MATCH_HLV_D /;"	d
MATCH_HLV_H	riscv/encoding.h	/^#define MATCH_HLV_H /;"	d
MATCH_HLV_HU	riscv/encoding.h	/^#define MATCH_HLV_HU /;"	d
MATCH_HLV_W	riscv/encoding.h	/^#define MATCH_HLV_W /;"	d
MATCH_HLV_WU	riscv/encoding.h	/^#define MATCH_HLV_WU /;"	d
MATCH_HSV_B	riscv/encoding.h	/^#define MATCH_HSV_B /;"	d
MATCH_HSV_D	riscv/encoding.h	/^#define MATCH_HSV_D /;"	d
MATCH_HSV_H	riscv/encoding.h	/^#define MATCH_HSV_H /;"	d
MATCH_HSV_W	riscv/encoding.h	/^#define MATCH_HSV_W /;"	d
MATCH_JAL	riscv/encoding.h	/^#define MATCH_JAL /;"	d
MATCH_JALR	riscv/encoding.h	/^#define MATCH_JALR /;"	d
MATCH_LB	riscv/encoding.h	/^#define MATCH_LB /;"	d
MATCH_LBU	riscv/encoding.h	/^#define MATCH_LBU /;"	d
MATCH_LD	riscv/encoding.h	/^#define MATCH_LD /;"	d
MATCH_LH	riscv/encoding.h	/^#define MATCH_LH /;"	d
MATCH_LHU	riscv/encoding.h	/^#define MATCH_LHU /;"	d
MATCH_LR_D	riscv/encoding.h	/^#define MATCH_LR_D /;"	d
MATCH_LR_W	riscv/encoding.h	/^#define MATCH_LR_W /;"	d
MATCH_LT	riscv/processor.h	/^  MATCH_LT = MCONTROL_MATCH_LT,$/;"	e	enum:__anon2b80edf10303
MATCH_LUI	riscv/encoding.h	/^#define MATCH_LUI /;"	d
MATCH_LW	riscv/encoding.h	/^#define MATCH_LW /;"	d
MATCH_LWU	riscv/encoding.h	/^#define MATCH_LWU /;"	d
MATCH_MASK_HIGH	riscv/processor.h	/^  MATCH_MASK_HIGH = MCONTROL_MATCH_MASK_HIGH$/;"	e	enum:__anon2b80edf10303
MATCH_MASK_LOW	riscv/processor.h	/^  MATCH_MASK_LOW = MCONTROL_MATCH_MASK_LOW,$/;"	e	enum:__anon2b80edf10303
MATCH_MAX	riscv/encoding.h	/^#define MATCH_MAX /;"	d
MATCH_MAXU	riscv/encoding.h	/^#define MATCH_MAXU /;"	d
MATCH_MIN	riscv/encoding.h	/^#define MATCH_MIN /;"	d
MATCH_MINU	riscv/encoding.h	/^#define MATCH_MINU /;"	d
MATCH_MRET	riscv/encoding.h	/^#define MATCH_MRET /;"	d
MATCH_MUL	riscv/encoding.h	/^#define MATCH_MUL /;"	d
MATCH_MULH	riscv/encoding.h	/^#define MATCH_MULH /;"	d
MATCH_MULHSU	riscv/encoding.h	/^#define MATCH_MULHSU /;"	d
MATCH_MULHU	riscv/encoding.h	/^#define MATCH_MULHU /;"	d
MATCH_MULW	riscv/encoding.h	/^#define MATCH_MULW /;"	d
MATCH_NAPOT	riscv/processor.h	/^  MATCH_NAPOT = MCONTROL_MATCH_NAPOT,$/;"	e	enum:__anon2b80edf10303
MATCH_OR	riscv/encoding.h	/^#define MATCH_OR /;"	d
MATCH_ORI	riscv/encoding.h	/^#define MATCH_ORI /;"	d
MATCH_ORN	riscv/encoding.h	/^#define MATCH_ORN /;"	d
MATCH_PACK	riscv/encoding.h	/^#define MATCH_PACK /;"	d
MATCH_PACKH	riscv/encoding.h	/^#define MATCH_PACKH /;"	d
MATCH_PACKU	riscv/encoding.h	/^#define MATCH_PACKU /;"	d
MATCH_PACKUW	riscv/encoding.h	/^#define MATCH_PACKUW /;"	d
MATCH_PACKW	riscv/encoding.h	/^#define MATCH_PACKW /;"	d
MATCH_PAUSE	riscv/encoding.h	/^#define MATCH_PAUSE /;"	d
MATCH_PCNT	riscv/encoding.h	/^#define MATCH_PCNT /;"	d
MATCH_PCNTW	riscv/encoding.h	/^#define MATCH_PCNTW /;"	d
MATCH_RDCYCLE	riscv/encoding.h	/^#define MATCH_RDCYCLE /;"	d
MATCH_RDCYCLEH	riscv/encoding.h	/^#define MATCH_RDCYCLEH /;"	d
MATCH_RDINSTRET	riscv/encoding.h	/^#define MATCH_RDINSTRET /;"	d
MATCH_RDINSTRETH	riscv/encoding.h	/^#define MATCH_RDINSTRETH /;"	d
MATCH_RDTIME	riscv/encoding.h	/^#define MATCH_RDTIME /;"	d
MATCH_RDTIMEH	riscv/encoding.h	/^#define MATCH_RDTIMEH /;"	d
MATCH_REM	riscv/encoding.h	/^#define MATCH_REM /;"	d
MATCH_REMU	riscv/encoding.h	/^#define MATCH_REMU /;"	d
MATCH_REMUW	riscv/encoding.h	/^#define MATCH_REMUW /;"	d
MATCH_REMW	riscv/encoding.h	/^#define MATCH_REMW /;"	d
MATCH_ROL	riscv/encoding.h	/^#define MATCH_ROL /;"	d
MATCH_ROLW	riscv/encoding.h	/^#define MATCH_ROLW /;"	d
MATCH_ROR	riscv/encoding.h	/^#define MATCH_ROR /;"	d
MATCH_RORI	riscv/encoding.h	/^#define MATCH_RORI /;"	d
MATCH_RORIW	riscv/encoding.h	/^#define MATCH_RORIW /;"	d
MATCH_RORW	riscv/encoding.h	/^#define MATCH_RORW /;"	d
MATCH_SB	riscv/encoding.h	/^#define MATCH_SB /;"	d
MATCH_SBCLR	riscv/encoding.h	/^#define MATCH_SBCLR /;"	d
MATCH_SBCLRI	riscv/encoding.h	/^#define MATCH_SBCLRI /;"	d
MATCH_SBCLRIW	riscv/encoding.h	/^#define MATCH_SBCLRIW /;"	d
MATCH_SBCLRW	riscv/encoding.h	/^#define MATCH_SBCLRW /;"	d
MATCH_SBEXT	riscv/encoding.h	/^#define MATCH_SBEXT /;"	d
MATCH_SBEXTI	riscv/encoding.h	/^#define MATCH_SBEXTI /;"	d
MATCH_SBEXTW	riscv/encoding.h	/^#define MATCH_SBEXTW /;"	d
MATCH_SBINV	riscv/encoding.h	/^#define MATCH_SBINV /;"	d
MATCH_SBINVI	riscv/encoding.h	/^#define MATCH_SBINVI /;"	d
MATCH_SBINVIW	riscv/encoding.h	/^#define MATCH_SBINVIW /;"	d
MATCH_SBINVW	riscv/encoding.h	/^#define MATCH_SBINVW /;"	d
MATCH_SBREAK	riscv/encoding.h	/^#define MATCH_SBREAK /;"	d
MATCH_SBSET	riscv/encoding.h	/^#define MATCH_SBSET /;"	d
MATCH_SBSETI	riscv/encoding.h	/^#define MATCH_SBSETI /;"	d
MATCH_SBSETIW	riscv/encoding.h	/^#define MATCH_SBSETIW /;"	d
MATCH_SBSETW	riscv/encoding.h	/^#define MATCH_SBSETW /;"	d
MATCH_SCALL	riscv/encoding.h	/^#define MATCH_SCALL /;"	d
MATCH_SC_D	riscv/encoding.h	/^#define MATCH_SC_D /;"	d
MATCH_SC_W	riscv/encoding.h	/^#define MATCH_SC_W /;"	d
MATCH_SD	riscv/encoding.h	/^#define MATCH_SD /;"	d
MATCH_SEXT_B	riscv/encoding.h	/^#define MATCH_SEXT_B /;"	d
MATCH_SEXT_H	riscv/encoding.h	/^#define MATCH_SEXT_H /;"	d
MATCH_SFENCE_VMA	riscv/encoding.h	/^#define MATCH_SFENCE_VMA /;"	d
MATCH_SH	riscv/encoding.h	/^#define MATCH_SH /;"	d
MATCH_SH1ADD	riscv/encoding.h	/^#define MATCH_SH1ADD /;"	d
MATCH_SH1ADDU_W	riscv/encoding.h	/^#define MATCH_SH1ADDU_W /;"	d
MATCH_SH2ADD	riscv/encoding.h	/^#define MATCH_SH2ADD /;"	d
MATCH_SH2ADDU_W	riscv/encoding.h	/^#define MATCH_SH2ADDU_W /;"	d
MATCH_SH3ADD	riscv/encoding.h	/^#define MATCH_SH3ADD /;"	d
MATCH_SH3ADDU_W	riscv/encoding.h	/^#define MATCH_SH3ADDU_W /;"	d
MATCH_SHFL	riscv/encoding.h	/^#define MATCH_SHFL /;"	d
MATCH_SHFLI	riscv/encoding.h	/^#define MATCH_SHFLI /;"	d
MATCH_SHFLW	riscv/encoding.h	/^#define MATCH_SHFLW /;"	d
MATCH_SLL	riscv/encoding.h	/^#define MATCH_SLL /;"	d
MATCH_SLLI	riscv/encoding.h	/^#define MATCH_SLLI /;"	d
MATCH_SLLIU_W	riscv/encoding.h	/^#define MATCH_SLLIU_W /;"	d
MATCH_SLLIW	riscv/encoding.h	/^#define MATCH_SLLIW /;"	d
MATCH_SLLI_RV32	riscv/encoding.h	/^#define MATCH_SLLI_RV32 /;"	d
MATCH_SLLW	riscv/encoding.h	/^#define MATCH_SLLW /;"	d
MATCH_SLO	riscv/encoding.h	/^#define MATCH_SLO /;"	d
MATCH_SLOI	riscv/encoding.h	/^#define MATCH_SLOI /;"	d
MATCH_SLOIW	riscv/encoding.h	/^#define MATCH_SLOIW /;"	d
MATCH_SLOW	riscv/encoding.h	/^#define MATCH_SLOW /;"	d
MATCH_SLT	riscv/encoding.h	/^#define MATCH_SLT /;"	d
MATCH_SLTI	riscv/encoding.h	/^#define MATCH_SLTI /;"	d
MATCH_SLTIU	riscv/encoding.h	/^#define MATCH_SLTIU /;"	d
MATCH_SLTU	riscv/encoding.h	/^#define MATCH_SLTU /;"	d
MATCH_SRA	riscv/encoding.h	/^#define MATCH_SRA /;"	d
MATCH_SRAI	riscv/encoding.h	/^#define MATCH_SRAI /;"	d
MATCH_SRAIW	riscv/encoding.h	/^#define MATCH_SRAIW /;"	d
MATCH_SRAI_RV32	riscv/encoding.h	/^#define MATCH_SRAI_RV32 /;"	d
MATCH_SRAW	riscv/encoding.h	/^#define MATCH_SRAW /;"	d
MATCH_SRET	riscv/encoding.h	/^#define MATCH_SRET /;"	d
MATCH_SRL	riscv/encoding.h	/^#define MATCH_SRL /;"	d
MATCH_SRLI	riscv/encoding.h	/^#define MATCH_SRLI /;"	d
MATCH_SRLIW	riscv/encoding.h	/^#define MATCH_SRLIW /;"	d
MATCH_SRLI_RV32	riscv/encoding.h	/^#define MATCH_SRLI_RV32 /;"	d
MATCH_SRLW	riscv/encoding.h	/^#define MATCH_SRLW /;"	d
MATCH_SRO	riscv/encoding.h	/^#define MATCH_SRO /;"	d
MATCH_SROI	riscv/encoding.h	/^#define MATCH_SROI /;"	d
MATCH_SROIW	riscv/encoding.h	/^#define MATCH_SROIW /;"	d
MATCH_SROW	riscv/encoding.h	/^#define MATCH_SROW /;"	d
MATCH_SUB	riscv/encoding.h	/^#define MATCH_SUB /;"	d
MATCH_SUBU_W	riscv/encoding.h	/^#define MATCH_SUBU_W /;"	d
MATCH_SUBW	riscv/encoding.h	/^#define MATCH_SUBW /;"	d
MATCH_SUBWU	riscv/encoding.h	/^#define MATCH_SUBWU /;"	d
MATCH_SW	riscv/encoding.h	/^#define MATCH_SW /;"	d
MATCH_UNSHFL	riscv/encoding.h	/^#define MATCH_UNSHFL /;"	d
MATCH_UNSHFLI	riscv/encoding.h	/^#define MATCH_UNSHFLI /;"	d
MATCH_UNSHFLW	riscv/encoding.h	/^#define MATCH_UNSHFLW /;"	d
MATCH_URET	riscv/encoding.h	/^#define MATCH_URET /;"	d
MATCH_VAADDU_VV	riscv/encoding.h	/^#define MATCH_VAADDU_VV /;"	d
MATCH_VAADDU_VX	riscv/encoding.h	/^#define MATCH_VAADDU_VX /;"	d
MATCH_VAADD_VV	riscv/encoding.h	/^#define MATCH_VAADD_VV /;"	d
MATCH_VAADD_VX	riscv/encoding.h	/^#define MATCH_VAADD_VX /;"	d
MATCH_VADC_VIM	riscv/encoding.h	/^#define MATCH_VADC_VIM /;"	d
MATCH_VADC_VVM	riscv/encoding.h	/^#define MATCH_VADC_VVM /;"	d
MATCH_VADC_VXM	riscv/encoding.h	/^#define MATCH_VADC_VXM /;"	d
MATCH_VADD_VI	riscv/encoding.h	/^#define MATCH_VADD_VI /;"	d
MATCH_VADD_VV	riscv/encoding.h	/^#define MATCH_VADD_VV /;"	d
MATCH_VADD_VX	riscv/encoding.h	/^#define MATCH_VADD_VX /;"	d
MATCH_VAMOADDEI16_V	riscv/encoding.h	/^#define MATCH_VAMOADDEI16_V /;"	d
MATCH_VAMOADDEI32_V	riscv/encoding.h	/^#define MATCH_VAMOADDEI32_V /;"	d
MATCH_VAMOADDEI64_V	riscv/encoding.h	/^#define MATCH_VAMOADDEI64_V /;"	d
MATCH_VAMOADDEI8_V	riscv/encoding.h	/^#define MATCH_VAMOADDEI8_V /;"	d
MATCH_VAMOANDEI16_V	riscv/encoding.h	/^#define MATCH_VAMOANDEI16_V /;"	d
MATCH_VAMOANDEI32_V	riscv/encoding.h	/^#define MATCH_VAMOANDEI32_V /;"	d
MATCH_VAMOANDEI64_V	riscv/encoding.h	/^#define MATCH_VAMOANDEI64_V /;"	d
MATCH_VAMOANDEI8_V	riscv/encoding.h	/^#define MATCH_VAMOANDEI8_V /;"	d
MATCH_VAMOMAXEI16_V	riscv/encoding.h	/^#define MATCH_VAMOMAXEI16_V /;"	d
MATCH_VAMOMAXEI32_V	riscv/encoding.h	/^#define MATCH_VAMOMAXEI32_V /;"	d
MATCH_VAMOMAXEI64_V	riscv/encoding.h	/^#define MATCH_VAMOMAXEI64_V /;"	d
MATCH_VAMOMAXEI8_V	riscv/encoding.h	/^#define MATCH_VAMOMAXEI8_V /;"	d
MATCH_VAMOMAXUEI16_V	riscv/encoding.h	/^#define MATCH_VAMOMAXUEI16_V /;"	d
MATCH_VAMOMAXUEI32_V	riscv/encoding.h	/^#define MATCH_VAMOMAXUEI32_V /;"	d
MATCH_VAMOMAXUEI64_V	riscv/encoding.h	/^#define MATCH_VAMOMAXUEI64_V /;"	d
MATCH_VAMOMAXUEI8_V	riscv/encoding.h	/^#define MATCH_VAMOMAXUEI8_V /;"	d
MATCH_VAMOMINEI16_V	riscv/encoding.h	/^#define MATCH_VAMOMINEI16_V /;"	d
MATCH_VAMOMINEI32_V	riscv/encoding.h	/^#define MATCH_VAMOMINEI32_V /;"	d
MATCH_VAMOMINEI64_V	riscv/encoding.h	/^#define MATCH_VAMOMINEI64_V /;"	d
MATCH_VAMOMINEI8_V	riscv/encoding.h	/^#define MATCH_VAMOMINEI8_V /;"	d
MATCH_VAMOMINUEI16_V	riscv/encoding.h	/^#define MATCH_VAMOMINUEI16_V /;"	d
MATCH_VAMOMINUEI32_V	riscv/encoding.h	/^#define MATCH_VAMOMINUEI32_V /;"	d
MATCH_VAMOMINUEI64_V	riscv/encoding.h	/^#define MATCH_VAMOMINUEI64_V /;"	d
MATCH_VAMOMINUEI8_V	riscv/encoding.h	/^#define MATCH_VAMOMINUEI8_V /;"	d
MATCH_VAMOOREI16_V	riscv/encoding.h	/^#define MATCH_VAMOOREI16_V /;"	d
MATCH_VAMOOREI32_V	riscv/encoding.h	/^#define MATCH_VAMOOREI32_V /;"	d
MATCH_VAMOOREI64_V	riscv/encoding.h	/^#define MATCH_VAMOOREI64_V /;"	d
MATCH_VAMOOREI8_V	riscv/encoding.h	/^#define MATCH_VAMOOREI8_V /;"	d
MATCH_VAMOSWAPEI16_V	riscv/encoding.h	/^#define MATCH_VAMOSWAPEI16_V /;"	d
MATCH_VAMOSWAPEI32_V	riscv/encoding.h	/^#define MATCH_VAMOSWAPEI32_V /;"	d
MATCH_VAMOSWAPEI64_V	riscv/encoding.h	/^#define MATCH_VAMOSWAPEI64_V /;"	d
MATCH_VAMOSWAPEI8_V	riscv/encoding.h	/^#define MATCH_VAMOSWAPEI8_V /;"	d
MATCH_VAMOXOREI16_V	riscv/encoding.h	/^#define MATCH_VAMOXOREI16_V /;"	d
MATCH_VAMOXOREI32_V	riscv/encoding.h	/^#define MATCH_VAMOXOREI32_V /;"	d
MATCH_VAMOXOREI64_V	riscv/encoding.h	/^#define MATCH_VAMOXOREI64_V /;"	d
MATCH_VAMOXOREI8_V	riscv/encoding.h	/^#define MATCH_VAMOXOREI8_V /;"	d
MATCH_VAND_VI	riscv/encoding.h	/^#define MATCH_VAND_VI /;"	d
MATCH_VAND_VV	riscv/encoding.h	/^#define MATCH_VAND_VV /;"	d
MATCH_VAND_VX	riscv/encoding.h	/^#define MATCH_VAND_VX /;"	d
MATCH_VASUBU_VV	riscv/encoding.h	/^#define MATCH_VASUBU_VV /;"	d
MATCH_VASUBU_VX	riscv/encoding.h	/^#define MATCH_VASUBU_VX /;"	d
MATCH_VASUB_VV	riscv/encoding.h	/^#define MATCH_VASUB_VV /;"	d
MATCH_VASUB_VX	riscv/encoding.h	/^#define MATCH_VASUB_VX /;"	d
MATCH_VCOMPRESS_VM	riscv/encoding.h	/^#define MATCH_VCOMPRESS_VM /;"	d
MATCH_VDIVU_VV	riscv/encoding.h	/^#define MATCH_VDIVU_VV /;"	d
MATCH_VDIVU_VX	riscv/encoding.h	/^#define MATCH_VDIVU_VX /;"	d
MATCH_VDIV_VV	riscv/encoding.h	/^#define MATCH_VDIV_VV /;"	d
MATCH_VDIV_VX	riscv/encoding.h	/^#define MATCH_VDIV_VX /;"	d
MATCH_VDOTU_VV	riscv/encoding.h	/^#define MATCH_VDOTU_VV /;"	d
MATCH_VDOT_VV	riscv/encoding.h	/^#define MATCH_VDOT_VV /;"	d
MATCH_VFADD_VF	riscv/encoding.h	/^#define MATCH_VFADD_VF /;"	d
MATCH_VFADD_VV	riscv/encoding.h	/^#define MATCH_VFADD_VV /;"	d
MATCH_VFCLASS_V	riscv/encoding.h	/^#define MATCH_VFCLASS_V /;"	d
MATCH_VFCVT_F_XU_V	riscv/encoding.h	/^#define MATCH_VFCVT_F_XU_V /;"	d
MATCH_VFCVT_F_X_V	riscv/encoding.h	/^#define MATCH_VFCVT_F_X_V /;"	d
MATCH_VFCVT_RTZ_XU_F_V	riscv/encoding.h	/^#define MATCH_VFCVT_RTZ_XU_F_V /;"	d
MATCH_VFCVT_RTZ_X_F_V	riscv/encoding.h	/^#define MATCH_VFCVT_RTZ_X_F_V /;"	d
MATCH_VFCVT_XU_F_V	riscv/encoding.h	/^#define MATCH_VFCVT_XU_F_V /;"	d
MATCH_VFCVT_X_F_V	riscv/encoding.h	/^#define MATCH_VFCVT_X_F_V /;"	d
MATCH_VFDIV_VF	riscv/encoding.h	/^#define MATCH_VFDIV_VF /;"	d
MATCH_VFDIV_VV	riscv/encoding.h	/^#define MATCH_VFDIV_VV /;"	d
MATCH_VFDOT_VV	riscv/encoding.h	/^#define MATCH_VFDOT_VV /;"	d
MATCH_VFIRST_M	riscv/encoding.h	/^#define MATCH_VFIRST_M /;"	d
MATCH_VFMACC_VF	riscv/encoding.h	/^#define MATCH_VFMACC_VF /;"	d
MATCH_VFMACC_VV	riscv/encoding.h	/^#define MATCH_VFMACC_VV /;"	d
MATCH_VFMADD_VF	riscv/encoding.h	/^#define MATCH_VFMADD_VF /;"	d
MATCH_VFMADD_VV	riscv/encoding.h	/^#define MATCH_VFMADD_VV /;"	d
MATCH_VFMAX_VF	riscv/encoding.h	/^#define MATCH_VFMAX_VF /;"	d
MATCH_VFMAX_VV	riscv/encoding.h	/^#define MATCH_VFMAX_VV /;"	d
MATCH_VFMERGE_VFM	riscv/encoding.h	/^#define MATCH_VFMERGE_VFM /;"	d
MATCH_VFMIN_VF	riscv/encoding.h	/^#define MATCH_VFMIN_VF /;"	d
MATCH_VFMIN_VV	riscv/encoding.h	/^#define MATCH_VFMIN_VV /;"	d
MATCH_VFMSAC_VF	riscv/encoding.h	/^#define MATCH_VFMSAC_VF /;"	d
MATCH_VFMSAC_VV	riscv/encoding.h	/^#define MATCH_VFMSAC_VV /;"	d
MATCH_VFMSUB_VF	riscv/encoding.h	/^#define MATCH_VFMSUB_VF /;"	d
MATCH_VFMSUB_VV	riscv/encoding.h	/^#define MATCH_VFMSUB_VV /;"	d
MATCH_VFMUL_VF	riscv/encoding.h	/^#define MATCH_VFMUL_VF /;"	d
MATCH_VFMUL_VV	riscv/encoding.h	/^#define MATCH_VFMUL_VV /;"	d
MATCH_VFMV_F_S	riscv/encoding.h	/^#define MATCH_VFMV_F_S /;"	d
MATCH_VFMV_S_F	riscv/encoding.h	/^#define MATCH_VFMV_S_F /;"	d
MATCH_VFMV_V_F	riscv/encoding.h	/^#define MATCH_VFMV_V_F /;"	d
MATCH_VFNCVT_F_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_F_F_W /;"	d
MATCH_VFNCVT_F_XU_W	riscv/encoding.h	/^#define MATCH_VFNCVT_F_XU_W /;"	d
MATCH_VFNCVT_F_X_W	riscv/encoding.h	/^#define MATCH_VFNCVT_F_X_W /;"	d
MATCH_VFNCVT_ROD_F_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_ROD_F_F_W /;"	d
MATCH_VFNCVT_RTZ_XU_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_RTZ_XU_F_W /;"	d
MATCH_VFNCVT_RTZ_X_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_RTZ_X_F_W /;"	d
MATCH_VFNCVT_XU_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_XU_F_W /;"	d
MATCH_VFNCVT_X_F_W	riscv/encoding.h	/^#define MATCH_VFNCVT_X_F_W /;"	d
MATCH_VFNMACC_VF	riscv/encoding.h	/^#define MATCH_VFNMACC_VF /;"	d
MATCH_VFNMACC_VV	riscv/encoding.h	/^#define MATCH_VFNMACC_VV /;"	d
MATCH_VFNMADD_VF	riscv/encoding.h	/^#define MATCH_VFNMADD_VF /;"	d
MATCH_VFNMADD_VV	riscv/encoding.h	/^#define MATCH_VFNMADD_VV /;"	d
MATCH_VFNMSAC_VF	riscv/encoding.h	/^#define MATCH_VFNMSAC_VF /;"	d
MATCH_VFNMSAC_VV	riscv/encoding.h	/^#define MATCH_VFNMSAC_VV /;"	d
MATCH_VFNMSUB_VF	riscv/encoding.h	/^#define MATCH_VFNMSUB_VF /;"	d
MATCH_VFNMSUB_VV	riscv/encoding.h	/^#define MATCH_VFNMSUB_VV /;"	d
MATCH_VFRDIV_VF	riscv/encoding.h	/^#define MATCH_VFRDIV_VF /;"	d
MATCH_VFRECE7_V	riscv/encoding.h	/^#define MATCH_VFRECE7_V /;"	d
MATCH_VFREDMAX_VS	riscv/encoding.h	/^#define MATCH_VFREDMAX_VS /;"	d
MATCH_VFREDMIN_VS	riscv/encoding.h	/^#define MATCH_VFREDMIN_VS /;"	d
MATCH_VFREDOSUM_VS	riscv/encoding.h	/^#define MATCH_VFREDOSUM_VS /;"	d
MATCH_VFREDSUM_VS	riscv/encoding.h	/^#define MATCH_VFREDSUM_VS /;"	d
MATCH_VFRSQRTE7_V	riscv/encoding.h	/^#define MATCH_VFRSQRTE7_V /;"	d
MATCH_VFRSUB_VF	riscv/encoding.h	/^#define MATCH_VFRSUB_VF /;"	d
MATCH_VFSGNJN_VF	riscv/encoding.h	/^#define MATCH_VFSGNJN_VF /;"	d
MATCH_VFSGNJN_VV	riscv/encoding.h	/^#define MATCH_VFSGNJN_VV /;"	d
MATCH_VFSGNJX_VF	riscv/encoding.h	/^#define MATCH_VFSGNJX_VF /;"	d
MATCH_VFSGNJX_VV	riscv/encoding.h	/^#define MATCH_VFSGNJX_VV /;"	d
MATCH_VFSGNJ_VF	riscv/encoding.h	/^#define MATCH_VFSGNJ_VF /;"	d
MATCH_VFSGNJ_VV	riscv/encoding.h	/^#define MATCH_VFSGNJ_VV /;"	d
MATCH_VFSLIDE1DOWN_VF	riscv/encoding.h	/^#define MATCH_VFSLIDE1DOWN_VF /;"	d
MATCH_VFSLIDE1UP_VF	riscv/encoding.h	/^#define MATCH_VFSLIDE1UP_VF /;"	d
MATCH_VFSQRT_V	riscv/encoding.h	/^#define MATCH_VFSQRT_V /;"	d
MATCH_VFSUB_VF	riscv/encoding.h	/^#define MATCH_VFSUB_VF /;"	d
MATCH_VFSUB_VV	riscv/encoding.h	/^#define MATCH_VFSUB_VV /;"	d
MATCH_VFWADD_VF	riscv/encoding.h	/^#define MATCH_VFWADD_VF /;"	d
MATCH_VFWADD_VV	riscv/encoding.h	/^#define MATCH_VFWADD_VV /;"	d
MATCH_VFWADD_WF	riscv/encoding.h	/^#define MATCH_VFWADD_WF /;"	d
MATCH_VFWADD_WV	riscv/encoding.h	/^#define MATCH_VFWADD_WV /;"	d
MATCH_VFWCVT_F_F_V	riscv/encoding.h	/^#define MATCH_VFWCVT_F_F_V /;"	d
MATCH_VFWCVT_F_XU_V	riscv/encoding.h	/^#define MATCH_VFWCVT_F_XU_V /;"	d
MATCH_VFWCVT_F_X_V	riscv/encoding.h	/^#define MATCH_VFWCVT_F_X_V /;"	d
MATCH_VFWCVT_RTZ_XU_F_V	riscv/encoding.h	/^#define MATCH_VFWCVT_RTZ_XU_F_V /;"	d
MATCH_VFWCVT_RTZ_X_F_V	riscv/encoding.h	/^#define MATCH_VFWCVT_RTZ_X_F_V /;"	d
MATCH_VFWCVT_XU_F_V	riscv/encoding.h	/^#define MATCH_VFWCVT_XU_F_V /;"	d
MATCH_VFWCVT_X_F_V	riscv/encoding.h	/^#define MATCH_VFWCVT_X_F_V /;"	d
MATCH_VFWMACC_VF	riscv/encoding.h	/^#define MATCH_VFWMACC_VF /;"	d
MATCH_VFWMACC_VV	riscv/encoding.h	/^#define MATCH_VFWMACC_VV /;"	d
MATCH_VFWMSAC_VF	riscv/encoding.h	/^#define MATCH_VFWMSAC_VF /;"	d
MATCH_VFWMSAC_VV	riscv/encoding.h	/^#define MATCH_VFWMSAC_VV /;"	d
MATCH_VFWMUL_VF	riscv/encoding.h	/^#define MATCH_VFWMUL_VF /;"	d
MATCH_VFWMUL_VV	riscv/encoding.h	/^#define MATCH_VFWMUL_VV /;"	d
MATCH_VFWNMACC_VF	riscv/encoding.h	/^#define MATCH_VFWNMACC_VF /;"	d
MATCH_VFWNMACC_VV	riscv/encoding.h	/^#define MATCH_VFWNMACC_VV /;"	d
MATCH_VFWNMSAC_VF	riscv/encoding.h	/^#define MATCH_VFWNMSAC_VF /;"	d
MATCH_VFWNMSAC_VV	riscv/encoding.h	/^#define MATCH_VFWNMSAC_VV /;"	d
MATCH_VFWREDOSUM_VS	riscv/encoding.h	/^#define MATCH_VFWREDOSUM_VS /;"	d
MATCH_VFWREDSUM_VS	riscv/encoding.h	/^#define MATCH_VFWREDSUM_VS /;"	d
MATCH_VFWSUB_VF	riscv/encoding.h	/^#define MATCH_VFWSUB_VF /;"	d
MATCH_VFWSUB_VV	riscv/encoding.h	/^#define MATCH_VFWSUB_VV /;"	d
MATCH_VFWSUB_WF	riscv/encoding.h	/^#define MATCH_VFWSUB_WF /;"	d
MATCH_VFWSUB_WV	riscv/encoding.h	/^#define MATCH_VFWSUB_WV /;"	d
MATCH_VID_V	riscv/encoding.h	/^#define MATCH_VID_V /;"	d
MATCH_VIOTA_M	riscv/encoding.h	/^#define MATCH_VIOTA_M /;"	d
MATCH_VL1RE16_V	riscv/encoding.h	/^#define MATCH_VL1RE16_V /;"	d
MATCH_VL1RE32_V	riscv/encoding.h	/^#define MATCH_VL1RE32_V /;"	d
MATCH_VL1RE64_V	riscv/encoding.h	/^#define MATCH_VL1RE64_V /;"	d
MATCH_VL1RE8_V	riscv/encoding.h	/^#define MATCH_VL1RE8_V /;"	d
MATCH_VL1R_V	riscv/encoding.h	/^#define MATCH_VL1R_V /;"	d
MATCH_VL2RE16_V	riscv/encoding.h	/^#define MATCH_VL2RE16_V /;"	d
MATCH_VL2RE32_V	riscv/encoding.h	/^#define MATCH_VL2RE32_V /;"	d
MATCH_VL2RE64_V	riscv/encoding.h	/^#define MATCH_VL2RE64_V /;"	d
MATCH_VL2RE8_V	riscv/encoding.h	/^#define MATCH_VL2RE8_V /;"	d
MATCH_VL2R_V	riscv/encoding.h	/^#define MATCH_VL2R_V /;"	d
MATCH_VL4RE16_V	riscv/encoding.h	/^#define MATCH_VL4RE16_V /;"	d
MATCH_VL4RE32_V	riscv/encoding.h	/^#define MATCH_VL4RE32_V /;"	d
MATCH_VL4RE64_V	riscv/encoding.h	/^#define MATCH_VL4RE64_V /;"	d
MATCH_VL4RE8_V	riscv/encoding.h	/^#define MATCH_VL4RE8_V /;"	d
MATCH_VL4R_V	riscv/encoding.h	/^#define MATCH_VL4R_V /;"	d
MATCH_VL8RE16_V	riscv/encoding.h	/^#define MATCH_VL8RE16_V /;"	d
MATCH_VL8RE32_V	riscv/encoding.h	/^#define MATCH_VL8RE32_V /;"	d
MATCH_VL8RE64_V	riscv/encoding.h	/^#define MATCH_VL8RE64_V /;"	d
MATCH_VL8RE8_V	riscv/encoding.h	/^#define MATCH_VL8RE8_V /;"	d
MATCH_VL8R_V	riscv/encoding.h	/^#define MATCH_VL8R_V /;"	d
MATCH_VLE1024FF_V	riscv/encoding.h	/^#define MATCH_VLE1024FF_V /;"	d
MATCH_VLE1024_V	riscv/encoding.h	/^#define MATCH_VLE1024_V /;"	d
MATCH_VLE128FF_V	riscv/encoding.h	/^#define MATCH_VLE128FF_V /;"	d
MATCH_VLE128_V	riscv/encoding.h	/^#define MATCH_VLE128_V /;"	d
MATCH_VLE16FF_V	riscv/encoding.h	/^#define MATCH_VLE16FF_V /;"	d
MATCH_VLE16_V	riscv/encoding.h	/^#define MATCH_VLE16_V /;"	d
MATCH_VLE256FF_V	riscv/encoding.h	/^#define MATCH_VLE256FF_V /;"	d
MATCH_VLE256_V	riscv/encoding.h	/^#define MATCH_VLE256_V /;"	d
MATCH_VLE32FF_V	riscv/encoding.h	/^#define MATCH_VLE32FF_V /;"	d
MATCH_VLE32_V	riscv/encoding.h	/^#define MATCH_VLE32_V /;"	d
MATCH_VLE512FF_V	riscv/encoding.h	/^#define MATCH_VLE512FF_V /;"	d
MATCH_VLE512_V	riscv/encoding.h	/^#define MATCH_VLE512_V /;"	d
MATCH_VLE64FF_V	riscv/encoding.h	/^#define MATCH_VLE64FF_V /;"	d
MATCH_VLE64_V	riscv/encoding.h	/^#define MATCH_VLE64_V /;"	d
MATCH_VLE8FF_V	riscv/encoding.h	/^#define MATCH_VLE8FF_V /;"	d
MATCH_VLE8_V	riscv/encoding.h	/^#define MATCH_VLE8_V /;"	d
MATCH_VLSE1024_V	riscv/encoding.h	/^#define MATCH_VLSE1024_V /;"	d
MATCH_VLSE128_V	riscv/encoding.h	/^#define MATCH_VLSE128_V /;"	d
MATCH_VLSE16_V	riscv/encoding.h	/^#define MATCH_VLSE16_V /;"	d
MATCH_VLSE256_V	riscv/encoding.h	/^#define MATCH_VLSE256_V /;"	d
MATCH_VLSE32_V	riscv/encoding.h	/^#define MATCH_VLSE32_V /;"	d
MATCH_VLSE512_V	riscv/encoding.h	/^#define MATCH_VLSE512_V /;"	d
MATCH_VLSE64_V	riscv/encoding.h	/^#define MATCH_VLSE64_V /;"	d
MATCH_VLSE8_V	riscv/encoding.h	/^#define MATCH_VLSE8_V /;"	d
MATCH_VLXEI1024_V	riscv/encoding.h	/^#define MATCH_VLXEI1024_V /;"	d
MATCH_VLXEI128_V	riscv/encoding.h	/^#define MATCH_VLXEI128_V /;"	d
MATCH_VLXEI16_V	riscv/encoding.h	/^#define MATCH_VLXEI16_V /;"	d
MATCH_VLXEI256_V	riscv/encoding.h	/^#define MATCH_VLXEI256_V /;"	d
MATCH_VLXEI32_V	riscv/encoding.h	/^#define MATCH_VLXEI32_V /;"	d
MATCH_VLXEI512_V	riscv/encoding.h	/^#define MATCH_VLXEI512_V /;"	d
MATCH_VLXEI64_V	riscv/encoding.h	/^#define MATCH_VLXEI64_V /;"	d
MATCH_VLXEI8_V	riscv/encoding.h	/^#define MATCH_VLXEI8_V /;"	d
MATCH_VMACC_VV	riscv/encoding.h	/^#define MATCH_VMACC_VV /;"	d
MATCH_VMACC_VX	riscv/encoding.h	/^#define MATCH_VMACC_VX /;"	d
MATCH_VMADC_VIM	riscv/encoding.h	/^#define MATCH_VMADC_VIM /;"	d
MATCH_VMADC_VVM	riscv/encoding.h	/^#define MATCH_VMADC_VVM /;"	d
MATCH_VMADC_VXM	riscv/encoding.h	/^#define MATCH_VMADC_VXM /;"	d
MATCH_VMADD_VV	riscv/encoding.h	/^#define MATCH_VMADD_VV /;"	d
MATCH_VMADD_VX	riscv/encoding.h	/^#define MATCH_VMADD_VX /;"	d
MATCH_VMANDNOT_MM	riscv/encoding.h	/^#define MATCH_VMANDNOT_MM /;"	d
MATCH_VMAND_MM	riscv/encoding.h	/^#define MATCH_VMAND_MM /;"	d
MATCH_VMAXU_VV	riscv/encoding.h	/^#define MATCH_VMAXU_VV /;"	d
MATCH_VMAXU_VX	riscv/encoding.h	/^#define MATCH_VMAXU_VX /;"	d
MATCH_VMAX_VV	riscv/encoding.h	/^#define MATCH_VMAX_VV /;"	d
MATCH_VMAX_VX	riscv/encoding.h	/^#define MATCH_VMAX_VX /;"	d
MATCH_VMERGE_VIM	riscv/encoding.h	/^#define MATCH_VMERGE_VIM /;"	d
MATCH_VMERGE_VVM	riscv/encoding.h	/^#define MATCH_VMERGE_VVM /;"	d
MATCH_VMERGE_VXM	riscv/encoding.h	/^#define MATCH_VMERGE_VXM /;"	d
MATCH_VMFEQ_VF	riscv/encoding.h	/^#define MATCH_VMFEQ_VF /;"	d
MATCH_VMFEQ_VV	riscv/encoding.h	/^#define MATCH_VMFEQ_VV /;"	d
MATCH_VMFGE_VF	riscv/encoding.h	/^#define MATCH_VMFGE_VF /;"	d
MATCH_VMFGT_VF	riscv/encoding.h	/^#define MATCH_VMFGT_VF /;"	d
MATCH_VMFLE_VF	riscv/encoding.h	/^#define MATCH_VMFLE_VF /;"	d
MATCH_VMFLE_VV	riscv/encoding.h	/^#define MATCH_VMFLE_VV /;"	d
MATCH_VMFLT_VF	riscv/encoding.h	/^#define MATCH_VMFLT_VF /;"	d
MATCH_VMFLT_VV	riscv/encoding.h	/^#define MATCH_VMFLT_VV /;"	d
MATCH_VMFNE_VF	riscv/encoding.h	/^#define MATCH_VMFNE_VF /;"	d
MATCH_VMFNE_VV	riscv/encoding.h	/^#define MATCH_VMFNE_VV /;"	d
MATCH_VMINU_VV	riscv/encoding.h	/^#define MATCH_VMINU_VV /;"	d
MATCH_VMINU_VX	riscv/encoding.h	/^#define MATCH_VMINU_VX /;"	d
MATCH_VMIN_VV	riscv/encoding.h	/^#define MATCH_VMIN_VV /;"	d
MATCH_VMIN_VX	riscv/encoding.h	/^#define MATCH_VMIN_VX /;"	d
MATCH_VMNAND_MM	riscv/encoding.h	/^#define MATCH_VMNAND_MM /;"	d
MATCH_VMNOR_MM	riscv/encoding.h	/^#define MATCH_VMNOR_MM /;"	d
MATCH_VMORNOT_MM	riscv/encoding.h	/^#define MATCH_VMORNOT_MM /;"	d
MATCH_VMOR_MM	riscv/encoding.h	/^#define MATCH_VMOR_MM /;"	d
MATCH_VMSBC_VVM	riscv/encoding.h	/^#define MATCH_VMSBC_VVM /;"	d
MATCH_VMSBC_VXM	riscv/encoding.h	/^#define MATCH_VMSBC_VXM /;"	d
MATCH_VMSBF_M	riscv/encoding.h	/^#define MATCH_VMSBF_M /;"	d
MATCH_VMSEQ_VI	riscv/encoding.h	/^#define MATCH_VMSEQ_VI /;"	d
MATCH_VMSEQ_VV	riscv/encoding.h	/^#define MATCH_VMSEQ_VV /;"	d
MATCH_VMSEQ_VX	riscv/encoding.h	/^#define MATCH_VMSEQ_VX /;"	d
MATCH_VMSGTU_VI	riscv/encoding.h	/^#define MATCH_VMSGTU_VI /;"	d
MATCH_VMSGTU_VX	riscv/encoding.h	/^#define MATCH_VMSGTU_VX /;"	d
MATCH_VMSGT_VI	riscv/encoding.h	/^#define MATCH_VMSGT_VI /;"	d
MATCH_VMSGT_VX	riscv/encoding.h	/^#define MATCH_VMSGT_VX /;"	d
MATCH_VMSIF_M	riscv/encoding.h	/^#define MATCH_VMSIF_M /;"	d
MATCH_VMSLEU_VI	riscv/encoding.h	/^#define MATCH_VMSLEU_VI /;"	d
MATCH_VMSLEU_VV	riscv/encoding.h	/^#define MATCH_VMSLEU_VV /;"	d
MATCH_VMSLEU_VX	riscv/encoding.h	/^#define MATCH_VMSLEU_VX /;"	d
MATCH_VMSLE_VI	riscv/encoding.h	/^#define MATCH_VMSLE_VI /;"	d
MATCH_VMSLE_VV	riscv/encoding.h	/^#define MATCH_VMSLE_VV /;"	d
MATCH_VMSLE_VX	riscv/encoding.h	/^#define MATCH_VMSLE_VX /;"	d
MATCH_VMSLTU_VV	riscv/encoding.h	/^#define MATCH_VMSLTU_VV /;"	d
MATCH_VMSLTU_VX	riscv/encoding.h	/^#define MATCH_VMSLTU_VX /;"	d
MATCH_VMSLT_VV	riscv/encoding.h	/^#define MATCH_VMSLT_VV /;"	d
MATCH_VMSLT_VX	riscv/encoding.h	/^#define MATCH_VMSLT_VX /;"	d
MATCH_VMSNE_VI	riscv/encoding.h	/^#define MATCH_VMSNE_VI /;"	d
MATCH_VMSNE_VV	riscv/encoding.h	/^#define MATCH_VMSNE_VV /;"	d
MATCH_VMSNE_VX	riscv/encoding.h	/^#define MATCH_VMSNE_VX /;"	d
MATCH_VMSOF_M	riscv/encoding.h	/^#define MATCH_VMSOF_M /;"	d
MATCH_VMULHSU_VV	riscv/encoding.h	/^#define MATCH_VMULHSU_VV /;"	d
MATCH_VMULHSU_VX	riscv/encoding.h	/^#define MATCH_VMULHSU_VX /;"	d
MATCH_VMULHU_VV	riscv/encoding.h	/^#define MATCH_VMULHU_VV /;"	d
MATCH_VMULHU_VX	riscv/encoding.h	/^#define MATCH_VMULHU_VX /;"	d
MATCH_VMULH_VV	riscv/encoding.h	/^#define MATCH_VMULH_VV /;"	d
MATCH_VMULH_VX	riscv/encoding.h	/^#define MATCH_VMULH_VX /;"	d
MATCH_VMUL_VV	riscv/encoding.h	/^#define MATCH_VMUL_VV /;"	d
MATCH_VMUL_VX	riscv/encoding.h	/^#define MATCH_VMUL_VX /;"	d
MATCH_VMV1R_V	riscv/encoding.h	/^#define MATCH_VMV1R_V /;"	d
MATCH_VMV2R_V	riscv/encoding.h	/^#define MATCH_VMV2R_V /;"	d
MATCH_VMV4R_V	riscv/encoding.h	/^#define MATCH_VMV4R_V /;"	d
MATCH_VMV8R_V	riscv/encoding.h	/^#define MATCH_VMV8R_V /;"	d
MATCH_VMVNFR_V	riscv/encoding.h	/^#define MATCH_VMVNFR_V /;"	d
MATCH_VMV_S_X	riscv/encoding.h	/^#define MATCH_VMV_S_X /;"	d
MATCH_VMV_V_I	riscv/encoding.h	/^#define MATCH_VMV_V_I /;"	d
MATCH_VMV_V_V	riscv/encoding.h	/^#define MATCH_VMV_V_V /;"	d
MATCH_VMV_V_X	riscv/encoding.h	/^#define MATCH_VMV_V_X /;"	d
MATCH_VMV_X_S	riscv/encoding.h	/^#define MATCH_VMV_X_S /;"	d
MATCH_VMXNOR_MM	riscv/encoding.h	/^#define MATCH_VMXNOR_MM /;"	d
MATCH_VMXOR_MM	riscv/encoding.h	/^#define MATCH_VMXOR_MM /;"	d
MATCH_VNCLIPU_WI	riscv/encoding.h	/^#define MATCH_VNCLIPU_WI /;"	d
MATCH_VNCLIPU_WV	riscv/encoding.h	/^#define MATCH_VNCLIPU_WV /;"	d
MATCH_VNCLIPU_WX	riscv/encoding.h	/^#define MATCH_VNCLIPU_WX /;"	d
MATCH_VNCLIP_WI	riscv/encoding.h	/^#define MATCH_VNCLIP_WI /;"	d
MATCH_VNCLIP_WV	riscv/encoding.h	/^#define MATCH_VNCLIP_WV /;"	d
MATCH_VNCLIP_WX	riscv/encoding.h	/^#define MATCH_VNCLIP_WX /;"	d
MATCH_VNMSAC_VV	riscv/encoding.h	/^#define MATCH_VNMSAC_VV /;"	d
MATCH_VNMSAC_VX	riscv/encoding.h	/^#define MATCH_VNMSAC_VX /;"	d
MATCH_VNMSUB_VV	riscv/encoding.h	/^#define MATCH_VNMSUB_VV /;"	d
MATCH_VNMSUB_VX	riscv/encoding.h	/^#define MATCH_VNMSUB_VX /;"	d
MATCH_VNSRA_WI	riscv/encoding.h	/^#define MATCH_VNSRA_WI /;"	d
MATCH_VNSRA_WV	riscv/encoding.h	/^#define MATCH_VNSRA_WV /;"	d
MATCH_VNSRA_WX	riscv/encoding.h	/^#define MATCH_VNSRA_WX /;"	d
MATCH_VNSRL_WI	riscv/encoding.h	/^#define MATCH_VNSRL_WI /;"	d
MATCH_VNSRL_WV	riscv/encoding.h	/^#define MATCH_VNSRL_WV /;"	d
MATCH_VNSRL_WX	riscv/encoding.h	/^#define MATCH_VNSRL_WX /;"	d
MATCH_VOR_VI	riscv/encoding.h	/^#define MATCH_VOR_VI /;"	d
MATCH_VOR_VV	riscv/encoding.h	/^#define MATCH_VOR_VV /;"	d
MATCH_VOR_VX	riscv/encoding.h	/^#define MATCH_VOR_VX /;"	d
MATCH_VPOPC_M	riscv/encoding.h	/^#define MATCH_VPOPC_M /;"	d
MATCH_VQMACCSU_VV	riscv/encoding.h	/^#define MATCH_VQMACCSU_VV /;"	d
MATCH_VQMACCU_VV	riscv/encoding.h	/^#define MATCH_VQMACCU_VV /;"	d
MATCH_VQMACC_VV	riscv/encoding.h	/^#define MATCH_VQMACC_VV /;"	d
MATCH_VREDAND_VS	riscv/encoding.h	/^#define MATCH_VREDAND_VS /;"	d
MATCH_VREDMAXU_VS	riscv/encoding.h	/^#define MATCH_VREDMAXU_VS /;"	d
MATCH_VREDMAX_VS	riscv/encoding.h	/^#define MATCH_VREDMAX_VS /;"	d
MATCH_VREDMINU_VS	riscv/encoding.h	/^#define MATCH_VREDMINU_VS /;"	d
MATCH_VREDMIN_VS	riscv/encoding.h	/^#define MATCH_VREDMIN_VS /;"	d
MATCH_VREDOR_VS	riscv/encoding.h	/^#define MATCH_VREDOR_VS /;"	d
MATCH_VREDSUM_VS	riscv/encoding.h	/^#define MATCH_VREDSUM_VS /;"	d
MATCH_VREDXOR_VS	riscv/encoding.h	/^#define MATCH_VREDXOR_VS /;"	d
MATCH_VREMU_VV	riscv/encoding.h	/^#define MATCH_VREMU_VV /;"	d
MATCH_VREMU_VX	riscv/encoding.h	/^#define MATCH_VREMU_VX /;"	d
MATCH_VREM_VV	riscv/encoding.h	/^#define MATCH_VREM_VV /;"	d
MATCH_VREM_VX	riscv/encoding.h	/^#define MATCH_VREM_VX /;"	d
MATCH_VRGATHEREI16_VV	riscv/encoding.h	/^#define MATCH_VRGATHEREI16_VV /;"	d
MATCH_VRGATHER_VI	riscv/encoding.h	/^#define MATCH_VRGATHER_VI /;"	d
MATCH_VRGATHER_VV	riscv/encoding.h	/^#define MATCH_VRGATHER_VV /;"	d
MATCH_VRGATHER_VX	riscv/encoding.h	/^#define MATCH_VRGATHER_VX /;"	d
MATCH_VRSUB_VI	riscv/encoding.h	/^#define MATCH_VRSUB_VI /;"	d
MATCH_VRSUB_VX	riscv/encoding.h	/^#define MATCH_VRSUB_VX /;"	d
MATCH_VS1R_V	riscv/encoding.h	/^#define MATCH_VS1R_V /;"	d
MATCH_VS2R_V	riscv/encoding.h	/^#define MATCH_VS2R_V /;"	d
MATCH_VS4R_V	riscv/encoding.h	/^#define MATCH_VS4R_V /;"	d
MATCH_VS8R_V	riscv/encoding.h	/^#define MATCH_VS8R_V /;"	d
MATCH_VSADDU_VI	riscv/encoding.h	/^#define MATCH_VSADDU_VI /;"	d
MATCH_VSADDU_VV	riscv/encoding.h	/^#define MATCH_VSADDU_VV /;"	d
MATCH_VSADDU_VX	riscv/encoding.h	/^#define MATCH_VSADDU_VX /;"	d
MATCH_VSADD_VI	riscv/encoding.h	/^#define MATCH_VSADD_VI /;"	d
MATCH_VSADD_VV	riscv/encoding.h	/^#define MATCH_VSADD_VV /;"	d
MATCH_VSADD_VX	riscv/encoding.h	/^#define MATCH_VSADD_VX /;"	d
MATCH_VSBC_VVM	riscv/encoding.h	/^#define MATCH_VSBC_VVM /;"	d
MATCH_VSBC_VXM	riscv/encoding.h	/^#define MATCH_VSBC_VXM /;"	d
MATCH_VSE1024_V	riscv/encoding.h	/^#define MATCH_VSE1024_V /;"	d
MATCH_VSE128_V	riscv/encoding.h	/^#define MATCH_VSE128_V /;"	d
MATCH_VSE16_V	riscv/encoding.h	/^#define MATCH_VSE16_V /;"	d
MATCH_VSE256_V	riscv/encoding.h	/^#define MATCH_VSE256_V /;"	d
MATCH_VSE32_V	riscv/encoding.h	/^#define MATCH_VSE32_V /;"	d
MATCH_VSE512_V	riscv/encoding.h	/^#define MATCH_VSE512_V /;"	d
MATCH_VSE64_V	riscv/encoding.h	/^#define MATCH_VSE64_V /;"	d
MATCH_VSE8_V	riscv/encoding.h	/^#define MATCH_VSE8_V /;"	d
MATCH_VSETVL	riscv/encoding.h	/^#define MATCH_VSETVL /;"	d
MATCH_VSETVLI	riscv/encoding.h	/^#define MATCH_VSETVLI /;"	d
MATCH_VSEXT_VF2	riscv/encoding.h	/^#define MATCH_VSEXT_VF2 /;"	d
MATCH_VSEXT_VF4	riscv/encoding.h	/^#define MATCH_VSEXT_VF4 /;"	d
MATCH_VSEXT_VF8	riscv/encoding.h	/^#define MATCH_VSEXT_VF8 /;"	d
MATCH_VSLIDE1DOWN_VX	riscv/encoding.h	/^#define MATCH_VSLIDE1DOWN_VX /;"	d
MATCH_VSLIDE1UP_VX	riscv/encoding.h	/^#define MATCH_VSLIDE1UP_VX /;"	d
MATCH_VSLIDEDOWN_VI	riscv/encoding.h	/^#define MATCH_VSLIDEDOWN_VI /;"	d
MATCH_VSLIDEDOWN_VX	riscv/encoding.h	/^#define MATCH_VSLIDEDOWN_VX /;"	d
MATCH_VSLIDEUP_VI	riscv/encoding.h	/^#define MATCH_VSLIDEUP_VI /;"	d
MATCH_VSLIDEUP_VX	riscv/encoding.h	/^#define MATCH_VSLIDEUP_VX /;"	d
MATCH_VSLL_VI	riscv/encoding.h	/^#define MATCH_VSLL_VI /;"	d
MATCH_VSLL_VV	riscv/encoding.h	/^#define MATCH_VSLL_VV /;"	d
MATCH_VSLL_VX	riscv/encoding.h	/^#define MATCH_VSLL_VX /;"	d
MATCH_VSMUL_VV	riscv/encoding.h	/^#define MATCH_VSMUL_VV /;"	d
MATCH_VSMUL_VX	riscv/encoding.h	/^#define MATCH_VSMUL_VX /;"	d
MATCH_VSRA_VI	riscv/encoding.h	/^#define MATCH_VSRA_VI /;"	d
MATCH_VSRA_VV	riscv/encoding.h	/^#define MATCH_VSRA_VV /;"	d
MATCH_VSRA_VX	riscv/encoding.h	/^#define MATCH_VSRA_VX /;"	d
MATCH_VSRL_VI	riscv/encoding.h	/^#define MATCH_VSRL_VI /;"	d
MATCH_VSRL_VV	riscv/encoding.h	/^#define MATCH_VSRL_VV /;"	d
MATCH_VSRL_VX	riscv/encoding.h	/^#define MATCH_VSRL_VX /;"	d
MATCH_VSSE1024_V	riscv/encoding.h	/^#define MATCH_VSSE1024_V /;"	d
MATCH_VSSE128_V	riscv/encoding.h	/^#define MATCH_VSSE128_V /;"	d
MATCH_VSSE16_V	riscv/encoding.h	/^#define MATCH_VSSE16_V /;"	d
MATCH_VSSE256_V	riscv/encoding.h	/^#define MATCH_VSSE256_V /;"	d
MATCH_VSSE32_V	riscv/encoding.h	/^#define MATCH_VSSE32_V /;"	d
MATCH_VSSE512_V	riscv/encoding.h	/^#define MATCH_VSSE512_V /;"	d
MATCH_VSSE64_V	riscv/encoding.h	/^#define MATCH_VSSE64_V /;"	d
MATCH_VSSE8_V	riscv/encoding.h	/^#define MATCH_VSSE8_V /;"	d
MATCH_VSSRA_VI	riscv/encoding.h	/^#define MATCH_VSSRA_VI /;"	d
MATCH_VSSRA_VV	riscv/encoding.h	/^#define MATCH_VSSRA_VV /;"	d
MATCH_VSSRA_VX	riscv/encoding.h	/^#define MATCH_VSSRA_VX /;"	d
MATCH_VSSRL_VI	riscv/encoding.h	/^#define MATCH_VSSRL_VI /;"	d
MATCH_VSSRL_VV	riscv/encoding.h	/^#define MATCH_VSSRL_VV /;"	d
MATCH_VSSRL_VX	riscv/encoding.h	/^#define MATCH_VSSRL_VX /;"	d
MATCH_VSSUBU_VV	riscv/encoding.h	/^#define MATCH_VSSUBU_VV /;"	d
MATCH_VSSUBU_VX	riscv/encoding.h	/^#define MATCH_VSSUBU_VX /;"	d
MATCH_VSSUB_VV	riscv/encoding.h	/^#define MATCH_VSSUB_VV /;"	d
MATCH_VSSUB_VX	riscv/encoding.h	/^#define MATCH_VSSUB_VX /;"	d
MATCH_VSUB_VV	riscv/encoding.h	/^#define MATCH_VSUB_VV /;"	d
MATCH_VSUB_VX	riscv/encoding.h	/^#define MATCH_VSUB_VX /;"	d
MATCH_VSUXEI1024_V	riscv/encoding.h	/^#define MATCH_VSUXEI1024_V /;"	d
MATCH_VSUXEI128_V	riscv/encoding.h	/^#define MATCH_VSUXEI128_V /;"	d
MATCH_VSUXEI16_V	riscv/encoding.h	/^#define MATCH_VSUXEI16_V /;"	d
MATCH_VSUXEI256_V	riscv/encoding.h	/^#define MATCH_VSUXEI256_V /;"	d
MATCH_VSUXEI32_V	riscv/encoding.h	/^#define MATCH_VSUXEI32_V /;"	d
MATCH_VSUXEI512_V	riscv/encoding.h	/^#define MATCH_VSUXEI512_V /;"	d
MATCH_VSUXEI64_V	riscv/encoding.h	/^#define MATCH_VSUXEI64_V /;"	d
MATCH_VSUXEI8_V	riscv/encoding.h	/^#define MATCH_VSUXEI8_V /;"	d
MATCH_VSXEI1024_V	riscv/encoding.h	/^#define MATCH_VSXEI1024_V /;"	d
MATCH_VSXEI128_V	riscv/encoding.h	/^#define MATCH_VSXEI128_V /;"	d
MATCH_VSXEI16_V	riscv/encoding.h	/^#define MATCH_VSXEI16_V /;"	d
MATCH_VSXEI256_V	riscv/encoding.h	/^#define MATCH_VSXEI256_V /;"	d
MATCH_VSXEI32_V	riscv/encoding.h	/^#define MATCH_VSXEI32_V /;"	d
MATCH_VSXEI512_V	riscv/encoding.h	/^#define MATCH_VSXEI512_V /;"	d
MATCH_VSXEI64_V	riscv/encoding.h	/^#define MATCH_VSXEI64_V /;"	d
MATCH_VSXEI8_V	riscv/encoding.h	/^#define MATCH_VSXEI8_V /;"	d
MATCH_VWADDU_VV	riscv/encoding.h	/^#define MATCH_VWADDU_VV /;"	d
MATCH_VWADDU_VX	riscv/encoding.h	/^#define MATCH_VWADDU_VX /;"	d
MATCH_VWADDU_WV	riscv/encoding.h	/^#define MATCH_VWADDU_WV /;"	d
MATCH_VWADDU_WX	riscv/encoding.h	/^#define MATCH_VWADDU_WX /;"	d
MATCH_VWADD_VV	riscv/encoding.h	/^#define MATCH_VWADD_VV /;"	d
MATCH_VWADD_VX	riscv/encoding.h	/^#define MATCH_VWADD_VX /;"	d
MATCH_VWADD_WV	riscv/encoding.h	/^#define MATCH_VWADD_WV /;"	d
MATCH_VWADD_WX	riscv/encoding.h	/^#define MATCH_VWADD_WX /;"	d
MATCH_VWMACCSU_VV	riscv/encoding.h	/^#define MATCH_VWMACCSU_VV /;"	d
MATCH_VWMACCSU_VX	riscv/encoding.h	/^#define MATCH_VWMACCSU_VX /;"	d
MATCH_VWMACCUS_VX	riscv/encoding.h	/^#define MATCH_VWMACCUS_VX /;"	d
MATCH_VWMACCU_VV	riscv/encoding.h	/^#define MATCH_VWMACCU_VV /;"	d
MATCH_VWMACCU_VX	riscv/encoding.h	/^#define MATCH_VWMACCU_VX /;"	d
MATCH_VWMACC_VV	riscv/encoding.h	/^#define MATCH_VWMACC_VV /;"	d
MATCH_VWMACC_VX	riscv/encoding.h	/^#define MATCH_VWMACC_VX /;"	d
MATCH_VWMULSU_VV	riscv/encoding.h	/^#define MATCH_VWMULSU_VV /;"	d
MATCH_VWMULSU_VX	riscv/encoding.h	/^#define MATCH_VWMULSU_VX /;"	d
MATCH_VWMULU_VV	riscv/encoding.h	/^#define MATCH_VWMULU_VV /;"	d
MATCH_VWMULU_VX	riscv/encoding.h	/^#define MATCH_VWMULU_VX /;"	d
MATCH_VWMUL_VV	riscv/encoding.h	/^#define MATCH_VWMUL_VV /;"	d
MATCH_VWMUL_VX	riscv/encoding.h	/^#define MATCH_VWMUL_VX /;"	d
MATCH_VWREDSUMU_VS	riscv/encoding.h	/^#define MATCH_VWREDSUMU_VS /;"	d
MATCH_VWREDSUM_VS	riscv/encoding.h	/^#define MATCH_VWREDSUM_VS /;"	d
MATCH_VWSUBU_VV	riscv/encoding.h	/^#define MATCH_VWSUBU_VV /;"	d
MATCH_VWSUBU_VX	riscv/encoding.h	/^#define MATCH_VWSUBU_VX /;"	d
MATCH_VWSUBU_WV	riscv/encoding.h	/^#define MATCH_VWSUBU_WV /;"	d
MATCH_VWSUBU_WX	riscv/encoding.h	/^#define MATCH_VWSUBU_WX /;"	d
MATCH_VWSUB_VV	riscv/encoding.h	/^#define MATCH_VWSUB_VV /;"	d
MATCH_VWSUB_VX	riscv/encoding.h	/^#define MATCH_VWSUB_VX /;"	d
MATCH_VWSUB_WV	riscv/encoding.h	/^#define MATCH_VWSUB_WV /;"	d
MATCH_VWSUB_WX	riscv/encoding.h	/^#define MATCH_VWSUB_WX /;"	d
MATCH_VXOR_VI	riscv/encoding.h	/^#define MATCH_VXOR_VI /;"	d
MATCH_VXOR_VV	riscv/encoding.h	/^#define MATCH_VXOR_VV /;"	d
MATCH_VXOR_VX	riscv/encoding.h	/^#define MATCH_VXOR_VX /;"	d
MATCH_VZEXT_VF2	riscv/encoding.h	/^#define MATCH_VZEXT_VF2 /;"	d
MATCH_VZEXT_VF4	riscv/encoding.h	/^#define MATCH_VZEXT_VF4 /;"	d
MATCH_VZEXT_VF8	riscv/encoding.h	/^#define MATCH_VZEXT_VF8 /;"	d
MATCH_WFI	riscv/encoding.h	/^#define MATCH_WFI /;"	d
MATCH_XNOR	riscv/encoding.h	/^#define MATCH_XNOR /;"	d
MATCH_XOR	riscv/encoding.h	/^#define MATCH_XOR /;"	d
MATCH_XORI	riscv/encoding.h	/^#define MATCH_XORI /;"	d
MAX_COMMANDS	fesvr/device.h	/^  static const size_t MAX_COMMANDS = 256;$/;"	m	class:command_t	typeref:typename:const size_t
MAX_DEVICES	fesvr/device.h	/^  static const size_t MAX_DEVICES = 256;$/;"	m	class:command_t	typeref:typename:const size_t
MAX_INSN_LENGTH	riscv/decode.h	/^#define MAX_INSN_LENGTH /;"	d
MAX_PADDR_BITS	riscv/mmu.h	/^#define MAX_PADDR_BITS /;"	d
MCONTROL_ACTION	riscv/encoding.h	/^#define MCONTROL_ACTION /;"	d
MCONTROL_ACTION_DEBUG_EXCEPTION	riscv/encoding.h	/^#define MCONTROL_ACTION_DEBUG_EXCEPTION /;"	d
MCONTROL_ACTION_DEBUG_MODE	riscv/encoding.h	/^#define MCONTROL_ACTION_DEBUG_MODE /;"	d
MCONTROL_ACTION_TRACE_EMIT	riscv/encoding.h	/^#define MCONTROL_ACTION_TRACE_EMIT /;"	d
MCONTROL_ACTION_TRACE_START	riscv/encoding.h	/^#define MCONTROL_ACTION_TRACE_START /;"	d
MCONTROL_ACTION_TRACE_STOP	riscv/encoding.h	/^#define MCONTROL_ACTION_TRACE_STOP /;"	d
MCONTROL_CHAIN	riscv/encoding.h	/^#define MCONTROL_CHAIN /;"	d
MCONTROL_DMODE	riscv/encoding.h	/^#define MCONTROL_DMODE(/;"	d
MCONTROL_EXECUTE	riscv/encoding.h	/^#define MCONTROL_EXECUTE /;"	d
MCONTROL_H	riscv/encoding.h	/^#define MCONTROL_H /;"	d
MCONTROL_LOAD	riscv/encoding.h	/^#define MCONTROL_LOAD /;"	d
MCONTROL_M	riscv/encoding.h	/^#define MCONTROL_M /;"	d
MCONTROL_MASKMAX	riscv/encoding.h	/^#define MCONTROL_MASKMAX(/;"	d
MCONTROL_MATCH	riscv/encoding.h	/^#define MCONTROL_MATCH /;"	d
MCONTROL_MATCH_EQUAL	riscv/encoding.h	/^#define MCONTROL_MATCH_EQUAL /;"	d
MCONTROL_MATCH_GE	riscv/encoding.h	/^#define MCONTROL_MATCH_GE /;"	d
MCONTROL_MATCH_LT	riscv/encoding.h	/^#define MCONTROL_MATCH_LT /;"	d
MCONTROL_MATCH_MASK_HIGH	riscv/encoding.h	/^#define MCONTROL_MATCH_MASK_HIGH /;"	d
MCONTROL_MATCH_MASK_LOW	riscv/encoding.h	/^#define MCONTROL_MATCH_MASK_LOW /;"	d
MCONTROL_MATCH_NAPOT	riscv/encoding.h	/^#define MCONTROL_MATCH_NAPOT /;"	d
MCONTROL_S	riscv/encoding.h	/^#define MCONTROL_S /;"	d
MCONTROL_SELECT	riscv/encoding.h	/^#define MCONTROL_SELECT /;"	d
MCONTROL_STORE	riscv/encoding.h	/^#define MCONTROL_STORE /;"	d
MCONTROL_TIMING	riscv/encoding.h	/^#define MCONTROL_TIMING /;"	d
MCONTROL_TYPE	riscv/encoding.h	/^#define MCONTROL_TYPE(/;"	d
MCONTROL_TYPE_MATCH	riscv/encoding.h	/^#define MCONTROL_TYPE_MATCH /;"	d
MCONTROL_TYPE_NONE	riscv/encoding.h	/^#define MCONTROL_TYPE_NONE /;"	d
MCONTROL_U	riscv/encoding.h	/^#define MCONTROL_U /;"	d
MCPPBS_GROUP	aclocal.m4	/^AC_DEFUN([MCPPBS_GROUP],$/;"	m
MCPPBS_PROG_INSTALL	aclocal.m4	/^AC_DEFUN([MCPPBS_PROG_INSTALL],$/;"	m
MCPPBS_PROG_RUN	aclocal.m4	/^AC_DEFUN([MCPPBS_PROG_RUN],$/;"	m
MCPPBS_SUBPROJECTS	aclocal.m4	/^AC_DEFUN([MCPPBS_SUBPROJECTS],$/;"	m
MEMIF_READ_FUNC	fesvr/memif.cc	/^#define MEMIF_READ_FUNC /;"	d	file:
MEMIF_WRITE_FUNC	fesvr/memif.cc	/^#define MEMIF_WRITE_FUNC /;"	d	file:
MIDELEG_FORCED_MASK	riscv/encoding.h	/^#define MIDELEG_FORCED_MASK /;"	d
MIP_HS_MASK	riscv/encoding.h	/^#define MIP_HS_MASK /;"	d
MIP_MEIP	riscv/encoding.h	/^#define MIP_MEIP /;"	d
MIP_MSIP	riscv/encoding.h	/^#define MIP_MSIP /;"	d
MIP_MTIP	riscv/encoding.h	/^#define MIP_MTIP /;"	d
MIP_SEIP	riscv/encoding.h	/^#define MIP_SEIP /;"	d
MIP_SGEIP	riscv/encoding.h	/^#define MIP_SGEIP /;"	d
MIP_SSIP	riscv/encoding.h	/^#define MIP_SSIP /;"	d
MIP_STIP	riscv/encoding.h	/^#define MIP_STIP /;"	d
MIP_S_MASK	riscv/encoding.h	/^#define MIP_S_MASK /;"	d
MIP_UEIP	riscv/encoding.h	/^#define MIP_UEIP /;"	d
MIP_USIP	riscv/encoding.h	/^#define MIP_USIP /;"	d
MIP_UTIP	riscv/encoding.h	/^#define MIP_UTIP /;"	d
MIP_VSEIP	riscv/encoding.h	/^#define MIP_VSEIP /;"	d
MIP_VSSIP	riscv/encoding.h	/^#define MIP_VSSIP /;"	d
MIP_VSTIP	riscv/encoding.h	/^#define MIP_VSTIP /;"	d
MIP_VS_MASK	riscv/encoding.h	/^#define MIP_VS_MASK /;"	d
MKINSTALLDIRS	Makefile.in	/^MKINSTALLDIRS := $(scripts_dir)\/mk-install-dirs.sh$/;"	m
MKINSTALLDIRS	build/Makefile	/^MKINSTALLDIRS := $(scripts_dir)\/mk-install-dirs.sh$/;"	m
MMU	riscv/decode.h	/^#define MMU /;"	d
MSIP_BASE	fesvr/tsi.cc	/^#define MSIP_BASE /;"	d	file:
MSIP_BASE	riscv/clint.cc	/^#define MSIP_BASE	/;"	d	file:
MSTATUS32_SD	riscv/encoding.h	/^#define MSTATUS32_SD /;"	d
MSTATUS64_SD	riscv/encoding.h	/^#define MSTATUS64_SD /;"	d
MSTATUS_FS	riscv/encoding.h	/^#define MSTATUS_FS /;"	d
MSTATUS_GVA	riscv/encoding.h	/^#define MSTATUS_GVA /;"	d
MSTATUS_HIE	riscv/encoding.h	/^#define MSTATUS_HIE /;"	d
MSTATUS_HPIE	riscv/encoding.h	/^#define MSTATUS_HPIE /;"	d
MSTATUS_MIE	riscv/encoding.h	/^#define MSTATUS_MIE /;"	d
MSTATUS_MPIE	riscv/encoding.h	/^#define MSTATUS_MPIE /;"	d
MSTATUS_MPP	riscv/encoding.h	/^#define MSTATUS_MPP /;"	d
MSTATUS_MPRV	riscv/encoding.h	/^#define MSTATUS_MPRV /;"	d
MSTATUS_MPV	riscv/encoding.h	/^#define MSTATUS_MPV /;"	d
MSTATUS_MXR	riscv/encoding.h	/^#define MSTATUS_MXR /;"	d
MSTATUS_SD	riscv/encoding.h	/^# define MSTATUS_SD /;"	d
MSTATUS_SIE	riscv/encoding.h	/^#define MSTATUS_SIE /;"	d
MSTATUS_SPIE	riscv/encoding.h	/^#define MSTATUS_SPIE /;"	d
MSTATUS_SPP	riscv/encoding.h	/^#define MSTATUS_SPP /;"	d
MSTATUS_SUM	riscv/encoding.h	/^#define MSTATUS_SUM /;"	d
MSTATUS_SXL	riscv/encoding.h	/^#define MSTATUS_SXL /;"	d
MSTATUS_TSR	riscv/encoding.h	/^#define MSTATUS_TSR /;"	d
MSTATUS_TVM	riscv/encoding.h	/^#define MSTATUS_TVM /;"	d
MSTATUS_TW	riscv/encoding.h	/^#define MSTATUS_TW /;"	d
MSTATUS_UIE	riscv/encoding.h	/^#define MSTATUS_UIE /;"	d
MSTATUS_UPIE	riscv/encoding.h	/^#define MSTATUS_UPIE /;"	d
MSTATUS_UXL	riscv/encoding.h	/^#define MSTATUS_UXL /;"	d
MSTATUS_VS	riscv/encoding.h	/^#define MSTATUS_VS /;"	d
MSTATUS_XS	riscv/encoding.h	/^#define MSTATUS_XS /;"	d
MTIMECMP_BASE	riscv/clint.cc	/^#define MTIMECMP_BASE	/;"	d	file:
MTIME_BASE	riscv/clint.cc	/^#define MTIME_BASE	/;"	d	file:
Makefile	Makefile.in	/^Makefile : $(src_dir)\/Makefile.in $(sprojs_mk_in) config.status$/;"	t
Makefile	build/Makefile	/^Makefile : $(src_dir)\/Makefile.in $(sprojs_mk_in) config.status$/;"	t
NCSR	riscv/decode.h	/^const int NCSR = 4096;$/;"	v	typeref:typename:const int
NFPR	riscv/decode.h	/^const int NFPR = 32;$/;"	v	typeref:typename:const int
NHARTS_MAX	fesvr/tsi.cc	/^#define NHARTS_MAX /;"	d	file:
NOINLINE	riscv/common.h	/^#define NOINLINE /;"	d
NVPR	riscv/decode.h	/^const int NVPR = 32;$/;"	v	typeref:typename:const int
NXPR	riscv/decode.h	/^const int NXPR = 32;$/;"	v	typeref:typename:const int
OBJCOPY	debug_rom/Makefile	/^OBJCOPY = $(RISCV)\/bin\/riscv64-unknown-elf-objcopy$/;"	m
OPCODE_CACHE_SIZE	riscv/processor.h	/^  static const size_t OPCODE_CACHE_SIZE = 8191;$/;"	m	class:processor_t	typeref:typename:const size_t
OPERATION_EXECUTE	riscv/processor.h	/^  OPERATION_EXECUTE,$/;"	e	enum:__anon2b80edf10603
OPERATION_LOAD	riscv/processor.h	/^  OPERATION_LOAD,$/;"	e	enum:__anon2b80edf10603
OPERATION_STORE	riscv/processor.h	/^  OPERATION_STORE,$/;"	e	enum:__anon2b80edf10603
P	riscv/decode.h	/^#define P /;"	d
PACKAGE_BUGREPORT	build/config.h	/^#define PACKAGE_BUGREPORT /;"	d
PACKAGE_NAME	build/config.h	/^#define PACKAGE_NAME /;"	d
PACKAGE_STRING	build/config.h	/^#define PACKAGE_STRING /;"	d
PACKAGE_TARNAME	build/config.h	/^#define PACKAGE_TARNAME /;"	d
PACKAGE_URL	build/config.h	/^#define PACKAGE_URL /;"	d
PACKAGE_VERSION	build/config.h	/^#define PACKAGE_VERSION /;"	d
PAUSE_DR	riscv/jtag_dtm.h	/^  PAUSE_DR,$/;"	e	enum:__anon58dfc25b0103
PAUSE_IR	riscv/jtag_dtm.h	/^  PAUSE_IR,$/;"	e	enum:__anon58dfc25b0103
PC_ALIGN	riscv/decode.h	/^#define PC_ALIGN /;"	d
PC_SERIALIZE_AFTER	riscv/decode.h	/^#define PC_SERIALIZE_AFTER /;"	d
PC_SERIALIZE_BEFORE	riscv/decode.h	/^#define PC_SERIALIZE_BEFORE /;"	d
PC_SERIALIZE_WFI	riscv/decode.h	/^#define PC_SERIALIZE_WFI /;"	d
PGMASK	riscv/mmu.h	/^const reg_t PGMASK = ~(PGSIZE-1);$/;"	v	typeref:typename:const reg_t
PGSHIFT	riscv/mmu.h	/^#define PGSHIFT /;"	d
PGSIZE	riscv/mmu.h	/^const reg_t PGSIZE = 1 << PGSHIFT;$/;"	v	typeref:typename:const reg_t
PMP_A	riscv/encoding.h	/^#define PMP_A /;"	d
PMP_L	riscv/encoding.h	/^#define PMP_L /;"	d
PMP_NA4	riscv/encoding.h	/^#define PMP_NA4 /;"	d
PMP_NAPOT	riscv/encoding.h	/^#define PMP_NAPOT /;"	d
PMP_R	riscv/encoding.h	/^#define PMP_R /;"	d
PMP_SHIFT	riscv/encoding.h	/^#define PMP_SHIFT /;"	d
PMP_TOR	riscv/encoding.h	/^#define PMP_TOR /;"	d
PMP_W	riscv/encoding.h	/^#define PMP_W /;"	d
PMP_X	riscv/encoding.h	/^#define PMP_X /;"	d
PREFIX	fesvr/htif.cc	/^# define PREFIX /;"	d	file:
PRV_HS	riscv/encoding.h	/^#define PRV_HS /;"	d
PRV_M	riscv/encoding.h	/^#define PRV_M /;"	d
PRV_S	riscv/encoding.h	/^#define PRV_S /;"	d
PRV_U	riscv/encoding.h	/^#define PRV_U /;"	d
PTE_A	riscv/encoding.h	/^#define PTE_A /;"	d
PTE_D	riscv/encoding.h	/^#define PTE_D /;"	d
PTE_G	riscv/encoding.h	/^#define PTE_G /;"	d
PTE_PPN_SHIFT	riscv/encoding.h	/^#define PTE_PPN_SHIFT /;"	d
PTE_R	riscv/encoding.h	/^#define PTE_R /;"	d
PTE_SOFT	riscv/encoding.h	/^#define PTE_SOFT /;"	d
PTE_TABLE	riscv/encoding.h	/^#define PTE_TABLE(/;"	d
PTE_U	riscv/encoding.h	/^#define PTE_U /;"	d
PTE_V	riscv/encoding.h	/^#define PTE_V /;"	d
PTE_W	riscv/encoding.h	/^#define PTE_W /;"	d
PTE_X	riscv/encoding.h	/^#define PTE_X /;"	d
PT_LOAD	fesvr/elf.h	/^#define PT_LOAD /;"	d
RANLIB	Makefile.in	/^RANLIB        := @RANLIB@$/;"	m
RANLIB	build/Makefile	/^RANLIB        := ranlib$/;"	m
RD	riscv/decode.h	/^#define RD /;"	d
RDN	riscv/processor.h	/^  RDN,$/;"	e	enum:VRM
READ_FREG	riscv/decode.h	/^#define READ_FREG(/;"	d
READ_MEM	riscv/mmu.h	/^# define READ_MEM(/;"	d
READ_REG	riscv/decode.h	/^#define READ_REG(/;"	d
REDUCTION_LOOP	riscv/decode.h	/^#define REDUCTION_LOOP(/;"	d
REDUCTION_ULOOP	riscv/decode.h	/^#define REDUCTION_ULOOP(/;"	d
REGISTER_EXTENSION	riscv/extension.h	/^#define REGISTER_EXTENSION(/;"	d
REGISTER_INSN	riscv/processor.h	/^#define REGISTER_INSN(/;"	d
REMOTE_BITBANG_H	riscv/remote_bitbang.h	/^#define REMOTE_BITBANG_H$/;"	d
RISCV_AT_FDCWD	fesvr/syscall.cc	/^#define RISCV_AT_FDCWD /;"	d	file:
RISCV_CSR_ENCODING_H	riscv/encoding.h	/^#define RISCV_CSR_ENCODING_H$/;"	d
RISCV_ENABLED	build/config.h	/^#define RISCV_ENABLED /;"	d
RISCV_ENCODING_H	riscv/encoding.h	/^#define RISCV_ENCODING_H$/;"	d
RISCV_PGLEVEL_BITS	riscv/encoding.h	/^# define RISCV_PGLEVEL_BITS /;"	d
RISCV_PGSHIFT	riscv/encoding.h	/^#define RISCV_PGSHIFT /;"	d
RISCV_PGSIZE	riscv/encoding.h	/^#define RISCV_PGSIZE /;"	d
RISCV_XLATE_VIRT	riscv/mmu.h	/^#define RISCV_XLATE_VIRT /;"	d
RISCV_XLATE_VIRT_MXR	riscv/mmu.h	/^#define RISCV_XLATE_VIRT_MXR /;"	d
RM	riscv/decode.h	/^#define RM /;"	d
RNE	riscv/processor.h	/^  RNE,$/;"	e	enum:VRM
RNU	riscv/processor.h	/^  RNU = 0,$/;"	e	enum:VRM
ROD	riscv/processor.h	/^  ROD,$/;"	e	enum:VRM
RS1	riscv/decode.h	/^#define RS1 /;"	d
RS2	riscv/decode.h	/^#define RS2 /;"	d
RS3	riscv/decode.h	/^#define RS3 /;"	d
RUN	Makefile.in	/^RUN           := @RUN@$/;"	m
RUN	build/Makefile	/^RUN           := @RUN@$/;"	m
RUNFLAGS	Makefile.in	/^RUNFLAGS      := @RUNFLAGS@$/;"	m
RUNFLAGS	build/Makefile	/^RUNFLAGS      := @RUNFLAGS@$/;"	m
RUN_AC_OR_DIE	fesvr/dtm.cc	/^#define RUN_AC_OR_DIE(/;"	d	file:
RUN_TEST_IDLE	riscv/jtag_dtm.h	/^  RUN_TEST_IDLE,$/;"	e	enum:__anon58dfc25b0103
RVC_FRS2	riscv/decode.h	/^#define RVC_FRS2 /;"	d
RVC_FRS2S	riscv/decode.h	/^#define RVC_FRS2S /;"	d
RVC_RS1	riscv/decode.h	/^#define RVC_RS1 /;"	d
RVC_RS1S	riscv/decode.h	/^#define RVC_RS1S /;"	d
RVC_RS2	riscv/decode.h	/^#define RVC_RS2 /;"	d
RVC_RS2S	riscv/decode.h	/^#define RVC_RS2S /;"	d
RVC_SP	riscv/decode.h	/^#define RVC_SP /;"	d
RV_X	fesvr/dtm.cc	/^#define RV_X(/;"	d	file:
S0	fesvr/dtm.cc	/^#define S0 /;"	d	file:
S0	riscv/opcodes.h	/^#define S0 /;"	d
S1	fesvr/dtm.cc	/^#define S1 /;"	d	file:
S1	riscv/opcodes.h	/^#define S1 /;"	d
SAI_ADDR_CHUNKS	fesvr/tsi.h	/^#define SAI_ADDR_CHUNKS /;"	d
SAI_CMD_READ	fesvr/tsi.h	/^#define SAI_CMD_READ /;"	d
SAI_CMD_WRITE	fesvr/tsi.h	/^#define SAI_CMD_WRITE /;"	d
SAI_LEN_CHUNKS	fesvr/tsi.h	/^#define SAI_LEN_CHUNKS /;"	d
SATP32_ASID	riscv/encoding.h	/^#define SATP32_ASID /;"	d
SATP32_MODE	riscv/encoding.h	/^#define SATP32_MODE /;"	d
SATP32_PPN	riscv/encoding.h	/^#define SATP32_PPN /;"	d
SATP64_ASID	riscv/encoding.h	/^#define SATP64_ASID /;"	d
SATP64_MODE	riscv/encoding.h	/^#define SATP64_MODE /;"	d
SATP64_PPN	riscv/encoding.h	/^#define SATP64_PPN /;"	d
SATP_MODE	riscv/encoding.h	/^# define SATP_MODE /;"	d
SATP_MODE_OFF	riscv/encoding.h	/^#define SATP_MODE_OFF /;"	d
SATP_MODE_SV32	riscv/encoding.h	/^#define SATP_MODE_SV32 /;"	d
SATP_MODE_SV39	riscv/encoding.h	/^#define SATP_MODE_SV39 /;"	d
SATP_MODE_SV48	riscv/encoding.h	/^#define SATP_MODE_SV48 /;"	d
SATP_MODE_SV57	riscv/encoding.h	/^#define SATP_MODE_SV57 /;"	d
SATP_MODE_SV64	riscv/encoding.h	/^#define SATP_MODE_SV64 /;"	d
SELECT_DR_SCAN	riscv/jtag_dtm.h	/^  SELECT_DR_SCAN,$/;"	e	enum:__anon58dfc25b0103
SELECT_IR_SCAN	riscv/jtag_dtm.h	/^  SELECT_IR_SCAN,$/;"	e	enum:__anon58dfc25b0103
SET	fesvr/dtm.cc	/^#define SET /;"	d	file:
SHAMT	riscv/decode.h	/^#define SHAMT /;"	d
SHIFT_DR	riscv/jtag_dtm.h	/^  SHIFT_DR,$/;"	e	enum:__anon58dfc25b0103
SHIFT_IR	riscv/jtag_dtm.h	/^  SHIFT_IR,$/;"	e	enum:__anon58dfc25b0103
SHORTNAME	fesvr/debug_defines.h	/^#define SHORTNAME /;"	d
SHORTNAME	riscv/debug_defines.h	/^#define SHORTNAME /;"	d
SHORTNAME_FIELD	fesvr/debug_defines.h	/^#define SHORTNAME_FIELD /;"	d
SHORTNAME_FIELD	riscv/debug_defines.h	/^#define SHORTNAME_FIELD /;"	d
SHORTNAME_FIELD_LENGTH	fesvr/debug_defines.h	/^#define SHORTNAME_FIELD_LENGTH /;"	d
SHORTNAME_FIELD_LENGTH	riscv/debug_defines.h	/^#define SHORTNAME_FIELD_LENGTH /;"	d
SHORTNAME_FIELD_OFFSET	fesvr/debug_defines.h	/^#define SHORTNAME_FIELD_OFFSET /;"	d
SHORTNAME_FIELD_OFFSET	riscv/debug_defines.h	/^#define SHORTNAME_FIELD_OFFSET /;"	d
SHT_NOBITS	fesvr/elf.h	/^#define SHT_NOBITS /;"	d
SIP_SSIP	riscv/encoding.h	/^#define SIP_SSIP /;"	d
SIP_STIP	riscv/encoding.h	/^#define SIP_STIP /;"	d
SOFTFLOAT_ENABLED	build/config.h	/^#define SOFTFLOAT_ENABLED /;"	d
SOFTFLOAT_FAST_DIV64TO32	softfloat/platform.h	/^#define SOFTFLOAT_FAST_DIV64TO32$/;"	d
SOFTFLOAT_FAST_INT64	softfloat/platform.h	/^#define SOFTFLOAT_FAST_INT64$/;"	d
SOFTFLOAT_ROUND_ODD	softfloat/platform.h	/^#define SOFTFLOAT_ROUND_ODD$/;"	d
SPIKE_MAIN_ENABLED	build/config.h	/^#define SPIKE_MAIN_ENABLED /;"	d
SRL	fesvr/dtm.cc	/^#define SRL(/;"	d	file:
SSTATUS32_SD	riscv/encoding.h	/^#define SSTATUS32_SD /;"	d
SSTATUS64_SD	riscv/encoding.h	/^#define SSTATUS64_SD /;"	d
SSTATUS_FS	riscv/encoding.h	/^#define SSTATUS_FS /;"	d
SSTATUS_MXR	riscv/encoding.h	/^#define SSTATUS_MXR /;"	d
SSTATUS_SD	riscv/encoding.h	/^# define SSTATUS_SD /;"	d
SSTATUS_SIE	riscv/encoding.h	/^#define SSTATUS_SIE /;"	d
SSTATUS_SPIE	riscv/encoding.h	/^#define SSTATUS_SPIE /;"	d
SSTATUS_SPP	riscv/encoding.h	/^#define SSTATUS_SPP /;"	d
SSTATUS_SUM	riscv/encoding.h	/^#define SSTATUS_SUM /;"	d
SSTATUS_UIE	riscv/encoding.h	/^#define SSTATUS_UIE /;"	d
SSTATUS_UPIE	riscv/encoding.h	/^#define SSTATUS_UPIE /;"	d
SSTATUS_UXL	riscv/encoding.h	/^#define SSTATUS_UXL /;"	d
SSTATUS_VS	riscv/encoding.h	/^#define SSTATUS_VS /;"	d
SSTATUS_VS_MASK	riscv/encoding.h	/^#define SSTATUS_VS_MASK /;"	d
SSTATUS_XS	riscv/encoding.h	/^#define SSTATUS_XS /;"	d
STATE	riscv/decode.h	/^#define STATE /;"	d
STATE	riscv/processor.cc	/^#define STATE /;"	d	file:
STDC_HEADERS	build/config.h	/^#define STDC_HEADERS /;"	d
STEP_NONE	riscv/processor.h	/^      STEP_NONE,$/;"	e	enum:state_t::__anon2b80edf10503
STEP_STEPPED	riscv/processor.h	/^      STEP_STEPPED$/;"	e	enum:state_t::__anon2b80edf10503
STEP_STEPPING	riscv/processor.h	/^      STEP_STEPPING,$/;"	e	enum:state_t::__anon2b80edf10503
STORE	fesvr/dtm.cc	/^#define STORE(/;"	d	file:
STORE	riscv/memtracer.h	/^  STORE,$/;"	e	enum:access_type
STOW	Makefile.in	/^STOW          := @stow@$/;"	m
STOW	build/Makefile	/^STOW          := @stow@$/;"	m
Simulating a New Instruction	README.md	/^Simulating a New Instruction$/;"	s
Spike	tests/testlib.py	/^class Spike(object):$/;"	c
Spike RISC-V ISA Simulator	README.md	/^Spike RISC-V ISA Simulator$/;"	c
T0	riscv/opcodes.h	/^#define T0 /;"	d
TARGET_ARCH	fesvr/htif.cc	/^# define TARGET_ARCH /;"	d	file:
TARGET_DIR	fesvr/htif.cc	/^# define TARGET_DIR /;"	d	file:
TBUFEND	fesvr/debug_defines.h	/^#define TBUFEND /;"	d
TBUFSTART	fesvr/debug_defines.h	/^#define TBUFSTART /;"	d
TBUFWRITE	fesvr/debug_defines.h	/^#define TBUFWRITE /;"	d
TEST_LOGIC_RESET	riscv/jtag_dtm.h	/^  TEST_LOGIC_RESET,$/;"	e	enum:__anon58dfc25b0103
THREAD_LOCAL	softfloat/softfloat.h	/^#define THREAD_LOCAL$/;"	d
THREAD_LOCAL	softfloat/softfloat_state.c	/^#define THREAD_LOCAL$/;"	d	file:
TLB_CHECK_TRIGGERS	riscv/mmu.h	/^  static const reg_t TLB_CHECK_TRIGGERS = reg_t(1) << 63;$/;"	m	class:mmu_t	typeref:typename:const reg_t
TLB_ENTRIES	riscv/mmu.h	/^  static const reg_t TLB_ENTRIES = 256;$/;"	m	class:mmu_t	typeref:typename:const reg_t
TRACE	fesvr/debug_defines.h	/^#define TRACE /;"	d
TRACE_DESTINATION	fesvr/debug_defines.h	/^#define TRACE_DESTINATION /;"	d
TRACE_DESTINATION_LENGTH	fesvr/debug_defines.h	/^#define TRACE_DESTINATION_LENGTH /;"	d
TRACE_DESTINATION_OFFSET	fesvr/debug_defines.h	/^#define TRACE_DESTINATION_OFFSET /;"	d
TRACE_DISCARD	fesvr/debug_defines.h	/^#define TRACE_DISCARD /;"	d
TRACE_DISCARD_LENGTH	fesvr/debug_defines.h	/^#define TRACE_DISCARD_LENGTH /;"	d
TRACE_DISCARD_OFFSET	fesvr/debug_defines.h	/^#define TRACE_DISCARD_OFFSET /;"	d
TRACE_EMITBRANCH	fesvr/debug_defines.h	/^#define TRACE_EMITBRANCH /;"	d
TRACE_EMITBRANCH_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITBRANCH_LENGTH /;"	d
TRACE_EMITBRANCH_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITBRANCH_OFFSET /;"	d
TRACE_EMITLOADADDR	fesvr/debug_defines.h	/^#define TRACE_EMITLOADADDR /;"	d
TRACE_EMITLOADADDR_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITLOADADDR_LENGTH /;"	d
TRACE_EMITLOADADDR_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITLOADADDR_OFFSET /;"	d
TRACE_EMITLOADDATA	fesvr/debug_defines.h	/^#define TRACE_EMITLOADDATA /;"	d
TRACE_EMITLOADDATA_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITLOADDATA_LENGTH /;"	d
TRACE_EMITLOADDATA_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITLOADDATA_OFFSET /;"	d
TRACE_EMITPC	fesvr/debug_defines.h	/^#define TRACE_EMITPC /;"	d
TRACE_EMITPC_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITPC_LENGTH /;"	d
TRACE_EMITPC_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITPC_OFFSET /;"	d
TRACE_EMITPRIV	fesvr/debug_defines.h	/^#define TRACE_EMITPRIV /;"	d
TRACE_EMITPRIV_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITPRIV_LENGTH /;"	d
TRACE_EMITPRIV_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITPRIV_OFFSET /;"	d
TRACE_EMITSTOREADDR	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREADDR /;"	d
TRACE_EMITSTOREADDR_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREADDR_LENGTH /;"	d
TRACE_EMITSTOREADDR_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREADDR_OFFSET /;"	d
TRACE_EMITSTOREDATA	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREDATA /;"	d
TRACE_EMITSTOREDATA_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREDATA_LENGTH /;"	d
TRACE_EMITSTOREDATA_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITSTOREDATA_OFFSET /;"	d
TRACE_EMITTIMESTAMP	fesvr/debug_defines.h	/^#define TRACE_EMITTIMESTAMP /;"	d
TRACE_EMITTIMESTAMP_LENGTH	fesvr/debug_defines.h	/^#define TRACE_EMITTIMESTAMP_LENGTH /;"	d
TRACE_EMITTIMESTAMP_OFFSET	fesvr/debug_defines.h	/^#define TRACE_EMITTIMESTAMP_OFFSET /;"	d
TRACE_FULLACTION	fesvr/debug_defines.h	/^#define TRACE_FULLACTION /;"	d
TRACE_FULLACTION_LENGTH	fesvr/debug_defines.h	/^#define TRACE_FULLACTION_LENGTH /;"	d
TRACE_FULLACTION_OFFSET	fesvr/debug_defines.h	/^#define TRACE_FULLACTION_OFFSET /;"	d
TRACE_STALL	fesvr/debug_defines.h	/^#define TRACE_STALL /;"	d
TRACE_STALL_LENGTH	fesvr/debug_defines.h	/^#define TRACE_STALL_LENGTH /;"	d
TRACE_STALL_OFFSET	fesvr/debug_defines.h	/^#define TRACE_STALL_OFFSET /;"	d
TRACE_SUPPORTED	fesvr/debug_defines.h	/^#define TRACE_SUPPORTED /;"	d
TRACE_SUPPORTED_LENGTH	fesvr/debug_defines.h	/^#define TRACE_SUPPORTED_LENGTH /;"	d
TRACE_SUPPORTED_OFFSET	fesvr/debug_defines.h	/^#define TRACE_SUPPORTED_OFFSET /;"	d
TRACE_WRAPPED	fesvr/debug_defines.h	/^#define TRACE_WRAPPED /;"	d
TRACE_WRAPPED_LENGTH	fesvr/debug_defines.h	/^#define TRACE_WRAPPED_LENGTH /;"	d
TRACE_WRAPPED_OFFSET	fesvr/debug_defines.h	/^#define TRACE_WRAPPED_OFFSET /;"	d
UINT_MAX	fdt/libfdt_env.h	/^#define UINT_MAX	/;"	d
UPDATE_DR	riscv/jtag_dtm.h	/^  UPDATE_DR,$/;"	e	enum:__anon58dfc25b0103
UPDATE_IR	riscv/jtag_dtm.h	/^  UPDATE_IR$/;"	e	enum:__anon58dfc25b0103
USE_UCONTEXT	fesvr/context.h	/^# define USE_UCONTEXT$/;"	d
USTATUS_UIE	riscv/encoding.h	/^#define USTATUS_UIE /;"	d
USTATUS_UPIE	riscv/encoding.h	/^#define USTATUS_UPIE /;"	d
VALID	riscv/cachesim.h	/^  static const uint64_t VALID = 1ULL << 63;$/;"	m	class:cache_sim_t	typeref:typename:const uint64_t
VCSR_VXRM	riscv/decode.h	/^#define VCSR_VXRM /;"	d
VCSR_VXRM_SHIFT	riscv/decode.h	/^#define VCSR_VXRM_SHIFT /;"	d
VCSR_VXSAT	riscv/decode.h	/^#define VCSR_VXSAT /;"	d
VCSR_VXSAT_SHIFT	riscv/decode.h	/^#define VCSR_VXSAT_SHIFT /;"	d
VIRT_PRIV	fesvr/debug_defines.h	/^#define VIRT_PRIV /;"	d
VIRT_PRIV	riscv/debug_defines.h	/^#define VIRT_PRIV /;"	d
VIRT_PRIV_PRV	fesvr/debug_defines.h	/^#define VIRT_PRIV_PRV /;"	d
VIRT_PRIV_PRV	riscv/debug_defines.h	/^#define VIRT_PRIV_PRV /;"	d
VIRT_PRIV_PRV_LENGTH	fesvr/debug_defines.h	/^#define VIRT_PRIV_PRV_LENGTH /;"	d
VIRT_PRIV_PRV_LENGTH	riscv/debug_defines.h	/^#define VIRT_PRIV_PRV_LENGTH /;"	d
VIRT_PRIV_PRV_OFFSET	fesvr/debug_defines.h	/^#define VIRT_PRIV_PRV_OFFSET /;"	d
VIRT_PRIV_PRV_OFFSET	riscv/debug_defines.h	/^#define VIRT_PRIV_PRV_OFFSET /;"	d
VI_AMO	riscv/decode.h	/^#define VI_AMO(/;"	d
VI_CHECK_DDS	riscv/decode.h	/^#define VI_CHECK_DDS(/;"	d
VI_CHECK_DSS	riscv/decode.h	/^#define VI_CHECK_DSS(/;"	d
VI_CHECK_LD_INDEX	riscv/decode.h	/^#define VI_CHECK_LD_INDEX(/;"	d
VI_CHECK_LOAD	riscv/decode.h	/^#define VI_CHECK_LOAD(/;"	d
VI_CHECK_MSS	riscv/decode.h	/^#define VI_CHECK_MSS(/;"	d
VI_CHECK_QSS	riscv/decode.h	/^#define VI_CHECK_QSS(/;"	d
VI_CHECK_REDUCTION	riscv/decode.h	/^#define VI_CHECK_REDUCTION(/;"	d
VI_CHECK_SDS	riscv/decode.h	/^#define VI_CHECK_SDS(/;"	d
VI_CHECK_SLIDE	riscv/decode.h	/^#define VI_CHECK_SLIDE(/;"	d
VI_CHECK_SSS	riscv/decode.h	/^#define VI_CHECK_SSS(/;"	d
VI_CHECK_STORE	riscv/decode.h	/^#define VI_CHECK_STORE(/;"	d
VI_CHECK_ST_INDEX	riscv/decode.h	/^#define VI_CHECK_ST_INDEX(/;"	d
VI_CMP_PARAMS	riscv/decode.h	/^#define VI_CMP_PARAMS(/;"	d
VI_DUPLICATE_VREG	riscv/decode.h	/^#define VI_DUPLICATE_VREG(/;"	d
VI_ELEMENT_SKIP	riscv/decode.h	/^#define VI_ELEMENT_SKIP(/;"	d
VI_GENERAL_LOOP_BASE	riscv/decode.h	/^#define VI_GENERAL_LOOP_BASE /;"	d
VI_LD	riscv/decode.h	/^#define VI_LD(/;"	d
VI_LDST_FF	riscv/decode.h	/^#define VI_LDST_FF(/;"	d
VI_LD_INDEX	riscv/decode.h	/^#define VI_LD_INDEX(/;"	d
VI_LD_WHOLE	riscv/decode.h	/^#define VI_LD_WHOLE(/;"	d
VI_LOOP_BASE	riscv/decode.h	/^#define VI_LOOP_BASE /;"	d
VI_LOOP_CMP_BASE	riscv/decode.h	/^#define VI_LOOP_CMP_BASE /;"	d
VI_LOOP_CMP_END	riscv/decode.h	/^#define VI_LOOP_CMP_END /;"	d
VI_LOOP_ELEMENT_SKIP	riscv/decode.h	/^#define VI_LOOP_ELEMENT_SKIP(/;"	d
VI_LOOP_END	riscv/decode.h	/^#define VI_LOOP_END /;"	d
VI_LOOP_MASK	riscv/decode.h	/^#define VI_LOOP_MASK(/;"	d
VI_LOOP_NSHIFT_BASE	riscv/decode.h	/^#define VI_LOOP_NSHIFT_BASE /;"	d
VI_LOOP_REDUCTION_BASE	riscv/decode.h	/^#define VI_LOOP_REDUCTION_BASE(/;"	d
VI_LOOP_REDUCTION_END	riscv/decode.h	/^#define VI_LOOP_REDUCTION_END(/;"	d
VI_LOOP_WIDE_REDUCTION_BASE	riscv/decode.h	/^#define VI_LOOP_WIDE_REDUCTION_BASE(/;"	d
VI_MASK_VARS	riscv/decode.h	/^#define VI_MASK_VARS /;"	d
VI_NARROW_CHECK_COMMON	riscv/decode.h	/^#define VI_NARROW_CHECK_COMMON /;"	d
VI_NARROW_SHIFT	riscv/decode.h	/^#define VI_NARROW_SHIFT(/;"	d
VI_NSHIFT_PARAMS	riscv/decode.h	/^#define VI_NSHIFT_PARAMS(/;"	d
VI_PARAMS	riscv/decode.h	/^#define VI_PARAMS(/;"	d
VI_QUAD_OP_AND_ASSIGN	riscv/decode.h	/^#define VI_QUAD_OP_AND_ASSIGN(/;"	d
VI_QUAD_OP_AND_ASSIGN_MIX	riscv/decode.h	/^#define VI_QUAD_OP_AND_ASSIGN_MIX(/;"	d
VI_ST	riscv/decode.h	/^#define VI_ST(/;"	d
VI_STRIP	riscv/decode.h	/^#define VI_STRIP(/;"	d
VI_ST_INDEX	riscv/decode.h	/^#define VI_ST_INDEX(/;"	d
VI_ST_WHOLE	riscv/decode.h	/^#define VI_ST_WHOLE /;"	d
VI_UCMP_PARAMS	riscv/decode.h	/^#define VI_UCMP_PARAMS(/;"	d
VI_ULOOP_REDUCTION_BASE	riscv/decode.h	/^#define VI_ULOOP_REDUCTION_BASE(/;"	d
VI_ULOOP_WIDE_REDUCTION_BASE	riscv/decode.h	/^#define VI_ULOOP_WIDE_REDUCTION_BASE(/;"	d
VI_U_PARAMS	riscv/decode.h	/^#define VI_U_PARAMS(/;"	d
VI_VFP_COMMON	riscv/decode.h	/^#define VI_VFP_COMMON /;"	d
VI_VFP_CVT_SCALE	riscv/decode.h	/^#define VI_VFP_CVT_SCALE(/;"	d
VI_VFP_LOOP_BASE	riscv/decode.h	/^#define VI_VFP_LOOP_BASE /;"	d
VI_VFP_LOOP_CMP	riscv/decode.h	/^#define VI_VFP_LOOP_CMP(/;"	d
VI_VFP_LOOP_CMP_BASE	riscv/decode.h	/^#define VI_VFP_LOOP_CMP_BASE /;"	d
VI_VFP_LOOP_CMP_END	riscv/decode.h	/^#define VI_VFP_LOOP_CMP_END /;"	d
VI_VFP_LOOP_END	riscv/decode.h	/^#define VI_VFP_LOOP_END /;"	d
VI_VFP_LOOP_REDUCTION_BASE	riscv/decode.h	/^#define VI_VFP_LOOP_REDUCTION_BASE(/;"	d
VI_VFP_LOOP_REDUCTION_END	riscv/decode.h	/^#define VI_VFP_LOOP_REDUCTION_END(/;"	d
VI_VFP_LOOP_SCALE_BASE	riscv/decode.h	/^#define VI_VFP_LOOP_SCALE_BASE /;"	d
VI_VFP_LOOP_WIDE_REDUCTION_BASE	riscv/decode.h	/^#define VI_VFP_LOOP_WIDE_REDUCTION_BASE /;"	d
VI_VFP_VF_LOOP	riscv/decode.h	/^#define VI_VFP_VF_LOOP(/;"	d
VI_VFP_VF_LOOP_WIDE	riscv/decode.h	/^#define VI_VFP_VF_LOOP_WIDE(/;"	d
VI_VFP_VV_LOOP	riscv/decode.h	/^#define VI_VFP_VV_LOOP(/;"	d
VI_VFP_VV_LOOP_REDUCTION	riscv/decode.h	/^#define VI_VFP_VV_LOOP_REDUCTION(/;"	d
VI_VFP_VV_LOOP_WIDE	riscv/decode.h	/^#define VI_VFP_VV_LOOP_WIDE(/;"	d
VI_VFP_VV_LOOP_WIDE_REDUCTION	riscv/decode.h	/^#define VI_VFP_VV_LOOP_WIDE_REDUCTION(/;"	d
VI_VFP_V_LOOP	riscv/decode.h	/^#define VI_VFP_V_LOOP(/;"	d
VI_VFP_WF_LOOP_WIDE	riscv/decode.h	/^#define VI_VFP_WF_LOOP_WIDE(/;"	d
VI_VFP_WV_LOOP_WIDE	riscv/decode.h	/^#define VI_VFP_WV_LOOP_WIDE(/;"	d
VI_VI_LOOP	riscv/decode.h	/^#define VI_VI_LOOP(/;"	d
VI_VI_LOOP_CMP	riscv/decode.h	/^#define VI_VI_LOOP_CMP(/;"	d
VI_VI_LOOP_NSHIFT	riscv/decode.h	/^#define VI_VI_LOOP_NSHIFT(/;"	d
VI_VI_ULOOP	riscv/decode.h	/^#define VI_VI_ULOOP(/;"	d
VI_VI_ULOOP_CMP	riscv/decode.h	/^#define VI_VI_ULOOP_CMP(/;"	d
VI_VVXI_LOOP_NARROW	riscv/decode.h	/^#define VI_VVXI_LOOP_NARROW(/;"	d
VI_VVXI_MERGE_LOOP	riscv/decode.h	/^#define VI_VVXI_MERGE_LOOP(/;"	d
VI_VVX_LOOP_AVG	riscv/decode.h	/^#define VI_VVX_LOOP_AVG(/;"	d
VI_VVX_ULOOP_AVG	riscv/decode.h	/^#define VI_VVX_ULOOP_AVG(/;"	d
VI_VV_EXT	riscv/decode.h	/^#define VI_VV_EXT(/;"	d
VI_VV_LOOP	riscv/decode.h	/^#define VI_VV_LOOP(/;"	d
VI_VV_LOOP_CARRY	riscv/decode.h	/^#define VI_VV_LOOP_CARRY(/;"	d
VI_VV_LOOP_CMP	riscv/decode.h	/^#define VI_VV_LOOP_CMP(/;"	d
VI_VV_LOOP_NARROW	riscv/decode.h	/^#define VI_VV_LOOP_NARROW(/;"	d
VI_VV_LOOP_NSHIFT	riscv/decode.h	/^#define VI_VV_LOOP_NSHIFT(/;"	d
VI_VV_LOOP_QUAD	riscv/decode.h	/^#define VI_VV_LOOP_QUAD(/;"	d
VI_VV_LOOP_REDUCTION	riscv/decode.h	/^#define VI_VV_LOOP_REDUCTION(/;"	d
VI_VV_LOOP_WIDEN	riscv/decode.h	/^#define VI_VV_LOOP_WIDEN(/;"	d
VI_VV_LOOP_WIDE_REDUCTION	riscv/decode.h	/^#define VI_VV_LOOP_WIDE_REDUCTION(/;"	d
VI_VV_LOOP_WITH_CARRY	riscv/decode.h	/^#define VI_VV_LOOP_WITH_CARRY(/;"	d
VI_VV_ULOOP	riscv/decode.h	/^#define VI_VV_ULOOP(/;"	d
VI_VV_ULOOP_CMP	riscv/decode.h	/^#define VI_VV_ULOOP_CMP(/;"	d
VI_VV_ULOOP_REDUCTION	riscv/decode.h	/^#define VI_VV_ULOOP_REDUCTION(/;"	d
VI_VV_ULOOP_WIDE_REDUCTION	riscv/decode.h	/^#define VI_VV_ULOOP_WIDE_REDUCTION(/;"	d
VI_VX_LOOP	riscv/decode.h	/^#define VI_VX_LOOP(/;"	d
VI_VX_LOOP_CMP	riscv/decode.h	/^#define VI_VX_LOOP_CMP(/;"	d
VI_VX_LOOP_NSHIFT	riscv/decode.h	/^#define VI_VX_LOOP_NSHIFT(/;"	d
VI_VX_LOOP_QUAD	riscv/decode.h	/^#define VI_VX_LOOP_QUAD(/;"	d
VI_VX_LOOP_WIDEN	riscv/decode.h	/^#define VI_VX_LOOP_WIDEN(/;"	d
VI_VX_ULOOP	riscv/decode.h	/^#define VI_VX_ULOOP(/;"	d
VI_VX_ULOOP_CMP	riscv/decode.h	/^#define VI_VX_ULOOP_CMP(/;"	d
VI_WIDE_CHECK_COMMON	riscv/decode.h	/^#define VI_WIDE_CHECK_COMMON /;"	d
VI_WIDE_OP_AND_ASSIGN	riscv/decode.h	/^#define VI_WIDE_OP_AND_ASSIGN(/;"	d
VI_WIDE_OP_AND_ASSIGN_MIX	riscv/decode.h	/^#define VI_WIDE_OP_AND_ASSIGN_MIX(/;"	d
VI_WIDE_WVX_OP	riscv/decode.h	/^#define VI_WIDE_WVX_OP(/;"	d
VI_XI_LOOP_CARRY	riscv/decode.h	/^#define VI_XI_LOOP_CARRY(/;"	d
VI_XI_LOOP_WITH_CARRY	riscv/decode.h	/^#define VI_XI_LOOP_WITH_CARRY(/;"	d
VI_XI_SLIDEDOWN_PARAMS	riscv/decode.h	/^#define VI_XI_SLIDEDOWN_PARAMS(/;"	d
VI_XI_SLIDEUP_PARAMS	riscv/decode.h	/^#define VI_XI_SLIDEUP_PARAMS(/;"	d
VLEN	riscv/processor.h	/^      reg_t ELEN, VLEN;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
VPATH	Makefile.in	/^VPATH := $(addprefix $(src_dir)\/, $(sprojs_enabled))$/;"	m
VPATH	build/Makefile	/^VPATH := $(addprefix $(src_dir)\/, $(sprojs_enabled))$/;"	m
VRM	riscv/processor.h	/^enum VRM{$/;"	g
VU	riscv/processor.h	/^  vectorUnit_t VU;$/;"	m	class:processor_t	typeref:typename:vectorUnit_t
VV_CARRY_PARAMS	riscv/decode.h	/^#define VV_CARRY_PARAMS(/;"	d
VV_CMP_PARAMS	riscv/decode.h	/^#define VV_CMP_PARAMS(/;"	d
VV_NSHIFT_PARAMS	riscv/decode.h	/^#define VV_NSHIFT_PARAMS(/;"	d
VV_PARAMS	riscv/decode.h	/^#define VV_PARAMS(/;"	d
VV_UCMP_PARAMS	riscv/decode.h	/^#define VV_UCMP_PARAMS(/;"	d
VV_U_PARAMS	riscv/decode.h	/^#define VV_U_PARAMS(/;"	d
VV_WITH_CARRY_PARAMS	riscv/decode.h	/^#define VV_WITH_CARRY_PARAMS(/;"	d
VXI_PARAMS	riscv/decode.h	/^#define VXI_PARAMS(/;"	d
VX_CMP_PARAMS	riscv/decode.h	/^#define VX_CMP_PARAMS(/;"	d
VX_NSHIFT_PARAMS	riscv/decode.h	/^#define VX_NSHIFT_PARAMS(/;"	d
VX_PARAMS	riscv/decode.h	/^#define VX_PARAMS(/;"	d
VX_UCMP_PARAMS	riscv/decode.h	/^#define VX_UCMP_PARAMS(/;"	d
VX_U_PARAMS	riscv/decode.h	/^#define VX_U_PARAMS(/;"	d
Version 1.0.0 (2019-03-30)	ChangeLog.md	/^Version 1.0.0 (2019-03-30)$/;"	s
Version 1.0.1-dev	ChangeLog.md	/^Version 1.0.1-dev$/;"	s
Versioning and APIs	README.md	/^Versioning and APIs$/;"	s
WIDE_REDUCTION_LOOP	riscv/decode.h	/^#define WIDE_REDUCTION_LOOP(/;"	d
WIDE_REDUCTION_ULOOP	riscv/decode.h	/^#define WIDE_REDUCTION_ULOOP(/;"	d
WORDS_BIGENDIAN	build/config.h	/^#  define WORDS_BIGENDIAN /;"	d
WORDS_BIGENDIAN	config.h.in	/^#  define WORDS_BIGENDIAN /;"	d	file:
WRITE	fesvr/dtm.cc	/^#define WRITE /;"	d	file:
WRITE_FRD	riscv/decode.h	/^#define WRITE_FRD(/;"	d
WRITE_FREG	riscv/decode.h	/^# define WRITE_FREG(/;"	d
WRITE_MEM	riscv/mmu.h	/^# define WRITE_MEM(/;"	d
WRITE_RD	riscv/decode.h	/^#define WRITE_RD(/;"	d
WRITE_REG	riscv/decode.h	/^# define WRITE_REG(/;"	d
WRITE_RVC_FRS2S	riscv/decode.h	/^#define WRITE_RVC_FRS2S(/;"	d
WRITE_RVC_RS1S	riscv/decode.h	/^#define WRITE_RVC_RS1S(/;"	d
WRITE_RVC_RS2S	riscv/decode.h	/^#define WRITE_RVC_RS2S(/;"	d
WRITE_VSTATUS	riscv/decode.h	/^# define WRITE_VSTATUS /;"	d
WRITE_VSTATUS	riscv/decode.h	/^# define WRITE_VSTATUS$/;"	d
X0	fesvr/dtm.cc	/^#define X0 /;"	d	file:
XI_CARRY_PARAMS	riscv/decode.h	/^#define XI_CARRY_PARAMS(/;"	d
XI_WITH_CARRY_PARAMS	riscv/decode.h	/^#define XI_WITH_CARRY_PARAMS(/;"	d
XPR	riscv/processor.h	/^  regfile_t<reg_t, NXPR, true> XPR;$/;"	m	struct:state_t	typeref:typename:regfile_t<reg_t,NXPR,true>
XV_PARAMS	riscv/decode.h	/^#define XV_PARAMS(/;"	d
X_RA	riscv/decode.h	/^#define X_RA /;"	d
X_SP	riscv/decode.h	/^#define X_SP /;"	d
ZERO	riscv/opcodes.h	/^#define ZERO	/;"	d
[^	configure	/^s\/^ \\('"$ac_word_re"'\\)\\(([^()]*)\\)[	 ]*\\(.*\\)\/P["\\1"]="\\2"\\$/;"	f
_ACAWK	build/config.status	/^cat >>"$ac_tmp\/subs1.awk" <<_ACAWK &&$/;"	h
_ACEOF	configure	/^	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^      cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^    cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^   cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^  cat <<_ACEOF$/;"	h
_ACEOF	configure	/^  cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	configure	/^  cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ACEOF	configure	/^cat >&5 <<_ACEOF$/;"	h
_ACEOF	configure	/^cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1$/;"	h
_ACEOF	configure	/^cat >>confdefs.h <<_ACEOF$/;"	h
_ACEOF	configure	/^cat >config.log <<_ACEOF$/;"	h
_ACEOF	configure	/^cat confdefs.h - <<_ACEOF >conftest.$ac_ext$/;"	h
_ASBOX	build/config.status	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASBOX	configure	/^  sed 'h;s\/.\/-\/g;s\/^...\/## \/;s\/...$\/ ##\/;p;x;p;x' <<_ASBOX$/;"	h
_ASEOF	configure	/^cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1$/;"	h
_ASUNAME	configure	/^cat <<_ASUNAME$/;"	h
_DEVICE_H	fesvr/device.h	/^#define _DEVICE_H$/;"	d
_ELFLOADER_H	fesvr/elfloader.h	/^#define _ELFLOADER_H$/;"	d
_ELF_H	fesvr/elf.h	/^#define _ELF_H$/;"	d
_HTIF_CONTEXT_H	fesvr/context.h	/^#define _HTIF_CONTEXT_H$/;"	d
_HTIF_PTHREAD_H	fesvr/htif_pthread.h	/^#define _HTIF_PTHREAD_H$/;"	d
_MEMTRACER_H	riscv/memtracer.h	/^#define _MEMTRACER_H$/;"	d
_OPTION_PARSER_H	fesvr/option_parser.h	/^#define _OPTION_PARSER_H$/;"	d
_RFB_H	fesvr/rfb.h	/^#define _RFB_H$/;"	d
_RISCV_ARITH_H	riscv/arith.h	/^#define _RISCV_ARITH_H$/;"	d
_RISCV_BYTEORDER_H	riscv/byteorder.h	/^#define _RISCV_BYTEORDER_H$/;"	d
_RISCV_CACHE_SIM_H	riscv/cachesim.h	/^#define _RISCV_CACHE_SIM_H$/;"	d
_RISCV_COMMON_H	riscv/common.h	/^#define _RISCV_COMMON_H$/;"	d
_RISCV_COPROCESSOR_H	riscv/extension.h	/^#define _RISCV_COPROCESSOR_H$/;"	d
_RISCV_DEBUG_MODULE_H	riscv/debug_module.h	/^#define _RISCV_DEBUG_MODULE_H$/;"	d
_RISCV_DECODE_H	riscv/decode.h	/^#define _RISCV_DECODE_H$/;"	d
_RISCV_DEVICES_H	riscv/devices.h	/^#define _RISCV_DEVICES_H$/;"	d
_RISCV_DISASM_H	riscv/disasm.h	/^#define _RISCV_DISASM_H$/;"	d
_RISCV_DTS_H	riscv/dts.h	/^#define _RISCV_DTS_H$/;"	d
_RISCV_LOGFILE_H	riscv/log_file.h	/^#define _RISCV_LOGFILE_H$/;"	d
_RISCV_MMIO_PLUGIN_H	riscv/mmio_plugin.h	/^#define _RISCV_MMIO_PLUGIN_H$/;"	d
_RISCV_MMU_H	riscv/mmu.h	/^#define _RISCV_MMU_H$/;"	d
_RISCV_PROCESSOR_H	riscv/processor.h	/^#define _RISCV_PROCESSOR_H$/;"	d
_RISCV_ROCC_H	riscv/rocc.h	/^#define _RISCV_ROCC_H$/;"	d
_RISCV_SIMIF_H	riscv/simif.h	/^#define _RISCV_SIMIF_H$/;"	d
_RISCV_SIM_H	riscv/sim.h	/^#define _RISCV_SIM_H$/;"	d
_RISCV_TRACER_H	riscv/tracer.h	/^#define _RISCV_TRACER_H$/;"	d
_RISCV_TRAP_H	riscv/trap.h	/^#define _RISCV_TRAP_H$/;"	d
_ROCKET_DTM_H	fesvr/dtm.h	/^#define _ROCKET_DTM_H$/;"	d
_TERM_H	fesvr/term.h	/^#define _TERM_H$/;"	d
__HTIF_H	fesvr/htif.h	/^#define __HTIF_H$/;"	d
__HTIF_HEXWRITER_H	fesvr/htif_hexwriter.h	/^#define __HTIF_HEXWRITER_H$/;"	d
__MEMIF_H	fesvr/memif.h	/^#define __MEMIF_H$/;"	d
__SAI_H	fesvr/tsi.h	/^#define __SAI_H$/;"	d
__SYSCALL_H	fesvr/syscall.h	/^#define __SYSCALL_H$/;"	d
__anon0a0c89c2010a	softfloat/s_roundToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	u	function:softfloat_roundToI32	file:
__anon0a0e3767010a	softfloat/s_roundToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	u	function:softfloat_roundToI64	file:
__anon0bf157d10102	riscv/insns/amomax_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](int64_t lhs) { return std::max(lhs, int64_t(RS2)); }));$/;"	f	file:
__anon0bf1a8a40102	riscv/insns/amomax_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](int32_t lhs) { return std::max(lhs, int32_t(RS2)); })));$/;"	f	file:
__anon11a0ef14010a	softfloat/s_roundMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	u	function:softfloat_roundMToI64	file:
__anon1de5a7cf0102	riscv/insns/amomin_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](int64_t lhs) { return std::min(lhs, int64_t(RS2)); }));$/;"	f	file:
__anon1de5f8a20102	riscv/insns/amomin_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](int32_t lhs) { return std::min(lhs, int32_t(RS2)); })));$/;"	f	file:
__anon1e23afd90108	customext/cflush.cc	/^struct : public arg_t {$/;"	s	file:
__anon1e23afd90202	customext/cflush.cc	/^REGISTER_EXTENSION(cflush, []() { return new cflush_t; })$/;"	f	file:
__anon2b80edf10108	riscv/processor.h	/^{$/;"	s
__anon2b80edf10203	riscv/processor.h	/^{$/;"	g
__anon2b80edf10303	riscv/processor.h	/^{$/;"	g
__anon2b80edf10408	riscv/processor.h	/^{$/;"	s
__anon2b80edf10503	riscv/processor.h	/^  enum {$/;"	g	struct:state_t
__anon2b80edf10603	riscv/processor.h	/^typedef enum {$/;"	g
__anon2b80edf10703	riscv/processor.h	/^typedef enum {$/;"	g
__anon2b80edf10803	riscv/processor.h	/^  enum {$/;"	g	class:processor_t
__anon3faf43cc0103	softfloat/internals.h	/^enum {$/;"	g
__anon52f85d6e0103	softfloat/softfloat.h	/^enum {$/;"	g
__anon52f85d6e0203	softfloat/softfloat.h	/^enum {$/;"	g
__anon52f85d6e0303	softfloat/softfloat.h	/^enum {$/;"	g
__anon58dfc25b0103	riscv/jtag_dtm.h	/^typedef enum {$/;"	g
__anon5c7e8f3d0108	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0208	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0308	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0408	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0508	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0608	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon5c7e8f3d0708	riscv/debug_module.h	/^typedef struct {$/;"	s
__anon712742360102	spike_dasm/spike-dasm.cc	/^  parser.option(0, "extension", 1, [&](const char* s){extension = find_extension(s);});$/;"	f	function:main	file:
__anon712742360202	spike_dasm/spike-dasm.cc	/^  parser.option(0, "isa", 1, [&](const char* s){isa = s;});$/;"	f	function:main	file:
__anon73aaf2060102	customext/dummy_rocc.cc	/^REGISTER_EXTENSION(dummy_rocc, []() { return new dummy_rocc_t; })$/;"	f	file:
__anon74d80d790103	riscv/jtag_dtm.cc	/^enum {$/;"	g	file:
__anon75cc0e940102	riscv/insns/amoadd_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return lhs + RS2; }));$/;"	f	file:
__anon75cc5f670102	riscv/insns/amoadd_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return lhs + RS2; })));$/;"	f	file:
__anon7aed99e40102	riscv/insns/amoxor_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return lhs ^ RS2; }));$/;"	f	file:
__anon7aedeab70102	riscv/insns/amoxor_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return lhs ^ RS2; })));$/;"	f	file:
__anon7cb3a2a60102	riscv/insns/amoswap_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return RS2; }));$/;"	f	file:
__anon7cb3f3790102	riscv/insns/amoswap_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return RS2; })));$/;"	f	file:
__anon82cf23240102	spike_main/spike.cc	/^  auto const hartids_parser = [&](const char *s) {$/;"	f	function:main	file:
__anon82cf23240202	spike_main/spike.cc	/^  auto const device_parser = [&plugin_devices](const char *s) {$/;"	f	function:main	file:
__anon82cf23240302	spike_main/spike.cc	/^  parser.option('h', "help", 0, [&](const char* s){help(0);});$/;"	f	function:main	file:
__anon82cf23240402	spike_main/spike.cc	/^  parser.option('d', 0, 0, [&](const char* s){debug = true;});$/;"	f	function:main	file:
__anon82cf23240502	spike_main/spike.cc	/^  parser.option('g', 0, 0, [&](const char* s){histogram = true;});$/;"	f	function:main	file:
__anon82cf23240602	spike_main/spike.cc	/^  parser.option('l', 0, 0, [&](const char* s){log = true;});$/;"	f	function:main	file:
__anon82cf23240702	spike_main/spike.cc	/^  parser.option('p', 0, 1, [&](const char* s){nprocs = atoul_nonzero_safe(s);});$/;"	f	function:main	file:
__anon82cf23240802	spike_main/spike.cc	/^  parser.option('m', 0, 1, [&](const char* s){mems = make_mems(s);});$/;"	f	function:main	file:
__anon82cf23240902	spike_main/spike.cc	/^  parser.option('H', 0, 0, [&](const char* s){halted = true;});$/;"	f	function:main	file:
__anon82cf23240a02	spike_main/spike.cc	/^  parser.option(0, "rbb-port", 1, [&](const char* s){use_rbb = true; rbb_port = atoul_safe(s);})/;"	f	function:main	file:
__anon82cf23240b02	spike_main/spike.cc	/^  parser.option(0, "pc", 1, [&](const char* s){start_pc = strtoull(s, 0, 0);});$/;"	f	function:main	file:
__anon82cf23240c02	spike_main/spike.cc	/^  parser.option(0, "ic", 1, [&](const char* s){ic.reset(new icache_sim_t(s));});$/;"	f	function:main	file:
__anon82cf23240d02	spike_main/spike.cc	/^  parser.option(0, "dc", 1, [&](const char* s){dc.reset(new dcache_sim_t(s));});$/;"	f	function:main	file:
__anon82cf23240e02	spike_main/spike.cc	/^  parser.option(0, "l2", 1, [&](const char* s){l2.reset(cache_sim_t::construct(s, "L2$"));});$/;"	f	function:main	file:
__anon82cf23240f02	spike_main/spike.cc	/^  parser.option(0, "log-cache-miss", 0, [&](const char* s){log_cache = true;});$/;"	f	function:main	file:
__anon82cf23241002	spike_main/spike.cc	/^  parser.option(0, "isa", 1, [&](const char* s){isa = s;});$/;"	f	function:main	file:
__anon82cf23241102	spike_main/spike.cc	/^  parser.option(0, "priv", 1, [&](const char* s){priv = s;});$/;"	f	function:main	file:
__anon82cf23241202	spike_main/spike.cc	/^  parser.option(0, "varch", 1, [&](const char* s){varch = s;});$/;"	f	function:main	file:
__anon82cf23241302	spike_main/spike.cc	/^  parser.option(0, "extension", 1, [&](const char* s){extension = find_extension(s);});$/;"	f	function:main	file:
__anon82cf23241402	spike_main/spike.cc	/^  parser.option(0, "dump-dts", 0, [&](const char *s){dump_dts = true;});$/;"	f	function:main	file:
__anon82cf23241502	spike_main/spike.cc	/^  parser.option(0, "disable-dtb", 0, [&](const char *s){dtb_enabled = false;});$/;"	f	function:main	file:
__anon82cf23241602	spike_main/spike.cc	/^  parser.option(0, "dtb", 1, [&](const char *s){dtb_file = s;});$/;"	f	function:main	file:
__anon82cf23241702	spike_main/spike.cc	/^  parser.option(0, "kernel", 1, [&](const char* s){kernel = s;});$/;"	f	function:main	file:
__anon82cf23241802	spike_main/spike.cc	/^  parser.option(0, "initrd", 1, [&](const char* s){initrd = s;});$/;"	f	function:main	file:
__anon82cf23241902	spike_main/spike.cc	/^  parser.option(0, "bootargs", 1, [&](const char* s){bootargs = s;});$/;"	f	function:main	file:
__anon82cf23241a02	spike_main/spike.cc	/^  parser.option(0, "real-time-clint", 0, [&](const char *s){real_time_clint = true;});$/;"	f	function:main	file:
__anon82cf23241b02	spike_main/spike.cc	/^  parser.option(0, "extlib", 1, [&](const char *s){$/;"	f	function:main	file:
__anon82cf23241c02	spike_main/spike.cc	/^      [&](const char* s){dm_config.progbufsize = atoul_safe(s);});$/;"	f	function:main	file:
__anon82cf23241d02	spike_main/spike.cc	/^      [&](const char* s){dm_config.support_impebreak = false;});$/;"	f	function:main	file:
__anon82cf23241e02	spike_main/spike.cc	/^      [&](const char* s){dm_config.max_bus_master_bits = atoul_safe(s);});$/;"	f	function:main	file:
__anon82cf23241f02	spike_main/spike.cc	/^      [&](const char* s){dm_config.require_authentication = true;});$/;"	f	function:main	file:
__anon82cf23242002	spike_main/spike.cc	/^      [&](const char* s){dmi_rti = atoul_safe(s);});$/;"	f	function:main	file:
__anon82cf23242102	spike_main/spike.cc	/^      [&](const char* s){dm_config.abstract_rti = atoul_safe(s);});$/;"	f	function:main	file:
__anon82cf23242202	spike_main/spike.cc	/^      [&](const char* s){dm_config.support_hasel = false;});$/;"	f	function:main	file:
__anon82cf23242302	spike_main/spike.cc	/^      [&](const char* s){dm_config.support_abstract_csr_access = false;});$/;"	f	function:main	file:
__anon82cf23242402	spike_main/spike.cc	/^      [&](const char* s){dm_config.support_haltgroups = false;});$/;"	f	function:main	file:
__anon82cf23242502	spike_main/spike.cc	/^                [&](const char* s){log_commits = true;});$/;"	f	function:main	file:
__anon82cf23242602	spike_main/spike.cc	/^                [&](const char* s){log_path = s;});$/;"	f	function:main	file:
__anon8ba88dc60102	riscv/insns/amomaxu_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return std::max(lhs, RS2); }));$/;"	f	file:
__anon8ba8de990102	riscv/insns/amomaxu_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return std::max(lhs, uint32_t(RS2)); }))/;"	f	file:
__anon8d1fa4de0102	riscv/insns/amoand_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return lhs & RS2; }));$/;"	f	file:
__anon8d1ff5b10102	riscv/insns/amoand_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return lhs & RS2; })));$/;"	f	file:
__anon91cfd92c0102	riscv/insns/amoor_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return lhs | RS2; }));$/;"	f	file:
__anon91d029ff0102	riscv/insns/amoor_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return lhs | RS2; })));$/;"	f	file:
__anon961b4d0a0108	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0208	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0308	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0408	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0508	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0608	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0708	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0808	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0908	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0a08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0b08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0c08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0d08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0e08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a0f08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1008	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1108	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1208	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1308	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1408	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1508	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1608	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1708	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1808	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1908	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1a08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1b08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1c08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1d08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1e08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a1f08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2008	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2108	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2208	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2308	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2408	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2508	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2608	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2708	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2808	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2908	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2a08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2b08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2c08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2d08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2e08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a2f08	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a3008	disasm/disasm.cc	/^struct : public arg_t {$/;"	s	file:
__anon961b4d0a3108	disasm/disasm.cc	/^typedef struct {$/;"	s	file:
__anon9d3644870108	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9d3644870208	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9d3644870308	fesvr/elf.h	/^{$/;"	s
__anon9d3644870408	fesvr/elf.h	/^{$/;"	s
__anon9d3644870508	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9d3644870608	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9d3644870708	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9d3644870808	fesvr/elf.h	/^typedef struct {$/;"	s
__anon9f490e620108	softfloat/softfloat_types.h	/^typedef struct { uint16_t v; } float16_t;$/;"	s
__anon9f490e620208	softfloat/softfloat_types.h	/^typedef struct { uint32_t v; } float32_t;$/;"	s
__anon9f490e620308	softfloat/softfloat_types.h	/^typedef struct { uint64_t v; } float64_t;$/;"	s
__anon9f490e620408	softfloat/softfloat_types.h	/^typedef struct { uint64_t v[2]; } float128_t;$/;"	s
__anonafb95f510108	riscv/mmio_plugin.h	/^typedef struct {$/;"	s
__anonbc96ba520108	riscv/disasm.h	/^struct : public arg_t {$/;"	s
__anonbdc592b90102	fesvr/htif.cc	/^  auto enq_func = [](std::queue<reg_t>* q, uint64_t x) { q->push(x); };$/;"	f	function:htif_t::run	file:
__anond79ae633010a	softfloat/s_roundPackMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	u	function:softfloat_roundPackMToI64	file:
__anondc26dd840102	riscv/insns/amominu_d.h	/^WRITE_RD(MMU.amo_uint64(RS1, [&](uint64_t lhs) { return std::min(lhs, RS2); }));$/;"	f	file:
__anondc272e570102	riscv/insns/amominu_w.h	/^WRITE_RD(sext32(MMU.amo_uint32(RS1, [&](uint32_t lhs) { return std::min(lhs, uint32_t(RS2)); }))/;"	f	file:
__anonec8757cc0102	spike_main/termios-xspike.cc	/^  signal(SIGTERM, [](int) { });$/;"	f	function:main	file:
__anonf1049901010a	softfloat/s_roundPackToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	u	function:softfloat_roundPackToI32	file:
__anonf10646a6010a	softfloat/s_roundPackToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	u	function:softfloat_roundPackToI64	file:
__anonfa8ab7ed0102	spike_main/spike-log-parser.cc	/^  parser.option(0, "extension", 1, [&](const char* s){extension = find_extension(s);});$/;"	f	function:main	file:
__anonfa8ab7ed0202	spike_main/spike-log-parser.cc	/^  parser.option(0, "isa", 1, [&](const char* s){isa = s;});$/;"	f	function:main	file:
__anonfe9e6e1c0102	spike_main/xspike.cc	/^  auto handle_signal = [](int) { signal_exit = true; };$/;"	f	function:main	file:
__del__	tests/testlib.py	/^    def __del__(self):$/;"	m	class:Spike
__init__	tests/testlib.py	/^    def __init__(self):$/;"	m	class:Gdb
__init__	tests/testlib.py	/^    def __init__(self, binary, halted=False, with_gdb=True, timeout=None):$/;"	m	class:Spike
__pad1	fesvr/syscall.cc	/^  uint64_t __pad1;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
__pad2	fesvr/syscall.cc	/^  uint32_t __pad2;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
__pad3	fesvr/syscall.cc	/^  uint64_t __pad3;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
__pad4	fesvr/syscall.cc	/^  uint64_t __pad4;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
__pad5	fesvr/syscall.cc	/^  uint64_t __pad5;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
__unused4	fesvr/syscall.cc	/^  uint32_t __unused4;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
__unused5	fesvr/syscall.cc	/^  uint32_t __unused5;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
_end	debug_rom/link.ld	/^    _end = .;$/;"	s
_entry	debug_rom/debug_rom.S	/^_entry:$/;"	l
_exception	debug_rom/debug_rom.S	/^_exception:$/;"	l
_memif	fesvr/device.h	/^  memif_t& _memif;$/;"	m	class:command_t	typeref:typename:memif_t &
_name	riscv/trap.h	/^  char _name[16];$/;"	m	class:trap_t	typeref:typename:char[16]
_resume	debug_rom/debug_rom.S	/^_resume:$/;"	l
_state	riscv/jtag_dtm.h	/^    jtag_state_t _state;$/;"	m	class:jtag_dtm_t	typeref:typename:jtag_state_t
_tck	riscv/jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t	typeref:typename:bool
_tdi	riscv/jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t	typeref:typename:bool
_tdo	riscv/jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t	typeref:typename:bool
_tms	riscv/jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t	typeref:typename:bool
_unused	softfloat/specialize.h	/^struct commonNaN { char _unused; };$/;"	m	struct:commonNaN	typeref:typename:char
a	riscv/insns/clmul.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/clmulh.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/clmulhw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/clmulr.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/clmulrw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/clmulw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fsl.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fslw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fsr.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fsri.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fsriw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
a	riscv/insns/fsrw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
abits	riscv/jtag_dtm.h	/^    const unsigned abits = 6;$/;"	m	class:jtag_dtm_t	typeref:typename:const unsigned
abstract_command_completed	riscv/debug_module.h	/^    bool abstract_command_completed;$/;"	m	class:debug_module_t	typeref:typename:bool
abstract_device_t	riscv/devices.h	/^class abstract_device_t {$/;"	c
abstract_rti	riscv/debug_module.h	/^    unsigned abstract_rti;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:unsigned
abstractauto	riscv/debug_module.h	/^    abstractauto_t abstractauto;$/;"	m	class:debug_module_t	typeref:typename:abstractauto_t
abstractauto_t	riscv/debug_module.h	/^} abstractauto_t;$/;"	t	typeref:struct:__anon5c7e8f3d0508
abstractcs	riscv/debug_module.h	/^    abstractcs_t abstractcs;$/;"	m	class:debug_module_t	typeref:typename:abstractcs_t
abstractcs_t	riscv/debug_module.h	/^} abstractcs_t;$/;"	t	typeref:struct:__anon5c7e8f3d0408
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
acc	customext/dummy_rocc.cc	/^  reg_t acc[num_acc];$/;"	m	class:dummy_rocc_t	typeref:typename:reg_t[]	file:
accept	riscv/remote_bitbang.cc	/^void remote_bitbang_t::accept()$/;"	f	class:remote_bitbang_t	typeref:typename:void
access	riscv/cachesim.cc	/^void cache_sim_t::access(uint64_t addr, size_t bytes, bool store)$/;"	f	class:cache_sim_t	typeref:typename:void
access128	riscv/debug_module.h	/^  bool access128;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
access16	riscv/debug_module.h	/^  bool access16;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
access32	riscv/debug_module.h	/^  bool access32;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
access64	riscv/debug_module.h	/^  bool access64;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
access8	riscv/debug_module.h	/^  bool access8;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
access_icache	riscv/mmu.h	/^  inline icache_entry_t* access_icache(reg_t addr)$/;"	f	class:mmu_t	typeref:typename:icache_entry_t *
access_type	riscv/memtracer.h	/^enum access_type {$/;"	g
acquire_load_reservation	riscv/mmu.h	/^  inline void acquire_load_reservation(reg_t vaddr)$/;"	f	class:mmu_t	typeref:typename:void
action	riscv/processor.h	/^  mcontrol_action_t action;$/;"	m	struct:__anon2b80edf10408	typeref:typename:mcontrol_action_t
add_device	riscv/debug_module.cc	/^void debug_module_t::add_device(bus_t *bus) {$/;"	f	class:debug_module_t	typeref:typename:void
add_device	riscv/devices.cc	/^void bus_t::add_device(reg_t addr, abstract_device_t* dev)$/;"	f	class:bus_t	typeref:typename:void
add_insn	disasm/disasm.cc	/^void NOINLINE disassembler_t::add_insn(disasm_insn_t* insn)$/;"	f	class:disassembler_t	typeref:typename:void NOINLINE
addi	riscv/opcodes.h	/^static uint32_t addi(unsigned int dest, unsigned int src, uint16_t imm)$/;"	f	typeref:typename:uint32_t
addr	fesvr/device.h	/^    uint64_t addr;$/;"	m	struct:disk_t::request_t	typeref:typename:uint64_t
addr	fesvr/dtm.h	/^    uint32_t addr;$/;"	m	struct:dtm_t::req	typeref:typename:uint32_t
addr	fesvr/rfb.h	/^  reg_t addr;$/;"	m	class:rfb_t	typeref:typename:reg_t
addr2symbol	fesvr/htif.h	/^  std::map<uint64_t, std::string> addr2symbol;$/;"	m	class:htif_t	typeref:typename:std::map<uint64_t,std::string>
addr_t	fesvr/memif.h	/^typedef reg_t addr_t;$/;"	t	typeref:typename:reg_t
addr_to_mem	riscv/sim.cc	/^char* sim_t::addr_to_mem(reg_t addr) {$/;"	f	class:sim_t	typeref:typename:char *
address	fdt/fdt.h	/^	fdt64_t address;$/;"	m	struct:fdt_reserve_entry	typeref:typename:fdt64_t
address	riscv/mmu.h	/^    reg_t address;$/;"	m	class:trigger_matched_t	typeref:typename:reg_t
advance_pc	riscv/execute.cc	/^    #define advance_pc(/;"	d	file:
afd	fesvr/rfb.h	/^  int afd;$/;"	m	class:rfb_t	typeref:typename:int
all	Makefile.in	/^all : $(install_hdrs) $(install_libs) $(install_exes)$/;"	t
all	build/Makefile	/^all : $(install_hdrs) $(install_libs) $(install_exes)$/;"	t
all	debug_rom/Makefile	/^all: $(patsubst %,%.h,$(ELFS))$/;"	t
all-c-flags	Makefile.in	/^all-c-flags := \\$/;"	m
all-c-flags	build/Makefile	/^all-c-flags := \\$/;"	m
all-cxx-flags	Makefile.in	/^all-cxx-flags := \\$/;"	m
all-link-flags	Makefile.in	/^all-link-flags := $(mcppbs-LDFLAGS) $(LDFLAGS)$/;"	m
all-link-flags	build/Makefile	/^all-link-flags := $(mcppbs-LDFLAGS) $(LDFLAGS)$/;"	m
allhalted	riscv/debug_module.h	/^  bool allhalted;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
allhavereset	riscv/debug_module.h	/^  bool allhavereset;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
allnonexistant	riscv/debug_module.h	/^  bool allnonexistant;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
alloc	fesvr/syscall.cc	/^reg_t fds_t::alloc(int fd)$/;"	f	class:fds_t	typeref:typename:reg_t
alloc	riscv/mmio_plugin.h	/^  static void* alloc(const char* args)$/;"	f	struct:mmio_plugin_registration_t	typeref:typename:void *
alloc	riscv/mmio_plugin.h	/^  void* (*alloc)(const char*);$/;"	m	struct:__anonafb95f510108	typeref:typename:void * (*)(const char *)
allresumeack	riscv/debug_module.h	/^  bool allresumeack;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
allrunning	riscv/debug_module.h	/^  bool allrunning;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
allunavail	riscv/debug_module.h	/^  bool allunavail;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
amo_address	disasm/disasm.cc	/^} amo_address;$/;"	v	typeref:struct:__anon961b4d0a0308
amo_func	riscv/mmu.h	/^  #define amo_func(/;"	d
anyhalted	riscv/debug_module.h	/^  bool anyhalted;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
anyhavereset	riscv/debug_module.h	/^  bool anyhavereset;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
anynonexistant	riscv/debug_module.h	/^  bool anynonexistant;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
anyresumeack	riscv/debug_module.h	/^  bool anyresumeack;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
anyrunning	riscv/debug_module.h	/^  bool anyrunning;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
anyunavail	riscv/debug_module.h	/^  bool anyunavail;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
arg	disasm/disasm.cc	/^  std::vector<const arg_t*>& arg;$/;"	m	struct:__anon961b4d0a3108	typeref:typename:std::vector<const arg_t * > &	file:
arg	fesvr/context.h	/^  void* arg;$/;"	m	class:context_t	typeref:typename:void *
arg	fesvr/option_parser.h	/^    int arg;$/;"	m	struct:option_parser_t::option_t	typeref:typename:int
arg_t	riscv/disasm.h	/^class arg_t$/;"	c
args	riscv/disasm.h	/^  std::vector<const arg_t*> args;$/;"	m	class:disasm_insn_t	typeref:typename:std::vector<const arg_t * >
as_fn_append	build/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	build/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	build/config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	build/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	build/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	build/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	build/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	build/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
asize	riscv/debug_module.h	/^  unsigned asize;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:unsigned
atime	fesvr/syscall.cc	/^  uint64_t atime;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
atoul_nonzero_safe	spike_main/spike.cc	/^static unsigned long atoul_nonzero_safe(const char* s)$/;"	f	typeref:typename:unsigned long	file:
atoul_safe	spike_main/spike.cc	/^static unsigned long atoul_safe(const char* s)$/;"	f	typeref:typename:unsigned long	file:
authbusy	riscv/debug_module.h	/^  bool authbusy;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
authenticated	riscv/debug_module.h	/^  bool authenticated;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
autoexecdata	riscv/debug_module.h	/^  unsigned autoexecdata;$/;"	m	struct:__anon5c7e8f3d0508	typeref:typename:unsigned
autoexecprogbuf	riscv/debug_module.h	/^  unsigned autoexecprogbuf;$/;"	m	struct:__anon5c7e8f3d0508	typeref:typename:unsigned
autoincrement	riscv/debug_module.h	/^  bool autoincrement;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
b	riscv/decode.h	/^  insn_bits_t b;$/;"	m	class:insn_t	typeref:typename:insn_bits_t
b	riscv/insns/bdep.h	/^	uint64_t b = mask & ~((mask | (mask-1)) + 1);$/;"	v	typeref:typename:uint64_t
b	riscv/insns/bdepw.h	/^	uint64_t b = mask & ~((mask | (mask-1)) + 1);$/;"	v	typeref:typename:uint64_t
b	riscv/insns/bext.h	/^	uint64_t b = mask & ~((mask | (mask-1)) + 1);$/;"	v	typeref:typename:uint64_t
b	riscv/insns/bextw.h	/^	uint64_t b = mask & ~((mask | (mask-1)) + 1);$/;"	v	typeref:typename:uint64_t
b	riscv/insns/clmul.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/clmulh.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/clmulhw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/clmulr.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/clmulrw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/clmulw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fsl.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fslw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fsr.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fsri.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fsriw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
b	riscv/insns/fsrw.h	/^reg_t a = RS1, b = RS3;$/;"	v	typeref:typename:reg_t
bad_isa_string	riscv/processor.cc	/^static void bad_isa_string(const char* isa, const char* msg)$/;"	f	typeref:typename:void	file:
bad_option_string	riscv/processor.cc	/^static void bad_option_string(const char *option, const char *value,$/;"	f	typeref:typename:void	file:
bad_priv_string	riscv/processor.cc	/^static void bad_priv_string(const char* priv)$/;"	f	typeref:typename:void	file:
bad_varch_string	riscv/processor.cc	/^static void bad_varch_string(const char* varch, const char *msg)$/;"	f	typeref:typename:void	file:
base	fesvr/htif_hexwriter.h	/^  size_t base;$/;"	m	class:htif_hexwriter_t	typeref:typename:size_t
baseAddr	riscv/insns/vmvnfr_v.h	/^const reg_t baseAddr = RS1;$/;"	v	typeref:typename:const reg_t
bcd	fesvr/htif.h	/^  bcd_t bcd;$/;"	m	class:htif_t	typeref:typename:bcd_t
bcd_t	fesvr/device.cc	/^bcd_t::bcd_t()$/;"	f	class:bcd_t
bcd_t	fesvr/device.h	/^class bcd_t : public device_t$/;"	c
bigimm	disasm/disasm.cc	/^} bigimm;$/;"	v	typeref:struct:__anon961b4d0a0e08
bintest_outs	Makefile.in	/^bintest_outs = $(bintests:=.out)$/;"	m
bintest_outs	build/Makefile	/^bintest_outs = $(bintests:=.out)$/;"	m
bintests	Makefile.in	/^bintests = $(src_dir)\/tests\/ebreak.py$/;"	m
bintests	build/Makefile	/^bintests = $(src_dir)\/tests\/ebreak.py$/;"	m
bit	riscv/opcodes.h	/^static uint32_t bit(uint32_t value, unsigned int b) {$/;"	f	typeref:typename:uint32_t
bits	riscv/decode.h	/^  insn_bits_t bits() { return b & ~((UINT64_MAX) << (length() * 8)); }$/;"	f	class:insn_t	typeref:typename:insn_bits_t
bits	riscv/opcodes.h	/^static uint32_t bits(uint32_t value, unsigned int hi, unsigned int lo) {$/;"	f	typeref:typename:uint32_t
blksize	fesvr/syscall.cc	/^  uint32_t blksize;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
blocks	fesvr/syscall.cc	/^  uint64_t blocks;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
boot_cpuid_phys	fdt/fdt.h	/^	fdt32_t boot_cpuid_phys;	 \/* Which physical CPU id we're$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
boot_rom	riscv/sim.h	/^  std::unique_ptr<rom_device_t> boot_rom;$/;"	m	class:sim_t	typeref:typename:std::unique_ptr<rom_device_t>
bootargs	riscv/sim.h	/^  const char* bootargs;$/;"	m	class:sim_t	typeref:typename:const char *
bpp	fesvr/rfb.h	/^  uint16_t bpp;$/;"	m	class:rfb_t	typeref:typename:uint16_t
branch_target	disasm/disasm.cc	/^} branch_target;$/;"	v	typeref:struct:__anon961b4d0a1008
buf_size	riscv/remote_bitbang.h	/^  static const ssize_t buf_size = 64 * 1024;$/;"	m	class:remote_bitbang_t	typeref:typename:const ssize_t
build_opcode_map	riscv/processor.cc	/^void processor_t::build_opcode_map()$/;"	f	class:processor_t	typeref:typename:void
bus	riscv/sim.h	/^  bus_t bus;$/;"	m	class:sim_t	typeref:typename:bus_t
bus_t	riscv/devices.h	/^class bus_t : public abstract_device_t {$/;"	c
busy	riscv/debug_module.h	/^  bool busy;$/;"	m	struct:__anon5c7e8f3d0408	typeref:typename:bool
busy_stuck	riscv/jtag_dtm.h	/^    bool busy_stuck;$/;"	m	class:jtag_dtm_t	typeref:typename:bool
bytes_read	riscv/cachesim.h	/^  uint64_t bytes_read;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
bytes_written	riscv/cachesim.h	/^  uint64_t bytes_written;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
c	riscv/insns/bdep.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
c	riscv/insns/bdepw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
c	riscv/insns/bext.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
c	riscv/insns/bextw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
c	tests/testlib.py	/^    def c(self, wait=True):$/;"	m	class:Gdb
cache	riscv/cachesim.h	/^  cache_sim_t* cache;$/;"	m	class:cache_memtracer_t	typeref:typename:cache_sim_t *
cache_memtracer_t	riscv/cachesim.h	/^  cache_memtracer_t(const char* config, const char* name)$/;"	f	class:cache_memtracer_t
cache_memtracer_t	riscv/cachesim.h	/^class cache_memtracer_t : public memtracer_t$/;"	c
cache_sim_t	riscv/cachesim.cc	/^cache_sim_t::cache_sim_t(const cache_sim_t& rhs)$/;"	f	class:cache_sim_t
cache_sim_t	riscv/cachesim.cc	/^cache_sim_t::cache_sim_t(size_t _sets, size_t _ways, size_t _linesz, const char* _name)$/;"	f	class:cache_sim_t
cache_sim_t	riscv/cachesim.h	/^class cache_sim_t$/;"	c
callback_t	fesvr/device.h	/^  typedef std::function<void(uint64_t)> callback_t;$/;"	t	class:command_t
canonical_terminal_t	fesvr/term.h	/^class canonical_terminal_t$/;"	c
canonical_termios_t	fesvr/term.cc	/^  canonical_termios_t()$/;"	f	class:canonical_termios_t	file:
canonical_termios_t	fesvr/term.cc	/^class canonical_termios_t$/;"	c	file:
capture_dr	riscv/jtag_dtm.cc	/^void jtag_dtm_t::capture_dr()$/;"	f	class:jtag_dtm_t	typeref:typename:void
cause	riscv/processor.h	/^  uint8_t cause;$/;"	m	struct:__anon2b80edf10108	typeref:typename:uint8_t
cause	riscv/trap.h	/^  reg_t cause() { return which; }$/;"	f	class:trap_t	typeref:typename:reg_t
cb	fesvr/device.h	/^  callback_t cb;$/;"	m	class:command_t	typeref:typename:callback_t
cfg	riscv/insns/bfp.h	/^reg_t cfg = RS2 >> (xlen\/2);$/;"	v	typeref:typename:reg_t
cfg	riscv/insns/bfpw.h	/^reg_t cfg = RS2 >> 16;$/;"	v	typeref:typename:reg_t
cfgstrvalid	riscv/debug_module.h	/^  bool cfgstrvalid;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
cflush_t	customext/cflush.cc	/^  cflush_t() {}$/;"	f	class:cflush_t	file:
cflush_t	customext/cflush.cc	/^class cflush_t : public extension_t$/;"	c	file:
chain	riscv/disasm.h	/^  std::vector<const disasm_insn_t*> chain[HASH_SIZE+1];$/;"	m	class:disassembler_t	typeref:typename:std::vector<const disasm_insn_t * >[]
chain	riscv/processor.h	/^  bool chain;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
challenge	riscv/debug_module.h	/^    uint32_t challenge;$/;"	m	class:debug_module_t	typeref:typename:uint32_t
check	Makefile.in	/^check : check-cpp check-bin$/;"	t
check	build/Makefile	/^check : check-cpp check-bin$/;"	t
check-bin	Makefile.in	/^check-bin : $(bintest_outs)$/;"	t
check-bin	build/Makefile	/^check-bin : $(bintest_outs)$/;"	t
check-cpp	Makefile.in	/^check-cpp : $(test_outs)$/;"	t
check-cpp	build/Makefile	/^check-cpp : $(test_outs)$/;"	t
check_block_	fdt/fdt.c	/^static int check_block_(uint32_t hdrsize, uint32_t totalsize,$/;"	f	typeref:typename:int	file:
check_file_exists	spike_main/spike.cc	/^static bool check_file_exists(const char *fileName)$/;"	f	typeref:typename:bool	file:
check_load_reservation	riscv/mmu.h	/^  inline bool check_load_reservation(reg_t vaddr, size_t size)$/;"	f	class:mmu_t	typeref:typename:bool
check_off_	fdt/fdt.c	/^static int check_off_(uint32_t hdrsize, uint32_t totalsize, uint32_t off)$/;"	f	typeref:typename:int	file:
check_pc_alignment	riscv/processor.h	/^  void check_pc_alignment(reg_t pc) {$/;"	f	class:processor_t	typeref:typename:void
check_pow2	riscv/processor.cc	/^static bool check_pow2(int val)$/;"	f	typeref:typename:bool	file:
check_tag	riscv/cachesim.cc	/^uint64_t* cache_sim_t::check_tag(uint64_t addr)$/;"	f	class:cache_sim_t	typeref:typename:uint64_t *
check_tag	riscv/cachesim.cc	/^uint64_t* fa_cache_sim_t::check_tag(uint64_t addr)$/;"	f	class:fa_cache_sim_t	typeref:typename:uint64_t *
check_triggers_fetch	riscv/mmu.h	/^  bool check_triggers_fetch;$/;"	m	class:mmu_t	typeref:typename:bool
check_triggers_load	riscv/mmu.h	/^  bool check_triggers_load;$/;"	m	class:mmu_t	typeref:typename:bool
check_triggers_store	riscv/mmu.h	/^  bool check_triggers_store;$/;"	m	class:mmu_t	typeref:typename:bool
chr	fesvr/option_parser.h	/^    char chr;$/;"	m	struct:option_parser_t::option_t	typeref:typename:char
chroot	fesvr/syscall.h	/^  std::string chroot;$/;"	m	class:syscall_t	typeref:typename:std::string
chunk_align	fesvr/dtm.cc	/^size_t dtm_t::chunk_align()$/;"	f	class:dtm_t	typeref:typename:size_t
chunk_align	fesvr/htif_hexwriter.h	/^  size_t chunk_align() { return width; }$/;"	f	class:htif_hexwriter_t	typeref:typename:size_t
chunk_align	fesvr/htif_pthread.h	/^  virtual size_t chunk_align() { return 64; }$/;"	f	class:htif_pthread_t	typeref:typename:size_t
chunk_align	fesvr/tsi.h	/^  size_t chunk_align() override { return 4; }$/;"	f	class:tsi_t	typeref:typename:size_t
chunk_align	riscv/sim.h	/^  size_t chunk_align() { return 8; }$/;"	f	class:sim_t	typeref:typename:size_t
chunk_max_size	fesvr/dtm.cc	/^size_t dtm_t::chunk_max_size()$/;"	f	class:dtm_t	typeref:typename:size_t
chunk_max_size	fesvr/htif_hexwriter.h	/^  size_t chunk_max_size() { return width; }$/;"	f	class:htif_hexwriter_t	typeref:typename:size_t
chunk_max_size	fesvr/htif_pthread.h	/^  virtual size_t chunk_max_size() { return 1024; }$/;"	f	class:htif_pthread_t	typeref:typename:size_t
chunk_max_size	fesvr/tsi.h	/^  size_t chunk_max_size() override { return 1024; }$/;"	f	class:tsi_t	typeref:typename:size_t
chunk_max_size	riscv/sim.h	/^  size_t chunk_max_size() { return 8; }$/;"	f	class:sim_t	typeref:typename:size_t
chunked_memif_t	fesvr/memif.h	/^class chunked_memif_t$/;"	c
clean	Makefile.in	/^clean :$/;"	t
clean	build/Makefile	/^clean :$/;"	t
clean	debug_rom/Makefile	/^clean:$/;"	t
clear_chunk	fesvr/dtm.cc	/^void dtm_t::clear_chunk(uint64_t taddr, size_t len)$/;"	f	class:dtm_t	typeref:typename:void
clear_chunk	fesvr/htif.cc	/^void htif_t::clear_chunk(addr_t taddr, size_t len)$/;"	f	class:htif_t	typeref:typename:void
clear_chunk	fesvr/htif_hexwriter.h	/^  void clear_chunk(addr_t taddr, size_t len) {}$/;"	f	class:htif_hexwriter_t	typeref:typename:void
clear_csr	fesvr/dtm.cc	/^uint64_t dtm_t::clear_csr(unsigned which, uint64_t data)$/;"	f	class:dtm_t	typeref:typename:uint64_t
clear_csr	riscv/encoding.h	/^#define clear_csr(/;"	d
clear_interrupt	riscv/extension.cc	/^void extension_t::clear_interrupt()$/;"	f	class:extension_t	typeref:typename:void
client_fd	riscv/remote_bitbang.h	/^  int client_fd;$/;"	m	class:remote_bitbang_t	typeref:typename:int
clint	riscv/sim.h	/^  std::unique_ptr<clint_t> clint;$/;"	m	class:sim_t	typeref:typename:std::unique_ptr<clint_t>
clint_t	riscv/clint.cc	/^clint_t::clint_t(std::vector<processor_t*>& procs, uint64_t freq_hz, bool real_time)$/;"	f	class:clint_t
clint_t	riscv/devices.h	/^class clint_t : public abstract_device_t {$/;"	c
cmd	fesvr/device.h	/^  uint8_t cmd() { return tohost >> 48; }$/;"	f	class:command_t	typeref:typename:uint8_t
cmderr	riscv/debug_module.h	/^  cmderr_t cmderr;$/;"	m	struct:__anon5c7e8f3d0408	typeref:typename:cmderr_t
cmderr	riscv/debug_module.h	/^typedef enum cmderr {$/;"	g
cmderr_t	riscv/debug_module.h	/^} cmderr_t;$/;"	t	typeref:enum:cmderr
cmemif	fesvr/memif.h	/^  chunked_memif_t* cmemif;$/;"	m	class:memif_t	typeref:typename:chunked_memif_t *
cmp	riscv/processor.cc	/^  struct cmp {$/;"	s	function:processor_t::build_opcode_map	file:
cnt	riscv/insns/viota_m.h	/^int cnt = 0;$/;"	v	typeref:typename:int
comma	Makefile.in	/^comma := ,$/;"	m
comma	build/Makefile	/^comma := ,$/;"	m
command	riscv/debug_module.h	/^    uint32_t command;$/;"	m	class:debug_module_t	typeref:typename:uint32_t
command	tests/testlib.py	/^    def command(self, command, timeout=-1):$/;"	m	class:Gdb
command_func_t	fesvr/device.h	/^  typedef std::function<void(command_t)> command_func_t;$/;"	t	class:device_t
command_handlers	fesvr/device.h	/^  std::vector<command_func_t> command_handlers;$/;"	m	class:device_t	typeref:typename:std::vector<command_func_t>
command_names	fesvr/device.h	/^  std::vector<std::string> command_names;$/;"	m	class:device_t	typeref:typename:std::vector<std::string>
command_t	fesvr/device.h	/^  command_t(memif_t& memif, uint64_t tohost, callback_t cb)$/;"	f	class:command_t
command_t	fesvr/device.h	/^class command_t$/;"	c
commit_log_mem_t	riscv/processor.h	/^typedef std::vector<std::tuple<reg_t, uint64_t, uint8_t>> commit_log_mem_t;$/;"	t	typeref:typename:std::vector<std::tuple<reg_t,uint64_t,uint8_t>>
commit_log_print_insn	riscv/execute.cc	/^static void commit_log_print_insn(processor_t *p, reg_t pc, insn_t insn)$/;"	f	typeref:typename:void	file:
commit_log_print_insn	riscv/execute.cc	/^static void commit_log_print_insn(processor_t* p, reg_t pc, insn_t insn) {}$/;"	f	typeref:typename:void	file:
commit_log_print_value	riscv/execute.cc	/^static void commit_log_print_value(FILE *log_file, int width, const void *data)$/;"	f	typeref:typename:void	file:
commit_log_print_value	riscv/execute.cc	/^static void commit_log_print_value(FILE *log_file, int width, uint64_t val)$/;"	f	typeref:typename:void	file:
commit_log_reg_t	riscv/processor.h	/^typedef std::unordered_map<reg_t, freg_t> commit_log_reg_t;$/;"	t	typeref:typename:std::unordered_map<reg_t,freg_t>
commit_log_reset	riscv/execute.cc	/^static void commit_log_reset(processor_t* p) {}$/;"	f	typeref:typename:void	file:
commit_log_reset	riscv/execute.cc	/^static void commit_log_reset(processor_t* p)$/;"	f	typeref:typename:void	file:
commit_log_stash_privilege	riscv/execute.cc	/^static void commit_log_stash_privilege(processor_t* p) {}$/;"	f	typeref:typename:void	file:
commit_log_stash_privilege	riscv/execute.cc	/^static void commit_log_stash_privilege(processor_t* p)$/;"	f	typeref:typename:void	file:
commitlog	riscv/riscv.ac	/^AC_ARG_ENABLE([commitlog], AS_HELP_STRING([--enable-commitlog], [Enable commit log generation]))$/;"	e
commonNaN	softfloat/specialize.h	/^struct commonNaN { char _unused; };$/;"	s
compile	tests/testlib.py	/^def compile(*args):$/;"	f
cond	fesvr/context.h	/^  pthread_cond_t cond;$/;"	m	class:context_t	typeref:typename:pthread_cond_t
config	riscv/debug_module.h	/^    debug_module_config_t config;$/;"	m	class:debug_module_t	typeref:typename:debug_module_config_t
config.status	Makefile.in	/^config.status : $(src_dir)\/configure$/;"	t
config.status	build/Makefile	/^config.status : $(src_dir)\/configure$/;"	t
configure_log	riscv/sim.cc	/^void sim_t::configure_log(bool enable_log, bool enable_commitlog)$/;"	f	class:sim_t	typeref:typename:void
construct	riscv/cachesim.cc	/^cache_sim_t* cache_sim_t::construct(const char* config, const char* name)$/;"	f	class:cache_sim_t	typeref:typename:cache_sim_t *
contents	riscv/devices.h	/^  char* contents() { return data; }$/;"	f	class:mem_t	typeref:typename:char *
contents	riscv/devices.h	/^  const std::vector<char>& contents() { return data; }$/;"	f	class:rom_device_t	typeref:typename:const std::vector<char> &
context	fesvr/context.h	/^  std::unique_ptr<ucontext_t> context;$/;"	m	class:context_t	typeref:typename:std::unique_ptr<ucontext_t>
context_t	fesvr/context.cc	/^context_t::context_t()$/;"	f	class:context_t
context_t	fesvr/context.h	/^class context_t$/;"	c
cpu_to_fdt16	fdt/libfdt_env.h	/^static inline fdt16_t cpu_to_fdt16(uint16_t x)$/;"	f	typeref:typename:fdt16_t
cpu_to_fdt32	fdt/libfdt_env.h	/^static inline fdt32_t cpu_to_fdt32(uint32_t x)$/;"	f	typeref:typename:fdt32_t
cpu_to_fdt64	fdt/libfdt_env.h	/^static inline fdt64_t cpu_to_fdt64(uint64_t x)$/;"	f	typeref:typename:fdt64_t
creator	fesvr/context.h	/^  context_t* creator;$/;"	m	class:context_t	typeref:typename:context_t *
csr	disasm/disasm.cc	/^} csr;$/;"	v	typeref:struct:__anon961b4d0a0b08
csr	riscv/decode.h	/^  uint64_t csr() { return x(20, 12); }$/;"	f	class:insn_t	typeref:typename:uint64_t
csr	riscv/insns/csrrc.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v	typeref:typename:int
csr	riscv/insns/csrrci.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v	typeref:typename:int
csr	riscv/insns/csrrs.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v	typeref:typename:int
csr	riscv/insns/csrrsi.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v	typeref:typename:int
csr	riscv/insns/csrrw.h	/^int csr = validate_csr(insn.csr(), true);$/;"	v	typeref:typename:int
csr	riscv/insns/csrrwi.h	/^int csr = validate_csr(insn.csr(), true);$/;"	v	typeref:typename:int
csr_name	disasm/regnames.cc	/^const char* csr_name(int which) {$/;"	f	typeref:typename:const char *
csrr	riscv/opcodes.h	/^static uint32_t csrr(unsigned int rd, unsigned int csr) {$/;"	f	typeref:typename:uint32_t
csrrs	riscv/opcodes.h	/^static uint32_t csrrs(unsigned int rd, unsigned int rs1, unsigned int csr) {$/;"	f	typeref:typename:uint32_t
csrsi	riscv/opcodes.h	/^static uint32_t csrsi(unsigned int csr, uint16_t imm) {$/;"	f	typeref:typename:uint32_t
csrw	riscv/opcodes.h	/^static uint32_t csrw(unsigned int source, unsigned int csr) {$/;"	f	typeref:typename:uint32_t
ctime	fesvr/syscall.cc	/^  uint64_t ctime;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
cto	riscv/processor.h	/^static int cto(reg_t val)$/;"	f	typeref:typename:int
ctrlc_pressed	riscv/sim.cc	/^volatile bool ctrlc_pressed = false;$/;"	v	typeref:typename:volatile bool
ctz	riscv/processor.cc	/^static int ctz(reg_t val)$/;"	f	typeref:typename:int	file:
cur	fesvr/context.cc	/^static __thread context_t* cur;$/;"	v	typeref:typename:__thread context_t *	file:
current	fesvr/context.cc	/^context_t* context_t::current()$/;"	f	class:context_t	typeref:typename:context_t *
current_hart	fesvr/dtm.h	/^  int current_hart;$/;"	m	class:dtm_t	typeref:typename:int
current_proc	riscv/sim.h	/^  size_t current_proc;$/;"	m	class:sim_t	typeref:typename:size_t
current_step	riscv/sim.h	/^  size_t current_step;$/;"	m	class:sim_t	typeref:typename:size_t
custom0	customext/dummy_rocc.cc	/^  reg_t custom0(rocc_insn_t insn, reg_t xs1, reg_t xs2)$/;"	f	class:dummy_rocc_t	typeref:typename:reg_t	file:
customX	riscv/rocc.cc	/^#define customX(/;"	d	file:
custom_base	riscv/debug_module.h	/^    unsigned custom_base;$/;"	m	class:debug_module_t	typeref:typename:unsigned
custom_cflush	customext/cflush.cc	/^static reg_t custom_cflush(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t	file:
custom_fmt_t	disasm/disasm.cc	/^} custom_fmt_t;$/;"	t	typeref:struct:__anon961b4d0a3108	file:
customext_CFLAGS	build/customext.mk	/^customext_CFLAGS = -fPIC$/;"	m
customext_CFLAGS	customext/customext.mk.in	/^customext_CFLAGS = -fPIC$/;"	m
customext_install_shared_lib	build/customext.mk	/^customext_install_shared_lib = yes$/;"	m
customext_install_shared_lib	customext/customext.mk.in	/^customext_install_shared_lib = yes$/;"	m
customext_srcs	build/customext.mk	/^customext_srcs = \\$/;"	m
customext_srcs	customext/customext.mk.in	/^customext_srcs = \\$/;"	m
customext_subproject_deps	build/customext.mk	/^customext_subproject_deps = \\$/;"	m
customext_subproject_deps	customext/customext.mk.in	/^customext_subproject_deps = \\$/;"	m
d	riscv/interactive.cc	/^  double d;$/;"	m	union:fpr	typeref:typename:double	file:
data	fdt/fdt.h	/^	char data[0];$/;"	m	struct:fdt_property	typeref:typename:char[0]
data	fesvr/dtm.h	/^    uint32_t data;$/;"	m	struct:dtm_t::req	typeref:typename:uint32_t
data	fesvr/dtm.h	/^    uint32_t data;$/;"	m	struct:dtm_t::resp	typeref:typename:uint32_t
data	riscv/decode.h	/^  T data[N];$/;"	m	class:regfile_t	typeref:typename:T[]
data	riscv/devices.h	/^  char* data;$/;"	m	class:mem_t	typeref:typename:char *
data	riscv/devices.h	/^  std::vector<char> data;$/;"	m	class:rom_device_t	typeref:typename:std::vector<char>
data	riscv/insns/bdep.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
data	riscv/insns/bdepw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
data	riscv/insns/bext.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
data	riscv/insns/bextw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
data	riscv/insns/bfp.h	/^reg_t data = RS2 << off;$/;"	v	typeref:typename:reg_t
data	riscv/insns/bfpw.h	/^reg_t data = RS2 << off;$/;"	v	typeref:typename:reg_t
data	riscv/mmu.h	/^    reg_t data;$/;"	m	class:trigger_matched_t	typeref:typename:reg_t
data	riscv/mmu.h	/^  insn_fetch_t data;$/;"	m	struct:icache_entry_t	typeref:typename:insn_fetch_t
data_available	fesvr/tsi.cc	/^bool tsi_t::data_available(void)$/;"	f	class:tsi_t	typeref:typename:bool
data_base	fesvr/dtm.h	/^  uint32_t data_base;$/;"	m	class:dtm_t	typeref:typename:uint32_t
data_words	fesvr/dtm.h	/^  size_t data_words;$/;"	m	class:dtm_t	typeref:typename:size_t
datacount	riscv/debug_module.h	/^  unsigned datacount;$/;"	m	struct:__anon5c7e8f3d0408	typeref:typename:unsigned
datasize	riscv/debug_module.h	/^    static const unsigned datasize = 2;$/;"	m	class:debug_module_t	typeref:typename:const unsigned
dcache_sim_t	riscv/cachesim.h	/^  dcache_sim_t(const char* config) : cache_memtracer_t(config, "D$") {}$/;"	f	class:dcache_sim_t
dcache_sim_t	riscv/cachesim.h	/^class dcache_sim_t : public cache_memtracer_t$/;"	c
dcsr	riscv/processor.h	/^  dcsr_t dcsr;$/;"	m	struct:state_t	typeref:typename:dcsr_t
dcsr_t	riscv/processor.h	/^} dcsr_t;$/;"	t	typeref:struct:__anon2b80edf10108
dealloc	fesvr/syscall.cc	/^void fds_t::dealloc(reg_t fd)$/;"	f	class:fds_t	typeref:typename:void
dealloc	riscv/mmio_plugin.h	/^  static void dealloc(void* self)$/;"	f	struct:mmio_plugin_registration_t	typeref:typename:void
dealloc	riscv/mmio_plugin.h	/^  void (*dealloc)(void*);$/;"	m	struct:__anonafb95f510108	typeref:typename:void (*)(void *)
debug	riscv/processor.h	/^  bool debug;$/;"	m	class:processor_t	typeref:typename:bool
debug	riscv/sim.h	/^  bool debug;$/;"	m	class:sim_t	typeref:typename:bool
debug-%	Makefile.in	/^debug-% :$/;"	t
debug-%	build/Makefile	/^debug-% :$/;"	t
debug_abstract	riscv/debug_module.h	/^    uint8_t debug_abstract[debug_abstract_size * 4];$/;"	m	class:debug_module_t	typeref:typename:uint8_t[]
debug_abstract_size	riscv/debug_module.h	/^    static const unsigned debug_abstract_size = 12;$/;"	m	class:debug_module_t	typeref:typename:const unsigned
debug_abstract_start	riscv/debug_module.h	/^    unsigned debug_abstract_start;$/;"	m	class:debug_module_t	typeref:typename:unsigned
debug_data_start	riscv/debug_module.h	/^    static const unsigned debug_data_start = 0x380;$/;"	m	class:debug_module_t	typeref:typename:const unsigned
debug_mmu	riscv/sim.h	/^  mmu_t* debug_mmu;  \/\/ debug port into main memory$/;"	m	class:sim_t	typeref:typename:mmu_t *
debug_mode	riscv/processor.h	/^  bool debug_mode;$/;"	m	struct:state_t	typeref:typename:bool
debug_module	riscv/sim.h	/^  debug_module_t debug_module;$/;"	m	class:sim_t	typeref:typename:debug_module_t
debug_module_config_t	riscv/debug_module.h	/^} debug_module_config_t;$/;"	t	typeref:struct:__anon5c7e8f3d0108
debug_module_t	riscv/debug_module.cc	/^debug_module_t::debug_module_t(sim_t *sim, const debug_module_config_t &config) :$/;"	f	class:debug_module_t
debug_module_t	riscv/debug_module.h	/^class debug_module_t : public abstract_device_t$/;"	c
debug_progbuf_start	riscv/debug_module.h	/^    unsigned debug_progbuf_start;$/;"	m	class:debug_module_t	typeref:typename:unsigned
debug_rom	debug_rom/Makefile	/^debug_rom:	$(DEPS)$/;"	t
debug_rom_flags	riscv/debug_module.h	/^    uint8_t debug_rom_flags[1024];$/;"	m	class:debug_module_t	typeref:typename:uint8_t[1024]
debug_rom_raw	debug_rom/debug_rom.h	/^static const unsigned char debug_rom_raw[] = {$/;"	v	typeref:typename:const unsigned char[]
debug_rom_raw_len	debug_rom/debug_rom.h	/^static const unsigned int debug_rom_raw_len = 116;$/;"	v	typeref:typename:const unsigned int
debug_rom_whereto	riscv/debug_module.h	/^    uint8_t debug_rom_whereto[4];$/;"	m	class:debug_module_t	typeref:typename:uint8_t[4]
decode_insn	riscv/processor.cc	/^insn_func_t processor_t::decode_insn(insn_t insn)$/;"	f	class:processor_t	typeref:typename:insn_func_t
decode_vm_info	riscv/mmu.h	/^inline vm_info decode_vm_info(int xlen, bool stage2, reg_t prv, reg_t satp)$/;"	f	typeref:typename:vm_info
default	Makefile.in	/^default : all$/;"	t
default	build/Makefile	/^default : all$/;"	t
default-CFLAGS	Makefile.in	/^default-CFLAGS   := -DPREFIX=\\"$(prefix)\\" -Wall -Wno-unused -g -O2$/;"	m
default-CFLAGS	build/Makefile	/^default-CFLAGS   := -DPREFIX=\\"$(prefix)\\" -Wall -Wno-unused -g -O2$/;"	m
default-CXXFLAGS	Makefile.in	/^default-CXXFLAGS := $(default-CFLAGS) -std=c++11$/;"	m
default-CXXFLAGS	build/Makefile	/^default-CXXFLAGS := $(default-CFLAGS) -std=c++11$/;"	m
defaultNaNExtF80UI0	softfloat/specialize.h	/^#define defaultNaNExtF80UI0 /;"	d
defaultNaNExtF80UI64	softfloat/specialize.h	/^#define defaultNaNExtF80UI64 /;"	d
defaultNaNF128	riscv/decode.h	/^inline float128_t defaultNaNF128()$/;"	f	typeref:typename:float128_t
defaultNaNF128UI0	softfloat/specialize.h	/^#define defaultNaNF128UI0 /;"	d
defaultNaNF128UI32	softfloat/specialize.h	/^#define defaultNaNF128UI32 /;"	d
defaultNaNF128UI64	softfloat/specialize.h	/^#define defaultNaNF128UI64 /;"	d
defaultNaNF128UI96	softfloat/specialize.h	/^#define defaultNaNF128UI96 /;"	d
defaultNaNF16UI	softfloat/specialize.h	/^#define defaultNaNF16UI /;"	d
defaultNaNF32UI	softfloat/specialize.h	/^#define defaultNaNF32UI /;"	d
defaultNaNF64UI	softfloat/specialize.h	/^#define defaultNaNF64UI /;"	d
deps	Makefile.in	/^deps : $(deps)$/;"	t
deps	build/Makefile	/^deps : $(deps)$/;"	t
depth	fesvr/htif_hexwriter.h	/^  size_t depth;$/;"	m	class:htif_hexwriter_t	typeref:typename:size_t
dev	fesvr/syscall.cc	/^  uint64_t dev;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
device	fesvr/device.h	/^  uint8_t device() { return tohost >> 56; }$/;"	f	class:command_t	typeref:typename:uint8_t
device_list	fesvr/htif.h	/^  device_list_t device_list;$/;"	m	class:htif_t	typeref:typename:device_list_t
device_list_t	fesvr/device.cc	/^device_list_t::device_list_t()$/;"	f	class:device_list_t
device_list_t	fesvr/device.h	/^class device_list_t$/;"	c
device_t	fesvr/device.cc	/^device_t::device_t()$/;"	f	class:device_t
device_t	fesvr/device.h	/^class device_t$/;"	c
devices	fesvr/device.h	/^  std::vector<device_t*> devices;$/;"	m	class:device_list_t	typeref:typename:std::vector<device_t * >
devices	riscv/devices.h	/^  std::map<reg_t, abstract_device_t*> devices;$/;"	m	class:bus_t	typeref:typename:std::map<reg_t,abstract_device_t * >
die	fesvr/dtm.cc	/^void dtm_t::die(uint32_t cmderr)$/;"	f	class:dtm_t	typeref:typename:void
dirty	riscv/riscv.ac	/^AC_ARG_ENABLE([dirty], AS_HELP_STRING([--enable-dirty], [Enable hardware management of PTE acces/;"	e
dirty_ext_state	riscv/decode.h	/^#define dirty_ext_state /;"	d
dirty_fp_state	riscv/decode.h	/^#define dirty_fp_state /;"	d
dirty_vs_state	riscv/decode.h	/^#define dirty_vs_state /;"	d
disasm	riscv/processor.cc	/^void processor_t::disasm(insn_t insn)$/;"	f	class:processor_t	typeref:typename:void
disasm_CFLAGS	build/disasm.mk	/^disasm_CFLAGS = -fPIC$/;"	m
disasm_CFLAGS	disasm/disasm.mk.in	/^disasm_CFLAGS = -fPIC$/;"	m
disasm_insn_t	riscv/disasm.h	/^  NOINLINE disasm_insn_t(const char* name, uint32_t match, uint32_t mask,$/;"	f	class:disasm_insn_t	typeref:typename:NOINLINE
disasm_insn_t	riscv/disasm.h	/^class disasm_insn_t$/;"	c
disasm_install_lib	build/disasm.mk	/^disasm_install_lib = yes$/;"	m
disasm_install_lib	disasm/disasm.mk.in	/^disasm_install_lib = yes$/;"	m
disasm_srcs	build/disasm.mk	/^disasm_srcs = \\$/;"	m
disasm_srcs	disasm/disasm.mk.in	/^disasm_srcs = \\$/;"	m
disassemble	disasm/disasm.cc	/^std::string disassembler_t::disassemble(insn_t insn) const$/;"	f	class:disassembler_t	typeref:typename:std::string
disassembler	riscv/processor.h	/^  disassembler_t* disassembler;$/;"	m	class:processor_t	typeref:typename:disassembler_t *
disassembler_t	disasm/disasm.cc	/^disassembler_t::disassembler_t(int xlen)$/;"	f	class:disassembler_t
disassembler_t	riscv/disasm.h	/^class disassembler_t$/;"	c
disk_t	fesvr/device.cc	/^disk_t::disk_t(const char* fn)$/;"	f	class:disk_t
disk_t	fesvr/device.h	/^class disk_t : public device_t$/;"	c
dispatch	fesvr/syscall.cc	/^void syscall_t::dispatch(reg_t mm)$/;"	f	class:syscall_t	typeref:typename:void
display	fesvr/rfb.h	/^  int display;$/;"	m	class:rfb_t	typeref:typename:int
dist	Makefile.in	/^dist :$/;"	t
dist	build/Makefile	/^dist :$/;"	t
dist_dir	Makefile.in	/^dist_dir := $(project_name)-$(project_ver)$/;"	m
dist_dir	build/Makefile	/^dist_dir := $(project_name)-$(project_ver)$/;"	m
dist_files	Makefile.in	/^dist_files = \\$/;"	m
dist_files	build/Makefile	/^dist_files = \\$/;"	m
dist_tgz	Makefile.in	/^dist_tgz := $(project_name)-$(project_ver).tar.gz$/;"	m
dist_tgz	build/Makefile	/^dist_tgz := $(project_name)-$(project_ver).tar.gz$/;"	m
distcheck	Makefile.in	/^distcheck : dist$/;"	t
distcheck	build/Makefile	/^distcheck : dist$/;"	t
distclean	Makefile.in	/^distclean :$/;"	t
distclean	build/Makefile	/^distclean :$/;"	t
dm	riscv/jtag_dtm.h	/^    debug_module_t *dm;$/;"	m	class:jtag_dtm_t	typeref:typename:debug_module_t *
dmactive	riscv/debug_module.h	/^  bool dmactive;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
dmcontrol	riscv/debug_module.h	/^    dmcontrol_t dmcontrol;$/;"	m	class:debug_module_t	typeref:typename:dmcontrol_t
dmcontrol_t	riscv/debug_module.h	/^} dmcontrol_t;$/;"	t	typeref:struct:__anon5c7e8f3d0208
dmdata	riscv/debug_module.h	/^    uint8_t dmdata[datasize * 4];$/;"	m	class:debug_module_t	typeref:typename:uint8_t[]
dmi	riscv/jtag_dtm.h	/^    uint64_t dmi;$/;"	m	class:jtag_dtm_t	typeref:typename:uint64_t
dmi_read	riscv/debug_module.cc	/^bool debug_module_t::dmi_read(unsigned address, uint32_t *value)$/;"	f	class:debug_module_t	typeref:typename:bool
dmi_write	riscv/debug_module.cc	/^bool debug_module_t::dmi_write(unsigned address, uint32_t value)$/;"	f	class:debug_module_t	typeref:typename:bool
dmode	riscv/processor.h	/^  bool dmode;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
dmstatus	riscv/debug_module.h	/^    dmstatus_t dmstatus;$/;"	m	class:debug_module_t	typeref:typename:dmstatus_t
dmstatus_t	riscv/debug_module.h	/^} dmstatus_t;$/;"	t	typeref:struct:__anon5c7e8f3d0308
do_chroot	fesvr/syscall.cc	/^std::string syscall_t::do_chroot(const char* fn)$/;"	f	class:syscall_t	typeref:typename:std::string
do_command	fesvr/dtm.cc	/^uint32_t dtm_t::do_command(dtm_t::req r)$/;"	f	class:dtm_t	typeref:typename:uint32_t
do_mask	riscv/insns/vcompress_vm.h	/^  bool do_mask = (P.VU.elt<uint64_t>(rs1_num, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
do_mask	riscv/insns/viota_m.h	/^  bool do_mask = (P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
do_mask	riscv/insns/vmsbf_m.h	/^  bool do_mask = (P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
do_mask	riscv/insns/vmsif_m.h	/^  bool do_mask = (P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
do_mask	riscv/insns/vmsof_m.h	/^  bool do_mask = (P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
do_mask	riscv/insns/vpopc_m.h	/^    bool do_mask = (P.VU.elt<uint32_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
done	fesvr/htif.cc	/^bool htif_t::done()$/;"	f	class:htif_t	typeref:typename:bool
dpc	riscv/processor.h	/^  reg_t dpc;$/;"	m	struct:state_t	typeref:typename:reg_t
dr	riscv/jtag_dtm.h	/^    uint64_t dr;$/;"	m	class:jtag_dtm_t	typeref:typename:uint64_t
dr_length	riscv/jtag_dtm.h	/^    unsigned dr_length;$/;"	m	class:jtag_dtm_t	typeref:typename:unsigned
dret	riscv/opcodes.h	/^static uint32_t dret(void) { return MATCH_DRET; }$/;"	f	typeref:typename:uint32_t
dscratch0	riscv/processor.h	/^  reg_t dscratch0, dscratch1;$/;"	m	struct:state_t	typeref:typename:reg_t
dscratch1	riscv/processor.h	/^  reg_t dscratch0, dscratch1;$/;"	m	struct:state_t	typeref:typename:reg_t
dtb	riscv/sim.h	/^  std::string dtb;$/;"	m	class:sim_t	typeref:typename:std::string
dtb_enabled	riscv/sim.h	/^  bool dtb_enabled;$/;"	m	class:sim_t	typeref:typename:bool
dtb_file	riscv/sim.h	/^  std::string dtb_file;$/;"	m	class:sim_t	typeref:typename:std::string
dtm_t	fesvr/dtm.cc	/^dtm_t::dtm_t(int argc, char** argv)$/;"	f	class:dtm_t
dtm_t	fesvr/dtm.h	/^class dtm_t : public htif_t$/;"	c
dtmcontrol	riscv/jtag_dtm.h	/^    uint32_t dtmcontrol;$/;"	m	class:jtag_dtm_t	typeref:typename:uint32_t
dts	riscv/sim.h	/^  std::string dts;$/;"	m	class:sim_t	typeref:typename:std::string
dts_compile	riscv/dts.cc	/^std::string dts_compile(const std::string& dts)$/;"	f	typeref:typename:std::string
dummy_rocc_t	customext/dummy_rocc.cc	/^  dummy_rocc_t()$/;"	f	class:dummy_rocc_t	file:
dummy_rocc_t	customext/dummy_rocc.cc	/^class dummy_rocc_t : public rocc_t$/;"	c	file:
dynamic_devices	fesvr/htif.h	/^  std::vector<device_t*> dynamic_devices;$/;"	m	class:htif_t	typeref:typename:std::vector<device_t * >
e1024	riscv/decode.h	/^#define e1024 /;"	d
e128	riscv/decode.h	/^#define e128 /;"	d
e16	riscv/decode.h	/^#define e16 /;"	d
e256	riscv/decode.h	/^#define e256 /;"	d
e32	riscv/decode.h	/^#define e32 /;"	d
e512	riscv/decode.h	/^#define e512 /;"	d
e64	riscv/decode.h	/^#define e64 /;"	d
e8	riscv/decode.h	/^#define e8 /;"	d
e_ehsize	fesvr/elf.h	/^  uint16_t e_ehsize;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_ehsize	fesvr/elf.h	/^  uint16_t e_ehsize;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_entry	fesvr/elf.h	/^  uint32_t e_entry;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint32_t
e_entry	fesvr/elf.h	/^  uint64_t e_entry;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint64_t
e_flags	fesvr/elf.h	/^  uint32_t e_flags;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint32_t
e_flags	fesvr/elf.h	/^  uint32_t e_flags;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint32_t
e_ident	fesvr/elf.h	/^  uint8_t  e_ident[16];$/;"	m	struct:__anon9d3644870108	typeref:typename:uint8_t[16]
e_ident	fesvr/elf.h	/^  uint8_t  e_ident[16];$/;"	m	struct:__anon9d3644870508	typeref:typename:uint8_t[16]
e_machine	fesvr/elf.h	/^  uint16_t e_machine;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_machine	fesvr/elf.h	/^  uint16_t e_machine;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_phentsize	fesvr/elf.h	/^  uint16_t e_phentsize;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_phentsize	fesvr/elf.h	/^  uint16_t e_phentsize;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_phnum	fesvr/elf.h	/^  uint16_t e_phnum;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_phnum	fesvr/elf.h	/^  uint16_t e_phnum;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_phoff	fesvr/elf.h	/^  uint32_t e_phoff;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint32_t
e_phoff	fesvr/elf.h	/^  uint64_t e_phoff;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint64_t
e_shentsize	fesvr/elf.h	/^  uint16_t e_shentsize;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_shentsize	fesvr/elf.h	/^  uint16_t e_shentsize;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_shnum	fesvr/elf.h	/^  uint16_t e_shnum;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_shnum	fesvr/elf.h	/^  uint16_t e_shnum;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_shoff	fesvr/elf.h	/^  uint32_t e_shoff;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint32_t
e_shoff	fesvr/elf.h	/^  uint64_t e_shoff;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint64_t
e_shstrndx	fesvr/elf.h	/^  uint16_t e_shstrndx;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_shstrndx	fesvr/elf.h	/^  uint16_t e_shstrndx;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_type	fesvr/elf.h	/^  uint16_t e_type;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint16_t
e_type	fesvr/elf.h	/^  uint16_t e_type;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint16_t
e_version	fesvr/elf.h	/^  uint32_t e_version;$/;"	m	struct:__anon9d3644870108	typeref:typename:uint32_t
e_version	fesvr/elf.h	/^  uint32_t e_version;$/;"	m	struct:__anon9d3644870508	typeref:typename:uint32_t
ebreak	riscv/opcodes.h	/^static uint32_t ebreak(void) { return MATCH_EBREAK; }$/;"	f	typeref:typename:uint32_t
ebreak_c	riscv/opcodes.h	/^static uint32_t ebreak_c(void) { return MATCH_C_EBREAK; }$/;"	f	typeref:typename:uint32_t
ebreakh	riscv/processor.h	/^  bool ebreakh;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
ebreakm	riscv/processor.h	/^  bool ebreakm;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
ebreaks	riscv/processor.h	/^  bool ebreaks;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
ebreaku	riscv/processor.h	/^  bool ebreaku;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
elt	riscv/processor.h	/^        T& elt(reg_t vReg, reg_t n, bool is_write = false){$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:T &
empty	riscv/memtracer.h	/^  bool empty() { return list.empty(); }$/;"	f	class:memtracer_list_t	typeref:typename:bool
enable_log_commits	riscv/processor.cc	/^void processor_t::enable_log_commits()$/;"	f	class:processor_t	typeref:typename:void
enter_debug_mode	riscv/processor.cc	/^void processor_t::enter_debug_mode(uint8_t cause)$/;"	f	class:processor_t	typeref:typename:void
entry	debug_rom/debug_rom.S	/^entry:$/;"	l
entry	fesvr/htif.h	/^  reg_t entry;$/;"	m	class:htif_t	typeref:typename:reg_t
entry_loop	debug_rom/debug_rom.S	/^entry_loop:$/;"	l
enumerate_harts	fesvr/dtm.cc	/^int dtm_t::enumerate_harts() {$/;"	f	class:dtm_t	typeref:typename:int
error	fesvr/option_parser.cc	/^void option_parser_t::error(const char* msg, const char* argv0, const char* arg)$/;"	f	class:option_parser_t	typeref:typename:void
error	riscv/debug_module.h	/^  unsigned error;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:unsigned
error	spike_dasm/spike_dasm_option_parser.cc	/^void option_parser_t::error(const char* msg, const char* argv0, const char* arg)$/;"	f	class:option_parser_t	typeref:typename:void
exception	debug_rom/debug_rom.S	/^exception:$/;"	l
execute	riscv/processor.h	/^  bool execute;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
execute_commands	riscv/remote_bitbang.cc	/^void remote_bitbang_t::execute_commands()$/;"	f	class:remote_bitbang_t	typeref:typename:void
execute_insn	riscv/execute.cc	/^static reg_t execute_insn(processor_t* p, reg_t pc, insn_fetch_t fetch)$/;"	f	typeref:typename:reg_t	file:
executions	riscv/processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t	typeref:typename:uint64_t
exit_code	fesvr/htif.cc	/^int htif_t::exit_code()$/;"	f	class:htif_t	typeref:typename:int
exitcode	fesvr/htif.h	/^  int exitcode;$/;"	m	class:htif_t	typeref:typename:int
exp	softfloat/internals.h	/^struct exp16_sig32 { int_fast16_t exp; uint_fast32_t sig; };$/;"	m	struct:exp16_sig32	typeref:typename:int_fast16_t
exp	softfloat/internals.h	/^struct exp16_sig64 { int_fast16_t exp; uint_fast64_t sig; };$/;"	m	struct:exp16_sig64	typeref:typename:int_fast16_t
exp	softfloat/internals.h	/^struct exp32_sig128 { int_fast32_t exp; struct uint128 sig; };$/;"	m	struct:exp32_sig128	typeref:typename:int_fast32_t
exp	softfloat/internals.h	/^struct exp32_sig64 { int_fast32_t exp; uint64_t sig; };$/;"	m	struct:exp32_sig64	typeref:typename:int_fast32_t
exp	softfloat/internals.h	/^struct exp8_sig16 { int_fast8_t exp; uint_fast16_t sig; };$/;"	m	struct:exp8_sig16	typeref:typename:int_fast8_t
exp16_sig32	softfloat/internals.h	/^struct exp16_sig32 { int_fast16_t exp; uint_fast32_t sig; };$/;"	s
exp16_sig64	softfloat/internals.h	/^struct exp16_sig64 { int_fast16_t exp; uint_fast64_t sig; };$/;"	s
exp32_sig128	softfloat/internals.h	/^struct exp32_sig128 { int_fast32_t exp; struct uint128 sig; };$/;"	s
exp32_sig64	softfloat/internals.h	/^struct exp32_sig64 { int_fast32_t exp; uint64_t sig; };$/;"	s
exp8_sig16	softfloat/internals.h	/^struct exp8_sig16 { int_fast8_t exp; uint_fast16_t sig; };$/;"	s
expExtF80UI64	softfloat/internals.h	/^#define expExtF80UI64(/;"	d
expF128UI64	softfloat/internals.h	/^#define expF128UI64(/;"	d
expF128UI96	softfloat/internals.h	/^#define expF128UI96(/;"	d
expF16UI	softfloat/internals.h	/^#define expF16UI(/;"	d
expF32UI	softfloat/internals.h	/^#define expF32UI(/;"	d
expF64UI	softfloat/internals.h	/^#define expF64UI(/;"	d
ext	riscv/processor.h	/^  extension_t* ext;$/;"	m	class:processor_t	typeref:typename:extension_t *
extF80M_extF80	softfloat/internals.h	/^union extF80M_extF80 { struct extFloat80M fM; extFloat80_t f; };$/;"	u
extF80_roundingPrecision	softfloat/softfloat_state.c	/^THREAD_LOCAL uint_fast8_t extF80_roundingPrecision = 80;$/;"	v	typeref:typename:THREAD_LOCAL uint_fast8_t
extFloat80M	softfloat/softfloat_types.h	/^struct extFloat80M { uint16_t signExp; uint64_t signif; };$/;"	s
extFloat80M	softfloat/softfloat_types.h	/^struct extFloat80M { uint64_t signif; uint16_t signExp; };$/;"	s
extFloat80_t	softfloat/softfloat_types.h	/^typedef struct extFloat80M extFloat80_t;$/;"	t	typeref:struct:extFloat80M
extension_t	riscv/extension.h	/^class extension_t$/;"	c
extension_table	riscv/processor.h	/^  std::vector<bool> extension_table;$/;"	m	class:processor_t	typeref:typename:std::vector<bool>
extensions	riscv/extensions.cc	/^static std::map<std::string, std::function<extension_t*()>>& extensions()$/;"	f	typeref:typename:std::map<std::string,std::function<extension_t * ()>> &	file:
extra	softfloat/primitiveTypes.h	/^struct uint128_extra { struct uint128 v; uint64_t extra; };$/;"	m	struct:uint128_extra	typeref:typename:uint64_t
extra	softfloat/primitiveTypes.h	/^struct uint128_extra { uint64_t extra; struct uint128 v; };$/;"	m	struct:uint128_extra	typeref:typename:uint64_t
extra	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t extra, v; };$/;"	m	struct:uint64_extra	typeref:typename:uint64_t
extra	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t v, extra; };$/;"	m	struct:uint64_extra	typeref:typename:uint64_t
extract64	riscv/arith.h	/^static inline uint64_t extract64(uint64_t val, int pos, int len)$/;"	f	typeref:typename:uint64_t
extract64	softfloat/fall_reciprocal.c	/^static inline uint64_t extract64(uint64_t val, int pos, int len)$/;"	f	typeref:typename:uint64_t	file:
f	softfloat/internals.h	/^union extF80M_extF80 { struct extFloat80M fM; extFloat80_t f; };$/;"	m	union:extF80M_extF80	typeref:typename:extFloat80_t
f	softfloat/internals.h	/^union ui128_f128 { struct uint128 ui; float128_t f; };$/;"	m	union:ui128_f128	typeref:typename:float128_t
f	softfloat/internals.h	/^union ui16_f16 { uint16_t ui; float16_t f; };$/;"	m	union:ui16_f16	typeref:typename:float16_t
f	softfloat/internals.h	/^union ui32_f32 { uint32_t ui; float32_t f; };$/;"	m	union:ui32_f32	typeref:typename:float32_t
f	softfloat/internals.h	/^union ui64_f64 { uint64_t ui; float64_t f; };$/;"	m	union:ui64_f64	typeref:typename:float64_t
f128	riscv/decode.h	/^inline float128_t f128(freg_t r) { return r; }$/;"	f	typeref:typename:float128_t
f128_add	softfloat/f128_add.c	/^float128_t f128_add( float128_t a, float128_t b )$/;"	f	typeref:typename:float128_t
f128_classify	softfloat/f128_classify.c	/^uint_fast16_t f128_classify( float128_t a )$/;"	f	typeref:typename:uint_fast16_t
f128_div	softfloat/f128_div.c	/^float128_t f128_div( float128_t a, float128_t b )$/;"	f	typeref:typename:float128_t
f128_eq	softfloat/f128_eq.c	/^bool f128_eq( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_eq_signaling	softfloat/f128_eq_signaling.c	/^bool f128_eq_signaling( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_isSignalingNaN	softfloat/f128_isSignalingNaN.c	/^bool f128_isSignalingNaN( float128_t a )$/;"	f	typeref:typename:bool
f128_le	softfloat/f128_le.c	/^bool f128_le( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_le_quiet	softfloat/f128_le_quiet.c	/^bool f128_le_quiet( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_lt	softfloat/f128_lt.c	/^bool f128_lt( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_lt_quiet	softfloat/f128_lt_quiet.c	/^bool f128_lt_quiet( float128_t a, float128_t b )$/;"	f	typeref:typename:bool
f128_mul	softfloat/f128_mul.c	/^float128_t f128_mul( float128_t a, float128_t b )$/;"	f	typeref:typename:float128_t
f128_mulAdd	softfloat/f128_mulAdd.c	/^float128_t f128_mulAdd( float128_t a, float128_t b, float128_t c )$/;"	f	typeref:typename:float128_t
f128_negate	riscv/decode.h	/^inline freg_t f128_negate(freg_t a)$/;"	f	typeref:typename:freg_t
f128_rem	softfloat/f128_rem.c	/^float128_t f128_rem( float128_t a, float128_t b )$/;"	f	typeref:typename:float128_t
f128_roundToInt	softfloat/f128_roundToInt.c	/^ f128_roundToInt( float128_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:float128_t
f128_sqrt	softfloat/f128_sqrt.c	/^float128_t f128_sqrt( float128_t a )$/;"	f	typeref:typename:float128_t
f128_sub	softfloat/f128_sub.c	/^float128_t f128_sub( float128_t a, float128_t b )$/;"	f	typeref:typename:float128_t
f128_to_f16	softfloat/f128_to_f16.c	/^float16_t f128_to_f16( float128_t a )$/;"	f	typeref:typename:float16_t
f128_to_f32	softfloat/f128_to_f32.c	/^float32_t f128_to_f32( float128_t a )$/;"	f	typeref:typename:float32_t
f128_to_f64	softfloat/f128_to_f64.c	/^float64_t f128_to_f64( float128_t a )$/;"	f	typeref:typename:float64_t
f128_to_i32	softfloat/f128_to_i32.c	/^int_fast32_t f128_to_i32( float128_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast32_t
f128_to_i32_r_minMag	softfloat/f128_to_i32_r_minMag.c	/^int_fast32_t f128_to_i32_r_minMag( float128_t a, bool exact )$/;"	f	typeref:typename:int_fast32_t
f128_to_i64	softfloat/f128_to_i64.c	/^int_fast64_t f128_to_i64( float128_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast64_t
f128_to_i64_r_minMag	softfloat/f128_to_i64_r_minMag.c	/^int_fast64_t f128_to_i64_r_minMag( float128_t a, bool exact )$/;"	f	typeref:typename:int_fast64_t
f128_to_ui32	softfloat/f128_to_ui32.c	/^ f128_to_ui32( float128_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f128_to_ui32_r_minMag	softfloat/f128_to_ui32_r_minMag.c	/^uint_fast32_t f128_to_ui32_r_minMag( float128_t a, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f128_to_ui64	softfloat/f128_to_ui64.c	/^ f128_to_ui64( float128_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f128_to_ui64_r_minMag	softfloat/f128_to_ui64_r_minMag.c	/^uint_fast64_t f128_to_ui64_r_minMag( float128_t a, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f16	riscv/decode.h	/^inline float16_t f16(freg_t r) { return f16(unboxF16(r)); }$/;"	f	typeref:typename:float16_t
f16	riscv/decode.h	/^inline float16_t f16(uint16_t v) { return { v }; }$/;"	f	typeref:typename:float16_t
f16_add	softfloat/f16_add.c	/^float16_t f16_add( float16_t a, float16_t b )$/;"	f	typeref:typename:float16_t
f16_classify	softfloat/f16_classify.c	/^uint_fast16_t f16_classify( float16_t a )$/;"	f	typeref:typename:uint_fast16_t
f16_div	softfloat/f16_div.c	/^float16_t f16_div( float16_t a, float16_t b )$/;"	f	typeref:typename:float16_t
f16_eq	softfloat/f16_eq.c	/^bool f16_eq( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_eq_signaling	softfloat/f16_eq_signaling.c	/^bool f16_eq_signaling( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_isSignalingNaN	softfloat/f16_isSignalingNaN.c	/^bool f16_isSignalingNaN( float16_t a )$/;"	f	typeref:typename:bool
f16_le	softfloat/f16_le.c	/^bool f16_le( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_le_quiet	softfloat/f16_le_quiet.c	/^bool f16_le_quiet( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_lt	softfloat/f16_lt.c	/^bool f16_lt( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_lt_quiet	softfloat/f16_lt_quiet.c	/^bool f16_lt_quiet( float16_t a, float16_t b )$/;"	f	typeref:typename:bool
f16_mul	softfloat/f16_mul.c	/^float16_t f16_mul( float16_t a, float16_t b )$/;"	f	typeref:typename:float16_t
f16_mulAdd	softfloat/f16_mulAdd.c	/^float16_t f16_mulAdd( float16_t a, float16_t b, float16_t c )$/;"	f	typeref:typename:float16_t
f16_recip7	softfloat/fall_reciprocal.c	/^float16_t f16_recip7(float16_t in)$/;"	f	typeref:typename:float16_t
f16_rem	softfloat/f16_rem.c	/^float16_t f16_rem( float16_t a, float16_t b )$/;"	f	typeref:typename:float16_t
f16_roundToInt	softfloat/f16_roundToInt.c	/^float16_t f16_roundToInt( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:float16_t
f16_rsqrte7	softfloat/fall_reciprocal.c	/^float16_t f16_rsqrte7(float16_t in)$/;"	f	typeref:typename:float16_t
f16_sqrt	softfloat/f16_sqrt.c	/^float16_t f16_sqrt( float16_t a )$/;"	f	typeref:typename:float16_t
f16_sub	softfloat/f16_sub.c	/^float16_t f16_sub( float16_t a, float16_t b )$/;"	f	typeref:typename:float16_t
f16_to_f128	softfloat/f16_to_f128.c	/^float128_t f16_to_f128( float16_t a )$/;"	f	typeref:typename:float128_t
f16_to_f32	softfloat/f16_to_f32.c	/^float32_t f16_to_f32( float16_t a )$/;"	f	typeref:typename:float32_t
f16_to_f64	softfloat/f16_to_f64.c	/^float64_t f16_to_f64( float16_t a )$/;"	f	typeref:typename:float64_t
f16_to_i16	softfloat/f16_to_i16.c	/^int_fast16_t f16_to_i16( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast16_t
f16_to_i32	softfloat/f16_to_i32.c	/^int_fast32_t f16_to_i32( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast32_t
f16_to_i32_r_minMag	softfloat/f16_to_i32_r_minMag.c	/^int_fast32_t f16_to_i32_r_minMag( float16_t a, bool exact )$/;"	f	typeref:typename:int_fast32_t
f16_to_i64	softfloat/f16_to_i64.c	/^int_fast64_t f16_to_i64( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast64_t
f16_to_i64_r_minMag	softfloat/f16_to_i64_r_minMag.c	/^int_fast64_t f16_to_i64_r_minMag( float16_t a, bool exact )$/;"	f	typeref:typename:int_fast64_t
f16_to_i8	softfloat/f16_to_i8.c	/^int_fast8_t f16_to_i8( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast8_t
f16_to_ui16	softfloat/f16_to_ui16.c	/^uint_fast16_t f16_to_ui16( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast16_t
f16_to_ui32	softfloat/f16_to_ui32.c	/^uint_fast32_t f16_to_ui32( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f16_to_ui32_r_minMag	softfloat/f16_to_ui32_r_minMag.c	/^uint_fast32_t f16_to_ui32_r_minMag( float16_t a, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f16_to_ui64	softfloat/f16_to_ui64.c	/^uint_fast64_t f16_to_ui64( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f16_to_ui64_r_minMag	softfloat/f16_to_ui64_r_minMag.c	/^uint_fast64_t f16_to_ui64_r_minMag( float16_t a, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f16_to_ui8	softfloat/f16_to_ui8.c	/^uint_fast8_t f16_to_ui8( float16_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast8_t
f32	riscv/decode.h	/^inline float32_t f32(freg_t r) { return f32(unboxF32(r)); }$/;"	f	typeref:typename:float32_t
f32	riscv/decode.h	/^inline float32_t f32(uint32_t v) { return { v }; }$/;"	f	typeref:typename:float32_t
f32_add	softfloat/f32_add.c	/^float32_t f32_add( float32_t a, float32_t b )$/;"	f	typeref:typename:float32_t
f32_classify	softfloat/f32_classify.c	/^uint_fast16_t f32_classify( float32_t a )$/;"	f	typeref:typename:uint_fast16_t
f32_div	softfloat/f32_div.c	/^float32_t f32_div( float32_t a, float32_t b )$/;"	f	typeref:typename:float32_t
f32_eq	softfloat/f32_eq.c	/^bool f32_eq( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_eq_signaling	softfloat/f32_eq_signaling.c	/^bool f32_eq_signaling( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_isSignalingNaN	softfloat/f32_isSignalingNaN.c	/^bool f32_isSignalingNaN( float32_t a )$/;"	f	typeref:typename:bool
f32_le	softfloat/f32_le.c	/^bool f32_le( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_le_quiet	softfloat/f32_le_quiet.c	/^bool f32_le_quiet( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_lt	softfloat/f32_lt.c	/^bool f32_lt( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_lt_quiet	softfloat/f32_lt_quiet.c	/^bool f32_lt_quiet( float32_t a, float32_t b )$/;"	f	typeref:typename:bool
f32_mul	softfloat/f32_mul.c	/^float32_t f32_mul( float32_t a, float32_t b )$/;"	f	typeref:typename:float32_t
f32_mulAdd	softfloat/f32_mulAdd.c	/^float32_t f32_mulAdd( float32_t a, float32_t b, float32_t c )$/;"	f	typeref:typename:float32_t
f32_recip7	softfloat/fall_reciprocal.c	/^float32_t f32_recip7(float32_t in)$/;"	f	typeref:typename:float32_t
f32_rem	softfloat/f32_rem.c	/^float32_t f32_rem( float32_t a, float32_t b )$/;"	f	typeref:typename:float32_t
f32_roundToInt	softfloat/f32_roundToInt.c	/^float32_t f32_roundToInt( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:float32_t
f32_rsqrte7	softfloat/fall_reciprocal.c	/^float32_t f32_rsqrte7(float32_t in)$/;"	f	typeref:typename:float32_t
f32_sqrt	softfloat/f32_sqrt.c	/^float32_t f32_sqrt( float32_t a )$/;"	f	typeref:typename:float32_t
f32_sub	softfloat/f32_sub.c	/^float32_t f32_sub( float32_t a, float32_t b )$/;"	f	typeref:typename:float32_t
f32_to_f128	softfloat/f32_to_f128.c	/^float128_t f32_to_f128( float32_t a )$/;"	f	typeref:typename:float128_t
f32_to_f16	softfloat/f32_to_f16.c	/^float16_t f32_to_f16( float32_t a )$/;"	f	typeref:typename:float16_t
f32_to_f64	softfloat/f32_to_f64.c	/^float64_t f32_to_f64( float32_t a )$/;"	f	typeref:typename:float64_t
f32_to_i16	softfloat/f32_to_i16.c	/^int_fast16_t f32_to_i16( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast16_t
f32_to_i32	softfloat/f32_to_i32.c	/^int_fast32_t f32_to_i32( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast32_t
f32_to_i32_r_minMag	softfloat/f32_to_i32_r_minMag.c	/^int_fast32_t f32_to_i32_r_minMag( float32_t a, bool exact )$/;"	f	typeref:typename:int_fast32_t
f32_to_i64	softfloat/f32_to_i64.c	/^int_fast64_t f32_to_i64( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast64_t
f32_to_i64_r_minMag	softfloat/f32_to_i64_r_minMag.c	/^int_fast64_t f32_to_i64_r_minMag( float32_t a, bool exact )$/;"	f	typeref:typename:int_fast64_t
f32_to_ui16	softfloat/f32_to_ui16.c	/^uint_fast16_t f32_to_ui16( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast16_t
f32_to_ui32	softfloat/f32_to_ui32.c	/^uint_fast32_t f32_to_ui32( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f32_to_ui32_r_minMag	softfloat/f32_to_ui32_r_minMag.c	/^uint_fast32_t f32_to_ui32_r_minMag( float32_t a, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f32_to_ui64	softfloat/f32_to_ui64.c	/^uint_fast64_t f32_to_ui64( float32_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f32_to_ui64_r_minMag	softfloat/f32_to_ui64_r_minMag.c	/^uint_fast64_t f32_to_ui64_r_minMag( float32_t a, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f64	riscv/decode.h	/^inline float64_t f64(freg_t r) { return f64(unboxF64(r)); }$/;"	f	typeref:typename:float64_t
f64	riscv/decode.h	/^inline float64_t f64(uint64_t v) { return { v }; }$/;"	f	typeref:typename:float64_t
f64_add	softfloat/f64_add.c	/^float64_t f64_add( float64_t a, float64_t b )$/;"	f	typeref:typename:float64_t
f64_classify	softfloat/f64_classify.c	/^uint_fast16_t f64_classify( float64_t a )$/;"	f	typeref:typename:uint_fast16_t
f64_div	softfloat/f64_div.c	/^float64_t f64_div( float64_t a, float64_t b )$/;"	f	typeref:typename:float64_t
f64_eq	softfloat/f64_eq.c	/^bool f64_eq( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_eq_signaling	softfloat/f64_eq_signaling.c	/^bool f64_eq_signaling( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_isSignalingNaN	softfloat/f64_isSignalingNaN.c	/^bool f64_isSignalingNaN( float64_t a )$/;"	f	typeref:typename:bool
f64_le	softfloat/f64_le.c	/^bool f64_le( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_le_quiet	softfloat/f64_le_quiet.c	/^bool f64_le_quiet( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_lt	softfloat/f64_lt.c	/^bool f64_lt( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_lt_quiet	softfloat/f64_lt_quiet.c	/^bool f64_lt_quiet( float64_t a, float64_t b )$/;"	f	typeref:typename:bool
f64_mul	softfloat/f64_mul.c	/^float64_t f64_mul( float64_t a, float64_t b )$/;"	f	typeref:typename:float64_t
f64_mulAdd	softfloat/f64_mulAdd.c	/^float64_t f64_mulAdd( float64_t a, float64_t b, float64_t c )$/;"	f	typeref:typename:float64_t
f64_recip7	softfloat/fall_reciprocal.c	/^float64_t f64_recip7(float64_t in)$/;"	f	typeref:typename:float64_t
f64_rem	softfloat/f64_rem.c	/^float64_t f64_rem( float64_t a, float64_t b )$/;"	f	typeref:typename:float64_t
f64_roundToInt	softfloat/f64_roundToInt.c	/^float64_t f64_roundToInt( float64_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:float64_t
f64_rsqrte7	softfloat/fall_reciprocal.c	/^float64_t f64_rsqrte7(float64_t in)$/;"	f	typeref:typename:float64_t
f64_sqrt	softfloat/f64_sqrt.c	/^float64_t f64_sqrt( float64_t a )$/;"	f	typeref:typename:float64_t
f64_sub	softfloat/f64_sub.c	/^float64_t f64_sub( float64_t a, float64_t b )$/;"	f	typeref:typename:float64_t
f64_to_f128	softfloat/f64_to_f128.c	/^float128_t f64_to_f128( float64_t a )$/;"	f	typeref:typename:float128_t
f64_to_f16	softfloat/f64_to_f16.c	/^float16_t f64_to_f16( float64_t a )$/;"	f	typeref:typename:float16_t
f64_to_f32	softfloat/f64_to_f32.c	/^float32_t f64_to_f32( float64_t a )$/;"	f	typeref:typename:float32_t
f64_to_i32	softfloat/f64_to_i32.c	/^int_fast32_t f64_to_i32( float64_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast32_t
f64_to_i32_r_minMag	softfloat/f64_to_i32_r_minMag.c	/^int_fast32_t f64_to_i32_r_minMag( float64_t a, bool exact )$/;"	f	typeref:typename:int_fast32_t
f64_to_i64	softfloat/f64_to_i64.c	/^int_fast64_t f64_to_i64( float64_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:int_fast64_t
f64_to_i64_r_minMag	softfloat/f64_to_i64_r_minMag.c	/^int_fast64_t f64_to_i64_r_minMag( float64_t a, bool exact )$/;"	f	typeref:typename:int_fast64_t
f64_to_ui32	softfloat/f64_to_ui32.c	/^uint_fast32_t f64_to_ui32( float64_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f64_to_ui32_r_minMag	softfloat/f64_to_ui32_r_minMag.c	/^uint_fast32_t f64_to_ui32_r_minMag( float64_t a, bool exact )$/;"	f	typeref:typename:uint_fast32_t
f64_to_ui64	softfloat/f64_to_ui64.c	/^uint_fast64_t f64_to_ui64( float64_t a, uint_fast8_t roundingMode, bool exact )$/;"	f	typeref:typename:uint_fast64_t
f64_to_ui64_r_minMag	softfloat/f64_to_ui64_r_minMag.c	/^uint_fast64_t f64_to_ui64_r_minMag( float64_t a, bool exact )$/;"	f	typeref:typename:uint_fast64_t
fM	softfloat/internals.h	/^union extF80M_extF80 { struct extFloat80M fM; extFloat80_t f; };$/;"	m	union:extF80M_extF80	typeref:struct:extFloat80M
fa_cache_sim_t	riscv/cachesim.cc	/^fa_cache_sim_t::fa_cache_sim_t(size_t ways, size_t linesz, const char* name)$/;"	f	class:fa_cache_sim_t
fa_cache_sim_t	riscv/cachesim.h	/^class fa_cache_sim_t : public cache_sim_t$/;"	c
fb1	fesvr/rfb.h	/^  volatile char* volatile fb1;$/;"	m	class:rfb_t	typeref:typename:volatile char * volatile
fb2	fesvr/rfb.h	/^  volatile char* volatile fb2;$/;"	m	class:rfb_t	typeref:typename:volatile char * volatile
fb_bytes	fesvr/rfb.h	/^  size_t fb_bytes() { return size_t(width) * height * bpp\/8; }$/;"	f	class:rfb_t	typeref:typename:size_t
fb_update	fesvr/rfb.cc	/^void rfb_t::fb_update(const std::string& s)$/;"	f	class:rfb_t	typeref:typename:void
fd	fesvr/device.h	/^  int fd;$/;"	m	class:disk_t	typeref:typename:int
fds	fesvr/syscall.h	/^  fds_t fds;$/;"	m	class:syscall_t	typeref:typename:fds_t
fds	fesvr/syscall.h	/^  std::vector<int> fds;$/;"	m	class:fds_t	typeref:typename:std::vector<int>
fds_t	fesvr/syscall.h	/^class fds_t$/;"	c
fdt16_t	fdt/libfdt_env.h	/^typedef uint16_t FDT_BITWISE fdt16_t;$/;"	t	typeref:typename:uint16_t FDT_BITWISE
fdt16_to_cpu	fdt/libfdt_env.h	/^static inline uint16_t fdt16_to_cpu(fdt16_t x)$/;"	f	typeref:typename:uint16_t
fdt32_ld	fdt/libfdt.h	/^static inline uint32_t fdt32_ld(const fdt32_t *p)$/;"	f	typeref:typename:uint32_t
fdt32_st	fdt/libfdt.h	/^static inline void fdt32_st(void *property, uint32_t value)$/;"	f	typeref:typename:void
fdt32_t	fdt/libfdt_env.h	/^typedef uint32_t FDT_BITWISE fdt32_t;$/;"	t	typeref:typename:uint32_t FDT_BITWISE
fdt32_to_cpu	fdt/libfdt_env.h	/^static inline uint32_t fdt32_to_cpu(fdt32_t x)$/;"	f	typeref:typename:uint32_t
fdt64_ld	fdt/libfdt.h	/^static inline uint64_t fdt64_ld(const fdt64_t *p)$/;"	f	typeref:typename:uint64_t
fdt64_st	fdt/libfdt.h	/^static inline void fdt64_st(void *property, uint64_t value)$/;"	f	typeref:typename:void
fdt64_t	fdt/libfdt_env.h	/^typedef uint64_t FDT_BITWISE fdt64_t;$/;"	t	typeref:typename:uint64_t FDT_BITWISE
fdt64_to_cpu	fdt/libfdt_env.h	/^static inline uint64_t fdt64_to_cpu(fdt64_t x)$/;"	f	typeref:typename:uint64_t
fdt_add_mem_rsv	fdt/fdt_rw.c	/^int fdt_add_mem_rsv(void *fdt, uint64_t address, uint64_t size)$/;"	f	typeref:typename:int
fdt_add_property_	fdt/fdt_rw.c	/^static int fdt_add_property_(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int	file:
fdt_add_reservemap_entry	fdt/fdt_sw.c	/^int fdt_add_reservemap_entry(void *fdt, uint64_t addr, uint64_t size)$/;"	f	typeref:typename:int
fdt_add_string_	fdt/fdt_sw.c	/^static int fdt_add_string_(void *fdt, const char *s)$/;"	f	typeref:typename:int	file:
fdt_add_subnode	fdt/fdt_rw.c	/^int fdt_add_subnode(void *fdt, int parentoffset, const char *name)$/;"	f	typeref:typename:int
fdt_add_subnode_namelen	fdt/fdt_rw.c	/^int fdt_add_subnode_namelen(void *fdt, int parentoffset,$/;"	f	typeref:typename:int
fdt_address_cells	fdt/fdt_addresses.c	/^int fdt_address_cells(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_appendprop	fdt/fdt_rw.c	/^int fdt_appendprop(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_appendprop_addrrange	fdt/fdt_addresses.c	/^int fdt_appendprop_addrrange(void *fdt, int parent, int nodeoffset,$/;"	f	typeref:typename:int
fdt_appendprop_cell	fdt/libfdt.h	/^static inline int fdt_appendprop_cell(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_appendprop_string	fdt/libfdt.h	/^#define fdt_appendprop_string(/;"	d
fdt_appendprop_u32	fdt/libfdt.h	/^static inline int fdt_appendprop_u32(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_appendprop_u64	fdt/libfdt.h	/^static inline int fdt_appendprop_u64(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_begin_node	fdt/fdt_sw.c	/^int fdt_begin_node(void *fdt, const char *name)$/;"	f	typeref:typename:int
fdt_blocks_misordered_	fdt/fdt_rw.c	/^static int fdt_blocks_misordered_(const void *fdt,$/;"	f	typeref:typename:int	file:
fdt_boot_cpuid_phys	fdt/libfdt.h	/^#define fdt_boot_cpuid_phys(/;"	d
fdt_c_srcs	build/fdt.mk	/^fdt_c_srcs = \\$/;"	m
fdt_c_srcs	fdt/fdt.mk.in	/^fdt_c_srcs = \\$/;"	m
fdt_cells	fdt/fdt_addresses.c	/^static int fdt_cells(const void *fdt, int nodeoffset, const char *name)$/;"	f	typeref:typename:int	file:
fdt_check_full	fdt/fdt_ro.c	/^int fdt_check_full(const void *fdt, size_t bufsize)$/;"	f	typeref:typename:int
fdt_check_header	fdt/fdt.c	/^int fdt_check_header(const void *fdt)$/;"	f	typeref:typename:int
fdt_check_node_offset_	fdt/fdt.c	/^int fdt_check_node_offset_(const void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_check_prop_offset_	fdt/fdt.c	/^int fdt_check_prop_offset_(const void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_create	fdt/fdt_sw.c	/^int fdt_create(void *buf, int bufsize)$/;"	f	typeref:typename:int
fdt_create_empty_tree	fdt/fdt_empty_tree.c	/^int fdt_create_empty_tree(void *buf, int bufsize)$/;"	f	typeref:typename:int
fdt_create_with_flags	fdt/fdt_sw.c	/^int fdt_create_with_flags(void *buf, int bufsize, uint32_t flags)$/;"	f	typeref:typename:int
fdt_data_size_	fdt/fdt_rw.c	/^static inline int fdt_data_size_(void *fdt)$/;"	f	typeref:typename:int	file:
fdt_del_last_string_	fdt/fdt_rw.c	/^static void fdt_del_last_string_(void *fdt, const char *s)$/;"	f	typeref:typename:void	file:
fdt_del_last_string_	fdt/fdt_sw.c	/^static void fdt_del_last_string_(void *fdt, const char *s)$/;"	f	typeref:typename:void	file:
fdt_del_mem_rsv	fdt/fdt_rw.c	/^int fdt_del_mem_rsv(void *fdt, int n)$/;"	f	typeref:typename:int
fdt_del_node	fdt/fdt_rw.c	/^int fdt_del_node(void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_delprop	fdt/fdt_rw.c	/^int fdt_delprop(void *fdt, int nodeoffset, const char *name)$/;"	f	typeref:typename:int
fdt_end_node	fdt/fdt_sw.c	/^int fdt_end_node(void *fdt)$/;"	f	typeref:typename:int
fdt_errtabent	fdt/fdt_strerror.c	/^struct fdt_errtabent {$/;"	s	file:
fdt_errtable	fdt/fdt_strerror.c	/^static struct fdt_errtabent fdt_errtable[] = {$/;"	v	typeref:struct:fdt_errtabent[]	file:
fdt_find_add_string_	fdt/fdt_rw.c	/^static int fdt_find_add_string_(void *fdt, const char *s, int *allocated)$/;"	f	typeref:typename:int	file:
fdt_find_add_string_	fdt/fdt_sw.c	/^static int fdt_find_add_string_(void *fdt, const char *s, int *allocated)$/;"	f	typeref:typename:int	file:
fdt_find_max_phandle	fdt/fdt_ro.c	/^int fdt_find_max_phandle(const void *fdt, uint32_t *phandle)$/;"	f	typeref:typename:int
fdt_find_string_	fdt/fdt.c	/^const char *fdt_find_string_(const char *strtab, int tabsize, const char *s)$/;"	f	typeref:typename:const char *
fdt_finish	fdt/fdt_sw.c	/^int fdt_finish(void *fdt)$/;"	f	typeref:typename:int
fdt_finish_reservemap	fdt/fdt_sw.c	/^int fdt_finish_reservemap(void *fdt)$/;"	f	typeref:typename:int
fdt_first_property_offset	fdt/fdt_ro.c	/^int fdt_first_property_offset(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_first_subnode	fdt/fdt.c	/^int fdt_first_subnode(const void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_for_each_property_offset	fdt/libfdt.h	/^#define fdt_for_each_property_offset(/;"	d
fdt_for_each_subnode	fdt/libfdt.h	/^#define fdt_for_each_subnode(/;"	d
fdt_generate_phandle	fdt/fdt_ro.c	/^int fdt_generate_phandle(const void *fdt, uint32_t *phandle)$/;"	f	typeref:typename:int
fdt_get_alias	fdt/fdt_ro.c	/^const char *fdt_get_alias(const void *fdt, const char *name)$/;"	f	typeref:typename:const char *
fdt_get_alias_namelen	fdt/fdt_ro.c	/^const char *fdt_get_alias_namelen(const void *fdt,$/;"	f	typeref:typename:const char *
fdt_get_header	fdt/libfdt.h	/^#define fdt_get_header(/;"	d
fdt_get_max_phandle	fdt/libfdt.h	/^static inline uint32_t fdt_get_max_phandle(const void *fdt)$/;"	f	typeref:typename:uint32_t
fdt_get_mem_rsv	fdt/fdt_ro.c	/^int fdt_get_mem_rsv(const void *fdt, int n, uint64_t *address, uint64_t *size)$/;"	f	typeref:typename:int
fdt_get_name	fdt/fdt_ro.c	/^const char *fdt_get_name(const void *fdt, int nodeoffset, int *len)$/;"	f	typeref:typename:const char *
fdt_get_node_addr_size	riscv/dts.cc	/^static int fdt_get_node_addr_size(void *fdt, int node, reg_t *addr,$/;"	f	typeref:typename:int	file:
fdt_get_path	fdt/fdt_ro.c	/^int fdt_get_path(const void *fdt, int nodeoffset, char *buf, int buflen)$/;"	f	typeref:typename:int
fdt_get_phandle	fdt/fdt_ro.c	/^uint32_t fdt_get_phandle(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:uint32_t
fdt_get_property	fdt/fdt_ro.c	/^const struct fdt_property *fdt_get_property(const void *fdt,$/;"	f	typeref:typename:const struct fdt_property *
fdt_get_property_by_offset	fdt/fdt_ro.c	/^const struct fdt_property *fdt_get_property_by_offset(const void *fdt,$/;"	f	typeref:typename:const struct fdt_property *
fdt_get_property_by_offset_	fdt/fdt_ro.c	/^static const struct fdt_property *fdt_get_property_by_offset_(const void *fdt,$/;"	f	typeref:typename:const struct fdt_property *	file:
fdt_get_property_namelen	fdt/fdt_ro.c	/^const struct fdt_property *fdt_get_property_namelen(const void *fdt,$/;"	f	typeref:typename:const struct fdt_property *
fdt_get_property_namelen_	fdt/fdt_ro.c	/^static const struct fdt_property *fdt_get_property_namelen_(const void *fdt,$/;"	f	typeref:typename:const struct fdt_property *	file:
fdt_get_property_w	fdt/libfdt.h	/^static inline struct fdt_property *fdt_get_property_w(void *fdt, int nodeoffset,$/;"	f	typeref:struct:fdt_property *
fdt_get_string	fdt/fdt_ro.c	/^const char *fdt_get_string(const void *fdt, int stroffset, int *lenp)$/;"	f	typeref:typename:const char *
fdt_getprop	fdt/fdt_ro.c	/^const void *fdt_getprop(const void *fdt, int nodeoffset,$/;"	f	typeref:typename:const void *
fdt_getprop_by_offset	fdt/fdt_ro.c	/^const void *fdt_getprop_by_offset(const void *fdt, int offset,$/;"	f	typeref:typename:const void *
fdt_getprop_namelen	fdt/fdt_ro.c	/^const void *fdt_getprop_namelen(const void *fdt, int nodeoffset,$/;"	f	typeref:typename:const void *
fdt_getprop_namelen_w	fdt/libfdt.h	/^static inline void *fdt_getprop_namelen_w(void *fdt, int nodeoffset,$/;"	f	typeref:typename:void *
fdt_getprop_w	fdt/libfdt.h	/^static inline void *fdt_getprop_w(void *fdt, int nodeoffset,$/;"	f	typeref:typename:void *
fdt_grab_space_	fdt/fdt_sw.c	/^static void *fdt_grab_space_(void *fdt, size_t len)$/;"	f	typeref:typename:void *	file:
fdt_hdrs	build/fdt.mk	/^fdt_hdrs = \\$/;"	m
fdt_hdrs	fdt/fdt.mk.in	/^fdt_hdrs = \\$/;"	m
fdt_header	fdt/fdt.h	/^struct fdt_header {$/;"	s
fdt_header_size	fdt/libfdt.h	/^static inline size_t fdt_header_size(const void *fdt)$/;"	f	typeref:typename:size_t
fdt_header_size_	fdt/fdt.c	/^size_t fdt_header_size_(uint32_t version)$/;"	f	typeref:typename:size_t
fdt_last_comp_version	fdt/libfdt.h	/^#define fdt_last_comp_version(/;"	d
fdt_magic	fdt/libfdt.h	/^#define fdt_magic(/;"	d
fdt_mem_rsv	fdt/fdt_ro.c	/^static const struct fdt_reserve_entry *fdt_mem_rsv(const void *fdt, int n)$/;"	f	typeref:typename:const struct fdt_reserve_entry *	file:
fdt_mem_rsv_	fdt/libfdt_internal.h	/^static inline const struct fdt_reserve_entry *fdt_mem_rsv_(const void *fdt, int n)$/;"	f	typeref:typename:const struct fdt_reserve_entry *
fdt_mem_rsv_w_	fdt/libfdt_internal.h	/^static inline struct fdt_reserve_entry *fdt_mem_rsv_w_(void *fdt, int n)$/;"	f	typeref:struct:fdt_reserve_entry *
fdt_move	fdt/fdt.c	/^int fdt_move(const void *fdt, void *buf, int bufsize)$/;"	f	typeref:typename:int
fdt_next_node	fdt/fdt.c	/^int fdt_next_node(const void *fdt, int offset, int *depth)$/;"	f	typeref:typename:int
fdt_next_property_offset	fdt/fdt_ro.c	/^int fdt_next_property_offset(const void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_next_subnode	fdt/fdt.c	/^int fdt_next_subnode(const void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_next_tag	fdt/fdt.c	/^uint32_t fdt_next_tag(const void *fdt, int startoffset, int *nextoffset)$/;"	f	typeref:typename:uint32_t
fdt_node_check_compatible	fdt/fdt_ro.c	/^int fdt_node_check_compatible(const void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_node_depth	fdt/fdt_ro.c	/^int fdt_node_depth(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_node_end_offset_	fdt/fdt_wip.c	/^int fdt_node_end_offset_(void *fdt, int offset)$/;"	f	typeref:typename:int
fdt_node_header	fdt/fdt.h	/^struct fdt_node_header {$/;"	s
fdt_node_offset_by_compatible	fdt/fdt_ro.c	/^int fdt_node_offset_by_compatible(const void *fdt, int startoffset,$/;"	f	typeref:typename:int
fdt_node_offset_by_phandle	fdt/fdt_ro.c	/^int fdt_node_offset_by_phandle(const void *fdt, uint32_t phandle)$/;"	f	typeref:typename:int
fdt_node_offset_by_prop_value	fdt/fdt_ro.c	/^int fdt_node_offset_by_prop_value(const void *fdt, int startoffset,$/;"	f	typeref:typename:int
fdt_nodename_eq_	fdt/fdt_ro.c	/^static int fdt_nodename_eq_(const void *fdt, int offset,$/;"	f	typeref:typename:int	file:
fdt_nop_node	fdt/fdt_wip.c	/^int fdt_nop_node(void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_nop_property	fdt/fdt_wip.c	/^int fdt_nop_property(void *fdt, int nodeoffset, const char *name)$/;"	f	typeref:typename:int
fdt_nop_region_	fdt/fdt_wip.c	/^static void fdt_nop_region_(void *start, int len)$/;"	f	typeref:typename:void	file:
fdt_num_mem_rsv	fdt/fdt_ro.c	/^int fdt_num_mem_rsv(const void *fdt)$/;"	f	typeref:typename:int
fdt_off_dt_strings	fdt/libfdt.h	/^#define fdt_off_dt_strings(/;"	d
fdt_off_dt_struct	fdt/libfdt.h	/^#define fdt_off_dt_struct(/;"	d
fdt_off_mem_rsvmap	fdt/libfdt.h	/^#define fdt_off_mem_rsvmap(/;"	d
fdt_offset_ptr	fdt/fdt.c	/^const void *fdt_offset_ptr(const void *fdt, int offset, unsigned int len)$/;"	f	typeref:typename:const void *
fdt_offset_ptr_	fdt/libfdt_internal.h	/^static inline const void *fdt_offset_ptr_(const void *fdt, int offset)$/;"	f	typeref:typename:const void *
fdt_offset_ptr_w	fdt/libfdt.h	/^static inline void *fdt_offset_ptr_w(void *fdt, int offset, int checklen)$/;"	f	typeref:typename:void *
fdt_offset_ptr_w_	fdt/libfdt_internal.h	/^static inline void *fdt_offset_ptr_w_(void *fdt, int offset)$/;"	f	typeref:typename:void *
fdt_open_into	fdt/fdt_rw.c	/^int fdt_open_into(const void *fdt, void *buf, int bufsize)$/;"	f	typeref:typename:int
fdt_overlay_apply	fdt/fdt_overlay.c	/^int fdt_overlay_apply(void *fdt, void *fdto)$/;"	f	typeref:typename:int
fdt_pack	fdt/fdt_rw.c	/^int fdt_pack(void *fdt)$/;"	f	typeref:typename:int
fdt_packblocks_	fdt/fdt_rw.c	/^static void fdt_packblocks_(const char *old, char *new,$/;"	f	typeref:typename:void	file:
fdt_parent_offset	fdt/fdt_ro.c	/^int fdt_parent_offset(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_parse_clint	riscv/dts.cc	/^int fdt_parse_clint(void *fdt, reg_t *clint_addr,$/;"	f	typeref:typename:int
fdt_parse_pmp_alignment	riscv/dts.cc	/^int fdt_parse_pmp_alignment(void *fdt, reg_t *pmp_align,$/;"	f	typeref:typename:int
fdt_parse_pmp_num	riscv/dts.cc	/^int fdt_parse_pmp_num(void *fdt, reg_t *pmp_num, const char *compatible)$/;"	f	typeref:typename:int
fdt_path_offset	fdt/fdt_ro.c	/^int fdt_path_offset(const void *fdt, const char *path)$/;"	f	typeref:typename:int
fdt_path_offset_namelen	fdt/fdt_ro.c	/^int fdt_path_offset_namelen(const void *fdt, const char *path, int namelen)$/;"	f	typeref:typename:int
fdt_property	fdt/fdt.h	/^struct fdt_property {$/;"	s
fdt_property	fdt/fdt_sw.c	/^int fdt_property(void *fdt, const char *name, const void *val, int len)$/;"	f	typeref:typename:int
fdt_property_cell	fdt/libfdt.h	/^static inline int fdt_property_cell(void *fdt, const char *name, uint32_t val)$/;"	f	typeref:typename:int
fdt_property_placeholder	fdt/fdt_sw.c	/^int fdt_property_placeholder(void *fdt, const char *name, int len, void **valp)$/;"	f	typeref:typename:int
fdt_property_string	fdt/libfdt.h	/^#define fdt_property_string(/;"	d
fdt_property_u32	fdt/libfdt.h	/^static inline int fdt_property_u32(void *fdt, const char *name, uint32_t val)$/;"	f	typeref:typename:int
fdt_property_u64	fdt/libfdt.h	/^static inline int fdt_property_u64(void *fdt, const char *name, uint64_t val)$/;"	f	typeref:typename:int
fdt_reserve_entry	fdt/fdt.h	/^struct fdt_reserve_entry {$/;"	s
fdt_resize	fdt/fdt_sw.c	/^int fdt_resize(void *fdt, void *buf, int bufsize)$/;"	f	typeref:typename:int
fdt_resize_property_	fdt/fdt_rw.c	/^static int fdt_resize_property_(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int	file:
fdt_ro_probe_	fdt/fdt.c	/^int32_t fdt_ro_probe_(const void *fdt)$/;"	f	typeref:typename:int32_t
fdt_rw_probe_	fdt/fdt_rw.c	/^static int fdt_rw_probe_(void *fdt)$/;"	f	typeref:typename:int	file:
fdt_set_hdr_	fdt/libfdt.h	/^#define fdt_set_hdr_(/;"	d
fdt_set_name	fdt/fdt_rw.c	/^int fdt_set_name(void *fdt, int nodeoffset, const char *name)$/;"	f	typeref:typename:int
fdt_setprop	fdt/fdt_rw.c	/^int fdt_setprop(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_setprop_cell	fdt/libfdt.h	/^static inline int fdt_setprop_cell(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_setprop_empty	fdt/libfdt.h	/^#define fdt_setprop_empty(/;"	d
fdt_setprop_inplace	fdt/fdt_wip.c	/^int fdt_setprop_inplace(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_setprop_inplace_cell	fdt/libfdt.h	/^static inline int fdt_setprop_inplace_cell(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_setprop_inplace_namelen_partial	fdt/fdt_wip.c	/^int fdt_setprop_inplace_namelen_partial(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_setprop_inplace_u32	fdt/libfdt.h	/^static inline int fdt_setprop_inplace_u32(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_setprop_inplace_u64	fdt/libfdt.h	/^static inline int fdt_setprop_inplace_u64(void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_setprop_placeholder	fdt/fdt_rw.c	/^int fdt_setprop_placeholder(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_setprop_string	fdt/libfdt.h	/^#define fdt_setprop_string(/;"	d
fdt_setprop_u32	fdt/libfdt.h	/^static inline int fdt_setprop_u32(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_setprop_u64	fdt/libfdt.h	/^static inline int fdt_setprop_u64(void *fdt, int nodeoffset, const char *name,$/;"	f	typeref:typename:int
fdt_size_cells	fdt/fdt_addresses.c	/^int fdt_size_cells(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int
fdt_size_dt_strings	fdt/libfdt.h	/^#define fdt_size_dt_strings(/;"	d
fdt_size_dt_struct	fdt/libfdt.h	/^#define fdt_size_dt_struct(/;"	d
fdt_splice_	fdt/fdt_rw.c	/^static int fdt_splice_(void *fdt, void *splicepoint, int oldlen, int newlen)$/;"	f	typeref:typename:int	file:
fdt_splice_mem_rsv_	fdt/fdt_rw.c	/^static int fdt_splice_mem_rsv_(void *fdt, struct fdt_reserve_entry *p,$/;"	f	typeref:typename:int	file:
fdt_splice_string_	fdt/fdt_rw.c	/^static int fdt_splice_string_(void *fdt, int newlen)$/;"	f	typeref:typename:int	file:
fdt_splice_struct_	fdt/fdt_rw.c	/^static int fdt_splice_struct_(void *fdt, void *p,$/;"	f	typeref:typename:int	file:
fdt_strerror	fdt/fdt_strerror.c	/^const char *fdt_strerror(int errval)$/;"	f	typeref:typename:const char *
fdt_string	fdt/fdt_ro.c	/^const char *fdt_string(const void *fdt, int stroffset)$/;"	f	typeref:typename:const char *
fdt_string_eq_	fdt/fdt_ro.c	/^static int fdt_string_eq_(const void *fdt, int stroffset,$/;"	f	typeref:typename:int	file:
fdt_stringlist_contains	fdt/fdt_ro.c	/^int fdt_stringlist_contains(const char *strlist, int listlen, const char *str)$/;"	f	typeref:typename:int
fdt_stringlist_count	fdt/fdt_ro.c	/^int fdt_stringlist_count(const void *fdt, int nodeoffset, const char *property)$/;"	f	typeref:typename:int
fdt_stringlist_get	fdt/fdt_ro.c	/^const char *fdt_stringlist_get(const void *fdt, int nodeoffset,$/;"	f	typeref:typename:const char *
fdt_stringlist_search	fdt/fdt_ro.c	/^int fdt_stringlist_search(const void *fdt, int nodeoffset, const char *property,$/;"	f	typeref:typename:int
fdt_strnlen	fdt/libfdt_env.h	/^static inline size_t fdt_strnlen(const char *string, size_t max_count)$/;"	f	typeref:typename:size_t
fdt_subnode_offset	fdt/fdt_ro.c	/^int fdt_subnode_offset(const void *fdt, int parentoffset,$/;"	f	typeref:typename:int
fdt_subnode_offset_namelen	fdt/fdt_ro.c	/^int fdt_subnode_offset_namelen(const void *fdt, int offset,$/;"	f	typeref:typename:int
fdt_subproject_deps	build/fdt.mk	/^fdt_subproject_deps = \\$/;"	m
fdt_subproject_deps	fdt/fdt.mk.in	/^fdt_subproject_deps = \\$/;"	m
fdt_supernode_atdepth_offset	fdt/fdt_ro.c	/^int fdt_supernode_atdepth_offset(const void *fdt, int nodeoffset,$/;"	f	typeref:typename:int
fdt_sw_probe_	fdt/fdt_sw.c	/^static int fdt_sw_probe_(void *fdt)$/;"	f	typeref:typename:int	file:
fdt_sw_probe_memrsv_	fdt/fdt_sw.c	/^static int fdt_sw_probe_memrsv_(void *fdt)$/;"	f	typeref:typename:int	file:
fdt_sw_probe_struct_	fdt/fdt_sw.c	/^static int fdt_sw_probe_struct_(void *fdt)$/;"	f	typeref:typename:int	file:
fdt_totalsize	fdt/libfdt.h	/^#define fdt_totalsize(/;"	d
fdt_version	fdt/libfdt.h	/^#define fdt_version(/;"	d
fence_i	fesvr/dtm.cc	/^void dtm_t::fence_i()$/;"	f	class:dtm_t	typeref:typename:void
fence_i	riscv/opcodes.h	/^static uint32_t fence_i(void)$/;"	f	typeref:typename:uint32_t
fesvr_CFLAGS	build/fesvr.mk	/^fesvr_CFLAGS = -fPIC$/;"	m
fesvr_CFLAGS	fesvr/fesvr.mk.in	/^fesvr_CFLAGS = -fPIC$/;"	m
fesvr_hdrs	build/fesvr.mk	/^fesvr_hdrs = \\$/;"	m
fesvr_hdrs	fesvr/fesvr.mk.in	/^fesvr_hdrs = \\$/;"	m
fesvr_install_hdrs	build/fesvr.mk	/^fesvr_install_hdrs = $(fesvr_hdrs)$/;"	m
fesvr_install_hdrs	fesvr/fesvr.mk.in	/^fesvr_install_hdrs = $(fesvr_hdrs)$/;"	m
fesvr_install_lib	build/fesvr.mk	/^fesvr_install_lib = yes$/;"	m
fesvr_install_lib	fesvr/fesvr.mk.in	/^fesvr_install_lib = yes$/;"	m
fesvr_install_prog_srcs	build/fesvr.mk	/^fesvr_install_prog_srcs = \\$/;"	m
fesvr_install_prog_srcs	fesvr/fesvr.mk.in	/^fesvr_install_prog_srcs = \\$/;"	m
fesvr_srcs	build/fesvr.mk	/^fesvr_srcs = \\$/;"	m
fesvr_srcs	fesvr/fesvr.mk.in	/^fesvr_srcs = \\$/;"	m
fetch_slow_path	riscv/mmu.cc	/^tlb_entry_t mmu_t::fetch_slow_path(reg_t vaddr)$/;"	f	class:mmu_t	typeref:typename:tlb_entry_t
fetch_temp	riscv/mmu.h	/^  uint16_t fetch_temp;$/;"	m	class:mmu_t	typeref:typename:uint16_t
fflags	riscv/processor.h	/^  uint32_t fflags;$/;"	m	struct:state_t	typeref:typename:uint32_t
field_width	riscv/debug_module.cc	/^static unsigned field_width(unsigned n)$/;"	f	typeref:typename:unsigned	file:
find_device	riscv/devices.cc	/^std::pair<reg_t, abstract_device_t*> bus_t::find_device(reg_t addr)$/;"	f	class:bus_t	typeref:typename:std::pair<reg_t,abstract_device_t * >
find_extension	riscv/extensions.cc	/^std::function<extension_t*()> find_extension(const char* name)$/;"	f	typeref:typename:std::function<extension_t * ()>
find_file	tests/testlib.py	/^def find_file(path):$/;"	f
flag	fesvr/context.h	/^  volatile int flag;$/;"	m	class:context_t	typeref:typename:volatile int
fld	riscv/opcodes.h	/^static uint32_t fld(unsigned int dest, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
float128_t	softfloat/softfloat_types.h	/^typedef struct { uint64_t v[2]; } float128_t;$/;"	t	typeref:struct:__anon9f490e620408
float16_t	softfloat/softfloat_types.h	/^typedef struct { uint16_t v; } float16_t;$/;"	t	typeref:struct:__anon9f490e620108
float32_t	softfloat/softfloat_types.h	/^typedef struct { uint32_t v; } float32_t;$/;"	t	typeref:struct:__anon9f490e620208
float64_t	softfloat/softfloat_types.h	/^typedef struct { uint64_t v; } float64_t;$/;"	t	typeref:struct:__anon9f490e620308
flush_icache	riscv/mmu.cc	/^void mmu_t::flush_icache()$/;"	f	class:mmu_t	typeref:typename:void
flush_tlb	riscv/mmu.cc	/^void mmu_t::flush_tlb()$/;"	f	class:mmu_t	typeref:typename:void
flw	riscv/opcodes.h	/^static uint32_t flw(unsigned int dest, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
fmt	disasm/disasm.cc	/^  const char *fmt;$/;"	m	struct:__anon961b4d0a3108	typeref:typename:const char *	file:
fork_spike	spike_main/xspike.cc	/^static pid_t fork_spike(int tty_fd, int argc, char** argv)$/;"	f	typeref:typename:pid_t	file:
fork_xterm	spike_main/xspike.cc	/^static pid_t fork_xterm(int* tty_fd)$/;"	f	typeref:typename:pid_t	file:
fpr	riscv/interactive.cc	/^union fpr$/;"	u	file:
fpr_name	disasm/regnames.cc	/^const char* fpr_name[] = {$/;"	v	typeref:typename:const char * []
fracF128UI64	softfloat/internals.h	/^#define fracF128UI64(/;"	d
fracF128UI96	softfloat/internals.h	/^#define fracF128UI96(/;"	d
fracF16UI	softfloat/internals.h	/^#define fracF16UI(/;"	d
fracF32UI	softfloat/internals.h	/^#define fracF32UI(/;"	d
fracF64UI	softfloat/internals.h	/^#define fracF64UI(/;"	d
frd	disasm/disasm.cc	/^} frd;$/;"	v	typeref:struct:__anon961b4d0a0708
freg	riscv/decode.h	/^inline freg_t freg(float128_t f) { return f; }$/;"	f	typeref:typename:freg_t
freg	riscv/decode.h	/^inline freg_t freg(float16_t f) { return { ((uint64_t)-1 << 16) | f.v, (uint64_t)-1 }; }$/;"	f	typeref:typename:freg_t
freg	riscv/decode.h	/^inline freg_t freg(float32_t f) { return { ((uint64_t)-1 << 32) | f.v, (uint64_t)-1 }; }$/;"	f	typeref:typename:freg_t
freg	riscv/decode.h	/^inline freg_t freg(float64_t f) { return { f.v, (uint64_t)-1 }; }$/;"	f	typeref:typename:freg_t
freg_t	riscv/decode.h	/^typedef float128_t freg_t;$/;"	t	typeref:typename:float128_t
freq_hz	riscv/devices.h	/^  uint64_t freq_hz;$/;"	m	class:clint_t	typeref:typename:uint64_t
frm	riscv/processor.h	/^  uint32_t frm;$/;"	m	struct:state_t	typeref:typename:uint32_t
from_be	riscv/byteorder.h	/^template<typename T> static inline T from_be(T n) { return n; }$/;"	f	typeref:typename:T
from_be	riscv/byteorder.h	/^template<typename T> static inline T from_be(T n) { return swap(n); }$/;"	f	typeref:typename:T
from_le	riscv/byteorder.h	/^template<typename T> static inline T from_le(T n) { return n; }$/;"	f	typeref:typename:T
from_le	riscv/byteorder.h	/^template<typename T> static inline T from_le(T n) { return swap(n); }$/;"	f	typeref:typename:T
fromhost_addr	fesvr/htif.h	/^  addr_t fromhost_addr;$/;"	m	class:htif_t	typeref:typename:addr_t
frs1	disasm/disasm.cc	/^} frs1;$/;"	v	typeref:struct:__anon961b4d0a0808
frs2	disasm/disasm.cc	/^} frs2;$/;"	v	typeref:struct:__anon961b4d0a0908
frs3	disasm/disasm.cc	/^} frs3;$/;"	v	typeref:struct:__anon961b4d0a0a08
fsd	riscv/opcodes.h	/^static uint32_t fsd(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
fsgnj128	riscv/decode.h	/^inline freg_t fsgnj128(freg_t a, freg_t b, bool n, bool x)$/;"	f	typeref:typename:freg_t
fsgnj16	riscv/decode.h	/^#define fsgnj16(/;"	d
fsgnj32	riscv/decode.h	/^#define fsgnj32(/;"	d
fsgnj64	riscv/decode.h	/^#define fsgnj64(/;"	d
fsw	riscv/opcodes.h	/^static uint32_t fsw(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
func	fesvr/context.h	/^  void (*func)(void*);$/;"	m	class:context_t	typeref:typename:void (*)(void *)
func	fesvr/option_parser.h	/^    std::function<void(const char*)> func;$/;"	m	struct:option_parser_t::option_t	typeref:typename:std::function<void (const char *)>
func	riscv/mmu.h	/^  insn_func_t func;$/;"	m	struct:insn_fetch_t	typeref:typename:insn_func_t
funct	riscv/rocc.h	/^  unsigned funct : 7;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:7
get	riscv/log_file.h	/^  FILE *get() { return wrapped_file ? wrapped_file.get() : stderr; }$/;"	f	class:log_file_t	typeref:typename:FILE *
get_core	riscv/interactive.cc	/^processor_t *sim_t::get_core(const std::string& i)$/;"	f	class:sim_t
get_core	riscv/sim.h	/^  processor_t* get_core(size_t i) { return procs.at(i); }$/;"	f	class:sim_t	typeref:typename:processor_t *
get_csr	riscv/processor.cc	/^reg_t processor_t::get_csr(int which, insn_t insn, bool write, bool peek)$/;"	f	class:processor_t	typeref:typename:reg_t
get_csr	riscv/processor.h	/^  reg_t get_csr(int which) { return get_csr(which, insn_t(0), false, true); }$/;"	f	class:processor_t	typeref:typename:reg_t
get_disasms	customext/cflush.cc	/^  std::vector<disasm_insn_t*> get_disasms() {$/;"	f	class:cflush_t	typeref:typename:std::vector<disasm_insn_t * >	file:
get_disasms	riscv/rocc.cc	/^std::vector<disasm_insn_t*> rocc_t::get_disasms()$/;"	f	class:rocc_t	typeref:typename:std::vector<disasm_insn_t * >
get_disassembler	riscv/processor.h	/^  const disassembler_t* get_disassembler() { return disassembler; }$/;"	f	class:processor_t	typeref:typename:const disassembler_t *
get_dts	riscv/sim.h	/^  const char* get_dts() { if (dts.empty()) reset(); return dts.c_str(); }$/;"	f	class:sim_t	typeref:typename:const char *
get_elen	riscv/processor.h	/^      reg_t get_elen() { return ELEN; }$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:reg_t
get_entry_point	fesvr/htif.h	/^  reg_t get_entry_point() { return entry; }$/;"	f	class:htif_t	typeref:typename:reg_t
get_extension	riscv/processor.h	/^  extension_t* get_extension() { return ext; }$/;"	f	class:processor_t	typeref:typename:extension_t *
get_field	fesvr/dtm.cc	/^#define get_field(/;"	d	file:
get_field	riscv/decode.h	/^#define get_field(/;"	d
get_file_size	spike_main/spike.cc	/^static std::ifstream::pos_type get_file_size(const char *filename)$/;"	f	typeref:typename:std::ifstream::pos_type	file:
get_flen	riscv/processor.h	/^  unsigned get_flen() {$/;"	f	class:processor_t	typeref:typename:unsigned
get_freg	riscv/interactive.cc	/^freg_t sim_t::get_freg(const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:freg_t
get_id	riscv/processor.h	/^  uint32_t get_id() const { return id; }$/;"	f	class:processor_t	typeref:typename:uint32_t
get_insn_list	build/riscv.mk	/^get_insn_list = $(shell grep ^DECLARE_INSN $(1) | sed 's\/DECLARE_INSN(\\(.*\\),.*,.*)\/\\1\/')$/;"	m
get_insn_list	riscv/riscv.mk.in	/^get_insn_list = $(shell grep ^DECLARE_INSN $(1) | sed 's\/DECLARE_INSN(\\(.*\\),.*,.*)\/\\1\/')$/;"	m
get_instructions	customext/cflush.cc	/^  std::vector<insn_desc_t> get_instructions() {$/;"	f	class:cflush_t	typeref:typename:std::vector<insn_desc_t>	file:
get_instructions	riscv/rocc.cc	/^std::vector<insn_desc_t> rocc_t::get_instructions()$/;"	f	class:rocc_t
get_int_token	riscv/processor.cc	/^static int get_int_token(std::string str, const char delimiter, size_t& pos)$/;"	f	typeref:typename:int	file:
get_isa_string	riscv/processor.h	/^  std::string get_isa_string() { return isa_string; }$/;"	f	class:processor_t	typeref:typename:std::string
get_log_commits_enabled	riscv/processor.h	/^  bool get_log_commits_enabled() const { return log_commits_enabled; }$/;"	f	class:processor_t	typeref:typename:bool
get_log_file	riscv/processor.h	/^  FILE *get_log_file() { return log_file; }$/;"	f	class:processor_t	typeref:typename:FILE *
get_mask	riscv/disasm.h	/^  uint32_t get_mask() const { return mask; }$/;"	f	class:disasm_insn_t	typeref:typename:uint32_t
get_match	riscv/disasm.h	/^  uint32_t get_match() const { return match; }$/;"	f	class:disasm_insn_t	typeref:typename:uint32_t
get_max_xlen	riscv/processor.h	/^  unsigned get_max_xlen() { return max_xlen; }$/;"	f	class:processor_t	typeref:typename:unsigned
get_mem	riscv/interactive.cc	/^reg_t sim_t::get_mem(const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:reg_t
get_mmu	riscv/processor.h	/^  mmu_t* get_mmu() { return mmu; }$/;"	f	class:processor_t	typeref:typename:mmu_t *
get_name	riscv/disasm.h	/^  const char* get_name() const$/;"	f	class:disasm_insn_t	typeref:typename:const char *
get_opcode	build/riscv.mk	/^get_opcode = $(shell grep ^DECLARE_INSN.*\\\\\\<$(2)\\\\\\> $(1) | sed 's\/DECLARE_INSN(.*,\\(.*/;"	m
get_opcode	riscv/riscv.mk.in	/^get_opcode = $(shell grep ^DECLARE_INSN.*\\\\\\<$(2)\\\\\\> $(1) | sed 's\/DECLARE_INSN(.*,\\(.*/;"	m
get_path_len	fdt/fdt_overlay.c	/^static int get_path_len(const void *fdt, int nodeoffset)$/;"	f	typeref:typename:int	file:
get_pc	riscv/interactive.cc	/^reg_t sim_t::get_pc(const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:reg_t
get_reg	riscv/interactive.cc	/^reg_t sim_t::get_reg(const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:reg_t
get_slen	riscv/processor.h	/^      reg_t get_slen() { return VLEN; }$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:reg_t
get_state	riscv/processor.h	/^  state_t* get_state() { return &state; }$/;"	f	class:processor_t	typeref:typename:state_t *
get_string_token	riscv/processor.cc	/^static std::string get_string_token(std::string str, const char delimiter, size_t& pos)$/;"	f	typeref:typename:std::string	file:
get_symbol	fesvr/htif.cc	/^const char* htif_t::get_symbol(uint64_t addr)$/;"	f	class:htif_t	typeref:typename:const char *
get_symbol	riscv/execute.cc	/^const char* processor_t::get_symbol(uint64_t addr)$/;"	f	class:processor_t	typeref:typename:const char *
get_symbol	riscv/sim.cc	/^const char* sim_t::get_symbol(uint64_t addr)$/;"	f	class:sim_t	typeref:typename:const char *
get_tinst	riscv/trap.h	/^  reg_t get_tinst() override { return tinst; }$/;"	f	class:mem_trap_t	typeref:typename:reg_t
get_tinst	riscv/trap.h	/^  virtual reg_t get_tinst() { return 0; }$/;"	f	class:trap_t	typeref:typename:reg_t
get_tval	riscv/trap.h	/^  reg_t get_tval() override { return tval; }$/;"	f	class:insn_trap_t	typeref:typename:reg_t
get_tval	riscv/trap.h	/^  reg_t get_tval() override { return tval; }$/;"	f	class:mem_trap_t	typeref:typename:reg_t
get_tval	riscv/trap.h	/^  virtual reg_t get_tval() { return 0; }$/;"	f	class:trap_t	typeref:typename:reg_t
get_tval2	riscv/trap.h	/^  reg_t get_tval2() override { return tval2; }$/;"	f	class:mem_trap_t	typeref:typename:reg_t
get_tval2	riscv/trap.h	/^  virtual reg_t get_tval2() { return 0; }$/;"	f	class:trap_t	typeref:typename:reg_t
get_vlen	riscv/processor.h	/^      reg_t get_vlen() { return VLEN; }$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:reg_t
get_vround_mode	riscv/processor.h	/^      VRM get_vround_mode() {$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:VRM
get_xlen	fesvr/dtm.cc	/^uint32_t dtm_t::get_xlen()$/;"	f	class:dtm_t	typeref:typename:uint32_t
get_xlen	riscv/processor.h	/^  unsigned get_xlen() { return xlen; }$/;"	f	class:processor_t	typeref:typename:unsigned
gid	fesvr/syscall.cc	/^  uint32_t gid;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
going	debug_rom/debug_rom.S	/^going:$/;"	l
greater	riscv/insns/fmax_d.h	/^bool greater = f64_lt_quiet(f64(FRS2), f64(FRS1)) ||$/;"	v	typeref:typename:bool
greater	riscv/insns/fmax_q.h	/^bool greater = f128_lt_quiet(f128(FRS2), f128(FRS1)) ||$/;"	v	typeref:typename:bool
greater	riscv/insns/fmax_s.h	/^bool greater = f32_lt_quiet(f32(FRS2), f32(FRS1)) ||$/;"	v	typeref:typename:bool
gva	riscv/trap.h	/^  bool gva;$/;"	m	class:mem_trap_t	typeref:typename:bool
h	riscv/processor.h	/^  bool h;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
halt	fesvr/dtm.cc	/^void dtm_t::halt(int hartsel)$/;"	f	class:dtm_t	typeref:typename:void
halt	riscv/processor.h	/^  bool halt;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
halt_on_reset	riscv/processor.h	/^  bool halt_on_reset;$/;"	m	class:processor_t	typeref:typename:bool
halt_request	riscv/processor.h	/^  } halt_request;$/;"	m	class:processor_t	typeref:enum:processor_t::__anon2b80edf10803
halted	riscv/debug_module.h	/^  bool halted;$/;"	m	struct:__anon5c7e8f3d0708	typeref:typename:bool
halted	riscv/processor.h	/^  bool halted() { return state.debug_mode; }$/;"	f	class:processor_t	typeref:typename:bool
haltgroup	riscv/debug_module.h	/^  uint8_t haltgroup;$/;"	m	struct:__anon5c7e8f3d0708	typeref:typename:uint8_t
haltreq	riscv/debug_module.h	/^  bool haltreq;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
handle_command	fesvr/device.cc	/^void device_list_t::handle_command(command_t cmd)$/;"	f	class:device_list_t	typeref:typename:void
handle_command	fesvr/device.cc	/^void device_t::handle_command(command_t cmd)$/;"	f	class:device_t	typeref:typename:void
handle_configure	fesvr/rfb.cc	/^void rfb_t::handle_configure(command_t cmd)$/;"	f	class:rfb_t	typeref:typename:void
handle_identify	fesvr/device.cc	/^void device_t::handle_identify(command_t cmd)$/;"	f	class:device_t	typeref:typename:void
handle_null_command	fesvr/device.cc	/^void device_t::handle_null_command(command_t cmd)$/;"	f	class:device_t	typeref:typename:void
handle_read	fesvr/device.cc	/^void bcd_t::handle_read(command_t cmd)$/;"	f	class:bcd_t	typeref:typename:void
handle_read	fesvr/device.cc	/^void disk_t::handle_read(command_t cmd)$/;"	f	class:disk_t	typeref:typename:void
handle_set_address	fesvr/rfb.cc	/^void rfb_t::handle_set_address(command_t cmd)$/;"	f	class:rfb_t	typeref:typename:void
handle_signal	fesvr/htif.cc	/^static void handle_signal(int sig)$/;"	f	typeref:typename:void	file:
handle_signal	riscv/sim.cc	/^static void handle_signal(int sig)$/;"	f	typeref:typename:void	file:
handle_syscall	fesvr/syscall.cc	/^void syscall_t::handle_syscall(command_t cmd)$/;"	f	class:syscall_t	typeref:typename:void
handle_write	fesvr/device.cc	/^void bcd_t::handle_write(command_t cmd)$/;"	f	class:bcd_t	typeref:typename:void
handle_write	fesvr/device.cc	/^void disk_t::handle_write(command_t cmd)$/;"	f	class:disk_t	typeref:typename:void
hargs	fesvr/htif.h	/^  std::vector<std::string> hargs;$/;"	m	class:htif_t	typeref:typename:std::vector<std::string>
hart_array_mask	riscv/debug_module.h	/^    std::vector<bool> hart_array_mask;$/;"	m	class:debug_module_t	typeref:typename:std::vector<bool>
hart_debug_state_t	riscv/debug_module.h	/^} hart_debug_state_t;$/;"	t	typeref:struct:__anon5c7e8f3d0708
hart_selected	riscv/debug_module.cc	/^bool debug_module_t::hart_selected(unsigned hartid) const$/;"	f	class:debug_module_t	typeref:typename:bool
hart_state	riscv/debug_module.h	/^    std::vector<hart_debug_state_t> hart_state;$/;"	m	class:debug_module_t	typeref:typename:std::vector<hart_debug_state_t>
hartreset	riscv/debug_module.h	/^  bool hartreset;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
hartsel	riscv/debug_module.h	/^  unsigned hartsel;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:unsigned
hartsellen	riscv/debug_module.h	/^    unsigned hartsellen = 10;$/;"	m	class:debug_module_t	typeref:typename:unsigned
has_gva	riscv/trap.h	/^  bool has_gva() override { return gva; }$/;"	f	class:mem_trap_t	typeref:typename:bool
has_gva	riscv/trap.h	/^  virtual bool has_gva() { return false; }$/;"	f	class:trap_t	typeref:typename:bool
has_one	riscv/insns/viota_m.h	/^  bool has_one = false;$/;"	v	typeref:typename:bool
has_one	riscv/insns/vmsbf_m.h	/^bool has_one = false;$/;"	v	typeref:typename:bool
has_one	riscv/insns/vmsif_m.h	/^bool has_one = false;$/;"	v	typeref:typename:bool
has_one	riscv/insns/vmsof_m.h	/^bool has_one = false;$/;"	v	typeref:typename:bool
has_tinst	riscv/trap.h	/^  bool has_tinst() override { return true; }$/;"	f	class:mem_trap_t	typeref:typename:bool
has_tinst	riscv/trap.h	/^  virtual bool has_tinst() { return false; }$/;"	f	class:trap_t	typeref:typename:bool
has_tval	riscv/trap.h	/^  bool has_tval() override { return true; }$/;"	f	class:insn_trap_t	typeref:typename:bool
has_tval	riscv/trap.h	/^  bool has_tval() override { return true; }$/;"	f	class:mem_trap_t	typeref:typename:bool
has_tval	riscv/trap.h	/^  virtual bool has_tval() { return false; }$/;"	f	class:trap_t	typeref:typename:bool
has_tval2	riscv/trap.h	/^  bool has_tval2() override { return true; }$/;"	f	class:mem_trap_t	typeref:typename:bool
has_tval2	riscv/trap.h	/^  virtual bool has_tval2() { return false; }$/;"	f	class:trap_t	typeref:typename:bool
hasel	riscv/debug_module.h	/^  bool hasel;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
have_reservation	riscv/insns/sc_d.h	/^bool have_reservation = MMU.check_load_reservation(RS1, 8);$/;"	v	typeref:typename:bool
have_reservation	riscv/insns/sc_w.h	/^bool have_reservation = MMU.check_load_reservation(RS1, 4);$/;"	v	typeref:typename:bool
havereset	riscv/debug_module.h	/^  bool havereset;$/;"	m	struct:__anon5c7e8f3d0708	typeref:typename:bool
hawindowsel	riscv/debug_module.h	/^    uint16_t hawindowsel;$/;"	m	class:debug_module_t	typeref:typename:uint16_t
hcounteren	riscv/processor.h	/^  uint32_t hcounteren;$/;"	m	struct:state_t	typeref:typename:uint32_t
hedeleg	riscv/processor.h	/^  reg_t hedeleg;$/;"	m	struct:state_t	typeref:typename:reg_t
height	fesvr/rfb.h	/^  uint16_t height;$/;"	m	class:rfb_t	typeref:typename:uint16_t
help	fesvr/option_parser.h	/^  void help(void (*helpm)(void)) { helpmsg = helpm; }$/;"	f	class:option_parser_t	typeref:typename:void
help	riscv/cachesim.cc	/^static void help()$/;"	f	typeref:typename:void	file:
help	spike_main/spike.cc	/^static void help(int exit_code = 1)$/;"	f	typeref:typename:void	file:
helpmsg	fesvr/option_parser.h	/^  void (*helpmsg)(void);$/;"	m	class:option_parser_t	typeref:typename:void (*)(void)
hgatp	riscv/processor.h	/^  reg_t hgatp;$/;"	m	struct:state_t	typeref:typename:reg_t
hi	riscv/insns/pack.h	/^reg_t hi = zext_xlen(RS2 << (xlen\/2));$/;"	v	typeref:typename:reg_t
hi	riscv/insns/packh.h	/^reg_t hi = zext_xlen(RS2 << (xlen-8)) >> (xlen-16);$/;"	v	typeref:typename:reg_t
hi	riscv/insns/packu.h	/^reg_t hi = zext_xlen(RS2) >> (xlen\/2) << (xlen\/2);$/;"	v	typeref:typename:reg_t
hi	riscv/insns/packuw.h	/^reg_t hi = zext32(RS2) >> 16 << 16;$/;"	v	typeref:typename:reg_t
hi	riscv/insns/packw.h	/^reg_t hi = zext32(RS2 << 16);$/;"	v	typeref:typename:reg_t
hideleg	riscv/processor.h	/^  reg_t hideleg;$/;"	m	struct:state_t	typeref:typename:reg_t
histogram	riscv/riscv.ac	/^AC_ARG_ENABLE([histogram], AS_HELP_STRING([--enable-histogram], [Enable PC histogram generation]/;"	e
histogram_enabled	riscv/processor.h	/^  bool histogram_enabled;$/;"	m	class:processor_t	typeref:typename:bool
histogram_enabled	riscv/sim.h	/^  bool histogram_enabled; \/\/ provide a histogram of PCs$/;"	m	class:sim_t	typeref:typename:bool
hook	riscv/memtracer.h	/^  void hook(memtracer_t* h)$/;"	f	class:memtracer_list_t	typeref:typename:void
host	fesvr/dtm.h	/^  context_t host;$/;"	m	class:dtm_t	typeref:typename:context_t
host	fesvr/htif_pthread.h	/^  context_t host;$/;"	m	class:htif_pthread_t	typeref:typename:context_t
host	fesvr/tsi.h	/^  context_t host;$/;"	m	class:tsi_t	typeref:typename:context_t
host	riscv/sim.h	/^  context_t* host;$/;"	m	class:sim_t	typeref:typename:context_t *
host_args	fesvr/htif.h	/^  const std::vector<std::string>& host_args() { return hargs; }$/;"	f	class:htif_t	typeref:typename:const std::vector<std::string> &
host_offset	riscv/mmu.h	/^  char* host_offset;$/;"	m	struct:tlb_entry_t	typeref:typename:char *
host_thread	fesvr/tsi.cc	/^void tsi_t::host_thread(void *arg)$/;"	f	class:tsi_t	typeref:typename:void
host_thread_main	fesvr/dtm.cc	/^void host_thread_main(void* arg)$/;"	f	typeref:typename:void
hstatus	riscv/processor.h	/^  reg_t hstatus;$/;"	m	struct:state_t	typeref:typename:reg_t
ht_data	fesvr/htif_pthread.h	/^  std::deque<char> ht_data;$/;"	m	class:htif_pthread_t	typeref:typename:std::deque<char>
htif	fesvr/htif.cc	/^    htif_t* htif;$/;"	m	class:htif_t::load_payload::preload_aware_memif_t	typeref:typename:htif_t *	file:
htif	fesvr/syscall.h	/^  htif_t* htif;$/;"	m	class:syscall_t	typeref:typename:htif_t *
htif_hexwriter_t	fesvr/htif_hexwriter.cc	/^htif_hexwriter_t::htif_hexwriter_t(size_t b, size_t w, size_t d)$/;"	f	class:htif_hexwriter_t
htif_hexwriter_t	fesvr/htif_hexwriter.h	/^class htif_hexwriter_t : public chunked_memif_t$/;"	c
htif_pthread_t	fesvr/htif_pthread.cc	/^htif_pthread_t::htif_pthread_t(int argc, char** argv)$/;"	f	class:htif_pthread_t
htif_pthread_t	fesvr/htif_pthread.h	/^class htif_pthread_t : public htif_t$/;"	c
htif_t	fesvr/htif.cc	/^htif_t::htif_t()$/;"	f	class:htif_t
htif_t	fesvr/htif.cc	/^htif_t::htif_t(const std::vector<std::string>& args) : htif_t()$/;"	f	class:htif_t
htif_t	fesvr/htif.cc	/^htif_t::htif_t(int argc, char** argv) : htif_t()$/;"	f	class:htif_t
htif_t	fesvr/htif.h	/^class htif_t : public chunked_memif_t$/;"	c
htinst	riscv/processor.h	/^  reg_t htinst;$/;"	m	struct:state_t	typeref:typename:reg_t
htval	riscv/processor.h	/^  reg_t htval;$/;"	m	struct:state_t	typeref:typename:reg_t
i	riscv/insns/bdep.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
i	riscv/insns/bdepw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
i	riscv/insns/bext.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
i	riscv/insns/bextw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
i	riscv/insns/bmatflip.h	/^for (int i = 0; i < 3; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmator.h	/^for (int i = 0; i < 3; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmator.h	/^for (int i = 0; i < 64; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmator.h	/^for (int i = 0; i < 8; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmatxor.h	/^for (int i = 0; i < 3; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmatxor.h	/^for (int i = 0; i < 64; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/bmatxor.h	/^for (int i = 0; i < 8; i++) {$/;"	v	typeref:typename:int
i	riscv/insns/clmul.h	/^for (int i = 0; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clmulh.h	/^for (int i = 1; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clmulhw.h	/^for (int i = 1; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clmulr.h	/^for (int i = 0; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clmulrw.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clmulw.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clz.h	/^for (int i = 0; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/clzw.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32_b.h	/^for (int i = 0; i < 8; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32_d.h	/^for (int i = 0; i < 64; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32_h.h	/^for (int i = 0; i < 16; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32_w.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32c_b.h	/^for (int i = 0; i < 8; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32c_d.h	/^for (int i = 0; i < 64; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32c_h.h	/^for (int i = 0; i < 16; i++)$/;"	v	typeref:typename:int
i	riscv/insns/crc32c_w.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/ctz.h	/^for (int i = 0; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/ctzw.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/pcnt.h	/^for (int i = 0; i < xlen; i++)$/;"	v	typeref:typename:int
i	riscv/insns/pcntw.h	/^for (int i = 0; i < 32; i++)$/;"	v	typeref:typename:int
i	riscv/insns/vfirst_m.h	/^for (reg_t i=P.VU.vstart; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vfmerge_vfm.h	/^    for (reg_t i=P.VU.vstart; i<vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vfmv_v_f.h	/^    for (reg_t i=P.VU.vstart; i<vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vid_v.h	/^for (reg_t i = P.VU.vstart ; i < P.VU.vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/viota_m.h	/^for (reg_t i = 0; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vmsbf_m.h	/^for (reg_t i = P.VU.vstart; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vmsif_m.h	/^for (reg_t i = P.VU.vstart ; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vmsof_m.h	/^for (reg_t i = P.VU.vstart ; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vmvnfr_v.h	/^  reg_t i = P.VU.vstart \/ P.VU.vlenb;$/;"	v	typeref:typename:reg_t
i	riscv/insns/vpopc_m.h	/^for (reg_t i=P.VU.vstart; i<vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/insns/vrgather_vi.h	/^for (reg_t i = P.VU.vstart; i < vl; ++i) {$/;"	v	typeref:typename:reg_t
i	riscv/rocc.h	/^  insn_t i;$/;"	m	union:rocc_insn_union_t	typeref:typename:insn_t
i	softfloat/s_roundMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundMToI64::__anon11a0ef14010a	typeref:typename:int64_t	file:
i	softfloat/s_roundPackMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundPackMToI64::__anond79ae633010a	typeref:typename:int64_t	file:
i	softfloat/s_roundPackToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	m	union:softfloat_roundPackToI32::__anonf1049901010a	typeref:typename:int32_t	file:
i	softfloat/s_roundPackToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundPackToI64::__anonf10646a6010a	typeref:typename:int64_t	file:
i	softfloat/s_roundToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	m	union:softfloat_roundToI32::__anon0a0c89c2010a	typeref:typename:int32_t	file:
i	softfloat/s_roundToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundToI64::__anon0a0e3767010a	typeref:typename:int64_t	file:
i16_fromNaN	softfloat/specialize.h	/^#define i16_fromNaN /;"	d
i16_fromNegOverflow	softfloat/specialize.h	/^#define i16_fromNegOverflow /;"	d
i16_fromPosOverflow	softfloat/specialize.h	/^#define i16_fromPosOverflow /;"	d
i32_fromNaN	softfloat/specialize.h	/^#define i32_fromNaN /;"	d
i32_fromNegOverflow	softfloat/specialize.h	/^#define i32_fromNegOverflow /;"	d
i32_fromPosOverflow	softfloat/specialize.h	/^#define i32_fromPosOverflow /;"	d
i32_to_f128	softfloat/i32_to_f128.c	/^float128_t i32_to_f128( int32_t a )$/;"	f	typeref:typename:float128_t
i32_to_f16	softfloat/i32_to_f16.c	/^float16_t i32_to_f16( int32_t a )$/;"	f	typeref:typename:float16_t
i32_to_f32	softfloat/i32_to_f32.c	/^float32_t i32_to_f32( int32_t a )$/;"	f	typeref:typename:float32_t
i32_to_f64	softfloat/i32_to_f64.c	/^float64_t i32_to_f64( int32_t a )$/;"	f	typeref:typename:float64_t
i64_fromNaN	softfloat/specialize.h	/^#define i64_fromNaN /;"	d
i64_fromNegOverflow	softfloat/specialize.h	/^#define i64_fromNegOverflow /;"	d
i64_fromPosOverflow	softfloat/specialize.h	/^#define i64_fromPosOverflow /;"	d
i64_to_f128	softfloat/i64_to_f128.c	/^float128_t i64_to_f128( int64_t a )$/;"	f	typeref:typename:float128_t
i64_to_f16	softfloat/i64_to_f16.c	/^float16_t i64_to_f16( int64_t a )$/;"	f	typeref:typename:float16_t
i64_to_f32	softfloat/i64_to_f32.c	/^float32_t i64_to_f32( int64_t a )$/;"	f	typeref:typename:float32_t
i64_to_f64	softfloat/i64_to_f64.c	/^float64_t i64_to_f64( int64_t a )$/;"	f	typeref:typename:float64_t
i8_fromNaN	softfloat/specialize.h	/^#define i8_fromNaN /;"	d
i8_fromNegOverflow	softfloat/specialize.h	/^#define i8_fromNegOverflow /;"	d
i8_fromPosOverflow	softfloat/specialize.h	/^#define i8_fromPosOverflow /;"	d
i_imm	riscv/decode.h	/^  int64_t i_imm() { return int64_t(b) >> 20; }$/;"	f	class:insn_t	typeref:typename:int64_t
icache	riscv/mmu.h	/^  icache_entry_t icache[ICACHE_ENTRIES];$/;"	m	class:mmu_t	typeref:typename:icache_entry_t[]
icache.h	build/riscv.mk	/^icache.h: mmu.h$/;"	t
icache.h	riscv/riscv.mk.in	/^icache.h: mmu.h$/;"	t
icache_entries	build/riscv.mk	/^icache_entries := `grep "ICACHE_ENTRIES =" $(src_dir)\/riscv\/mmu.h | sed 's\/.* = \\(.*\\);\/\\/;"	m
icache_entries	riscv/riscv.mk.in	/^icache_entries := `grep "ICACHE_ENTRIES =" $(src_dir)\/riscv\/mmu.h | sed 's\/.* = \\(.*\\);\/\\/;"	m
icache_entry_t	riscv/mmu.h	/^struct icache_entry_t {$/;"	s
icache_index	riscv/mmu.h	/^  inline size_t icache_index(reg_t addr)$/;"	f	class:mmu_t	typeref:typename:size_t
icache_sim_t	riscv/cachesim.h	/^  icache_sim_t(const char* config) : cache_memtracer_t(config, "I$") {}$/;"	f	class:icache_sim_t
icache_sim_t	riscv/cachesim.h	/^class icache_sim_t : public cache_memtracer_t$/;"	c
id	fesvr/device.h	/^  std::string id;$/;"	m	class:disk_t	typeref:typename:std::string
id	riscv/processor.h	/^  uint32_t id;$/;"	m	class:processor_t	typeref:typename:uint32_t
idcode	riscv/jtag_dtm.h	/^  static const unsigned idcode = 0xdeadbeef;$/;"	m	class:jtag_dtm_t	typeref:typename:const unsigned
identity	fesvr/device.h	/^  const char* identity() { return ""; }$/;"	f	class:null_device_t	typeref:typename:const char *
identity	fesvr/device.h	/^  const char* identity() { return "bcd"; }$/;"	f	class:bcd_t	typeref:typename:const char *
identity	fesvr/device.h	/^  const char* identity() { return id.c_str(); }$/;"	f	class:disk_t	typeref:typename:const char *
identity	fesvr/rfb.h	/^  const char* identity() { return "rfb"; }$/;"	f	class:rfb_t	typeref:typename:const char *
identity	fesvr/syscall.h	/^  const char* identity() { return "syscall_proxy"; }$/;"	f	class:syscall_t	typeref:typename:const char *
idle	fesvr/dtm.cc	/^void dtm_t::idle()$/;"	f	class:dtm_t	typeref:typename:void
idle	fesvr/htif.h	/^  virtual void idle() {}$/;"	f	class:htif_t	typeref:typename:void
idle	riscv/sim.cc	/^void sim_t::idle()$/;"	f	class:sim_t	typeref:typename:void
idx_shift	riscv/cachesim.h	/^  size_t idx_shift;$/;"	m	class:cache_sim_t	typeref:typename:size_t
idxbits	riscv/mmu.h	/^  int idxbits;$/;"	m	struct:vm_info	typeref:typename:int
illegal_instruction	riscv/extension.cc	/^void extension_t::illegal_instruction()$/;"	f	class:extension_t	typeref:typename:void
illegal_instruction	riscv/processor.cc	/^reg_t illegal_instruction(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
imm	disasm/disasm.cc	/^} imm;$/;"	v	typeref:struct:__anon961b4d0a0c08
imm_sign	riscv/decode.h	/^  uint64_t imm_sign() { return xs(63, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
impebreak	riscv/debug_module.h	/^  bool impebreak;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:bool
in_bits	fesvr/tsi.h	/^  uint32_t in_bits() { return in_data.front(); }$/;"	f	class:tsi_t	typeref:typename:uint32_t
in_data	fesvr/tsi.h	/^  std::deque<uint32_t> in_data;$/;"	m	class:tsi_t	typeref:typename:std::deque<uint32_t>
in_valid	fesvr/tsi.h	/^  bool in_valid() { return !in_data.empty(); }$/;"	f	class:tsi_t	typeref:typename:bool
increment	riscv/clint.cc	/^void clint_t::increment(reg_t inc)$/;"	f	class:clint_t	typeref:typename:void
index	riscv/mmu.h	/^    int index;$/;"	m	class:trigger_matched_t	typeref:typename:int
indexMultiword	softfloat/primitiveTypes.h	/^#define indexMultiword(/;"	d
indexMultiwordHi	softfloat/primitiveTypes.h	/^#define indexMultiwordHi(/;"	d
indexMultiwordHiBut	softfloat/primitiveTypes.h	/^#define indexMultiwordHiBut(/;"	d
indexMultiwordLo	softfloat/primitiveTypes.h	/^#define indexMultiwordLo(/;"	d
indexMultiwordLoBut	softfloat/primitiveTypes.h	/^#define indexMultiwordLoBut(/;"	d
indexWord	softfloat/primitiveTypes.h	/^#define indexWord(/;"	d
indexWordHi	softfloat/primitiveTypes.h	/^#define indexWordHi(/;"	d
indexWordLo	softfloat/primitiveTypes.h	/^#define indexWordLo(/;"	d
init	fesvr/context.cc	/^void context_t::init(void (*f)(void*), void* a)$/;"	f	class:context_t	typeref:typename:void
init	riscv/cachesim.cc	/^void cache_sim_t::init()$/;"	f	class:cache_sim_t	typeref:typename:void
init_detectTininess	softfloat/specialize.h	/^#define init_detectTininess /;"	d
initrd_end	riscv/sim.h	/^  reg_t initrd_end;$/;"	m	class:sim_t	typeref:typename:reg_t
initrd_start	riscv/sim.h	/^  reg_t initrd_start;$/;"	m	class:sim_t	typeref:typename:reg_t
ino	fesvr/syscall.cc	/^  uint64_t ino;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
insn	riscv/mmu.h	/^  insn_t insn;$/;"	m	struct:insn_fetch_t	typeref:typename:insn_t
insn_bits_t	riscv/decode.h	/^typedef uint64_t insn_bits_t;$/;"	t	typeref:typename:uint64_t
insn_desc_t	riscv/processor.h	/^struct insn_desc_t$/;"	s
insn_fetch_t	riscv/mmu.h	/^struct insn_fetch_t$/;"	s
insn_func_t	riscv/processor.h	/^typedef reg_t (*insn_func_t)(processor_t*, insn_t, reg_t);$/;"	t	typeref:typename:reg_t (*)(processor_t *,insn_t,reg_t)
insn_length	riscv/decode.h	/^#define insn_length(/;"	d
insn_list.h	build/riscv.mk	/^insn_list.h: $(src_dir)\/riscv\/riscv.mk.in$/;"	t
insn_list.h	riscv/riscv.mk.in	/^insn_list.h: $(src_dir)\/riscv\/riscv.mk.in$/;"	t
insn_t	riscv/decode.h	/^  insn_t(insn_bits_t bits) : b(bits) {}$/;"	f	class:insn_t
insn_t	riscv/decode.h	/^class insn_t$/;"	c
insn_trap_t	riscv/trap.h	/^  insn_trap_t(reg_t which, reg_t tval)$/;"	f	class:insn_trap_t
insn_trap_t	riscv/trap.h	/^class insn_trap_t : public trap_t$/;"	c
install	Makefile.in	/^install : install-hdrs install-libs install-exes install-pc$/;"	t
install	build/Makefile	/^install : install-hdrs install-libs install-exes install-pc$/;"	t
install-exes	Makefile.in	/^install-exes : $(install_exes)$/;"	t
install-exes	build/Makefile	/^install-exes : $(install_exes)$/;"	t
install-hdrs	Makefile.in	/^install-hdrs : $(install_hdrs)$/;"	t
install-hdrs	build/Makefile	/^install-hdrs : $(install_hdrs)$/;"	t
install-libs	Makefile.in	/^install-libs : $(install_libs)$/;"	t
install-libs	build/Makefile	/^install-libs : $(install_libs)$/;"	t
install-pc	Makefile.in	/^install-pc : $(install_pcs)$/;"	t
install-pc	build/Makefile	/^install-pc : $(install_pcs)$/;"	t
install_exes_dir	Makefile.in	/^install_exes_dir := $(INSTALLDIR)\/bin$/;"	m
install_exes_dir	build/Makefile	/^install_exes_dir := $(INSTALLDIR)\/bin$/;"	m
install_hdrs_dir	Makefile.in	/^install_hdrs_dir := $(INSTALLDIR)\/include$/;"	m
install_hdrs_dir	build/Makefile	/^install_hdrs_dir := $(INSTALLDIR)\/include$/;"	m
install_libs_dir	Makefile.in	/^install_libs_dir := $(INSTALLDIR)\/lib$/;"	m
install_libs_dir	build/Makefile	/^install_libs_dir := $(INSTALLDIR)\/lib$/;"	m
instructions	riscv/processor.h	/^  std::vector<insn_desc_t> instructions;$/;"	m	class:processor_t	typeref:typename:std::vector<insn_desc_t>
int128_t	riscv/decode.h	/^typedef __int128 int128_t;$/;"	t	typeref:typename:__int128
int_max	riscv/insns/vnclip_wi.h	/^int64_t int_max = INT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_max	riscv/insns/vnclip_wv.h	/^int64_t int_max = INT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_max	riscv/insns/vnclip_wx.h	/^int64_t int_max = INT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_max	riscv/insns/vsmul_vv.h	/^int64_t int_max = INT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_max	riscv/insns/vsmul_vx.h	/^int64_t int_max = INT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_min	riscv/insns/vnclip_wi.h	/^int64_t int_min = INT64_MIN >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_min	riscv/insns/vnclip_wv.h	/^int64_t int_min = INT64_MIN >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_min	riscv/insns/vnclip_wx.h	/^int64_t int_min = INT64_MIN >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_min	riscv/insns/vsmul_vv.h	/^int64_t int_min = INT64_MIN >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
int_min	riscv/insns/vsmul_vx.h	/^int64_t int_min = INT64_MIN >> (64 - P.VU.vsew);$/;"	v	typeref:typename:int64_t
interactive	riscv/interactive.cc	/^void sim_t::interactive()$/;"	f	class:sim_t	typeref:typename:void
interactive_freg	riscv/interactive.cc	/^void sim_t::interactive_freg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_fregd	riscv/interactive.cc	/^void sim_t::interactive_fregd(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_fregh	riscv/interactive.cc	/^void sim_t::interactive_fregh(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_fregs	riscv/interactive.cc	/^void sim_t::interactive_fregs(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_func	riscv/interactive.cc	/^  typedef void (sim_t::*interactive_func)(const std::string&, const std::vector<std::string>&);$/;"	t	function:sim_t::interactive	typeref:typename:void (sim_t::*)(const std::string &,const std::vector<std::string> &)	file:
interactive_help	riscv/interactive.cc	/^void sim_t::interactive_help(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_mem	riscv/interactive.cc	/^void sim_t::interactive_mem(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_pc	riscv/interactive.cc	/^void sim_t::interactive_pc(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_quit	riscv/interactive.cc	/^void sim_t::interactive_quit(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_reg	riscv/interactive.cc	/^void sim_t::interactive_reg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_run	riscv/interactive.cc	/^void sim_t::interactive_run(const std::string& cmd, const std::vector<std::string>& args, bool n/;"	f	class:sim_t	typeref:typename:void
interactive_run_noisy	riscv/interactive.cc	/^void sim_t::interactive_run_noisy(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_run_silent	riscv/interactive.cc	/^void sim_t::interactive_run_silent(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_str	riscv/interactive.cc	/^void sim_t::interactive_str(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interactive_until	riscv/interactive.cc	/^void sim_t::interactive_until(const std::string& cmd, const std::vector<std::string>& args, bool/;"	f	class:sim_t	typeref:typename:void
interactive_until_noisy	riscv/interactive.cc	/^void sim_t::interactive_until_noisy(const std::string& cmd, const std::vector<std::string>& args/;"	f	class:sim_t	typeref:typename:void
interactive_until_silent	riscv/interactive.cc	/^void sim_t::interactive_until_silent(const std::string& cmd, const std::vector<std::string>& arg/;"	f	class:sim_t	typeref:typename:void
interactive_vreg	riscv/interactive.cc	/^void sim_t::interactive_vreg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t	typeref:typename:void
interested_in_range	riscv/cachesim.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:dcache_sim_t	typeref:typename:bool
interested_in_range	riscv/cachesim.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:icache_sim_t	typeref:typename:bool
interested_in_range	riscv/memtracer.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:memtracer_list_t	typeref:typename:bool
internals_h	softfloat/internals.h	/^#define internals_h /;"	d
interrupt	tests/testlib.py	/^    def interrupt(self):$/;"	m	class:Gdb
invalid_pc	riscv/decode.h	/^#define invalid_pc(/;"	d
ir	riscv/jtag_dtm.h	/^    uint32_t ir;$/;"	m	class:jtag_dtm_t	typeref:typename:uint32_t
ir_length	riscv/jtag_dtm.h	/^    const unsigned ir_length = 5;$/;"	m	class:jtag_dtm_t	typeref:typename:const unsigned
isBoxedF16	riscv/decode.h	/^#define isBoxedF16(/;"	d
isBoxedF32	riscv/decode.h	/^#define isBoxedF32(/;"	d
isBoxedF64	riscv/decode.h	/^#define isBoxedF64(/;"	d
isNaNExtF80UI	softfloat/internals.h	/^#define isNaNExtF80UI(/;"	d
isNaNF128	riscv/decode.h	/^#define isNaNF128(/;"	d
isNaNF128UI	softfloat/internals.h	/^#define isNaNF128UI(/;"	d
isNaNF16UI	softfloat/internals.h	/^#define isNaNF16UI(/;"	d
isNaNF32UI	softfloat/internals.h	/^#define isNaNF32UI(/;"	d
isNaNF64UI	softfloat/internals.h	/^#define isNaNF64UI(/;"	d
is_address_preloaded	fesvr/htif.h	/^  virtual bool is_address_preloaded(addr_t taddr, size_t len) { return false; }$/;"	f	class:htif_t	typeref:typename:bool
is_aligned	riscv/decode.h	/^static inline bool is_aligned(const unsigned val, const unsigned pos)$/;"	f	typeref:typename:bool
is_dirty_enabled	riscv/mmu.h	/^  int is_dirty_enabled()$/;"	f	class:mmu_t	typeref:typename:int
is_fpu_reg	riscv/debug_module.cc	/^static bool is_fpu_reg(unsigned regno)$/;"	f	typeref:typename:bool	file:
is_misaligned_enabled	riscv/mmu.h	/^  int is_misaligned_enabled()$/;"	f	class:mmu_t	typeref:typename:int
is_overlapped	riscv/decode.h	/^static inline bool is_overlapped(const int astart, int asize,$/;"	f	typeref:typename:bool
is_overlapped_widen	riscv/decode.h	/^static inline bool is_overlapped_widen(const int astart, int asize,$/;"	f	typeref:typename:bool
is_propagate	riscv/insns/vfredmax_vs.h	/^bool is_propagate = false;$/;"	v	typeref:typename:bool
is_propagate	riscv/insns/vfredmin_vs.h	/^bool is_propagate = false;$/;"	v	typeref:typename:bool
is_propagate	riscv/insns/vfredosum_vs.h	/^bool is_propagate = false;$/;"	v	typeref:typename:bool
is_propagate	riscv/insns/vfredsum_vs.h	/^bool is_propagate = true;$/;"	v	typeref:typename:bool
is_propagate	riscv/insns/vfwredosum_vs.h	/^bool is_propagate = false;$/;"	v	typeref:typename:bool
is_propagate	riscv/insns/vfwredsum_vs.h	/^bool is_propagate = true;$/;"	v	typeref:typename:bool
is_valid	riscv/insns/vslidedown_vi.h	/^bool is_valid = (i + sh) < P.VU.vlmax;$/;"	v	typeref:typename:bool
is_valid	riscv/insns/vslidedown_vx.h	/^bool is_valid = (i + sh) < P.VU.vlmax;$/;"	v	typeref:typename:bool
isa	riscv/riscv.ac	/^AC_ARG_WITH(isa,$/;"	w
isa_extension_t	riscv/processor.h	/^} isa_extension_t;$/;"	t	typeref:enum:__anon2b80edf10703
isa_string	riscv/processor.h	/^  std::string isa_string;$/;"	m	class:processor_t	typeref:typename:std::string
jal	riscv/opcodes.h	/^static uint32_t jal(unsigned int rd, uint32_t imm) {$/;"	f	typeref:typename:uint32_t
jtag_dtm_t	riscv/jtag_dtm.cc	/^jtag_dtm_t::jtag_dtm_t(debug_module_t *dm, unsigned required_rti_cycles) :$/;"	f	class:jtag_dtm_t
jtag_dtm_t	riscv/jtag_dtm.h	/^class jtag_dtm_t$/;"	c
jtag_state_t	riscv/jtag_dtm.h	/^} jtag_state_t;$/;"	t	typeref:enum:__anon58dfc25b0103
jump_target	disasm/disasm.cc	/^} jump_target;$/;"	v	typeref:struct:__anon961b4d0a1108
last_bits	riscv/processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t	typeref:typename:uint64_t
last_comp_version	fdt/fdt.h	/^	fdt32_t last_comp_version;	 \/* last compatible version *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
last_inst_flen	riscv/processor.h	/^  int last_inst_flen;$/;"	m	struct:state_t	typeref:typename:int
last_inst_priv	riscv/processor.h	/^  reg_t last_inst_priv;$/;"	m	struct:state_t	typeref:typename:reg_t
last_inst_xlen	riscv/processor.h	/^  int last_inst_xlen;$/;"	m	struct:state_t	typeref:typename:int
last_pc	riscv/processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t	typeref:typename:uint64_t
lb	riscv/opcodes.h	/^static uint32_t lb(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
ld	riscv/opcodes.h	/^static uint32_t ld(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
legalize_privilege	riscv/processor.cc	/^reg_t processor_t::legalize_privilege(reg_t prv)$/;"	f	class:processor_t	typeref:typename:reg_t
len	fdt/fdt.h	/^	fdt32_t len;$/;"	m	struct:fdt_property	typeref:typename:fdt32_t
len	riscv/devices.h	/^  size_t len;$/;"	m	class:mem_t	typeref:typename:size_t
len	riscv/insns/bfp.h	/^int len = (cfg >> 8) & (xlen\/2-1);$/;"	v	typeref:typename:int
len	riscv/insns/bfpw.h	/^int len = (cfg >> 8) & 15;$/;"	v	typeref:typename:int
len	riscv/insns/vmvnfr_v.h	/^const reg_t len = insn.rs1() + 1;$/;"	v	typeref:typename:const reg_t
length	riscv/decode.h	/^  int length() { return insn_length(b); }$/;"	f	class:insn_t	typeref:typename:int
less	riscv/insns/fmin_d.h	/^bool less = f64_lt_quiet(f64(FRS1), f64(FRS2)) ||$/;"	v	typeref:typename:bool
less	riscv/insns/fmin_q.h	/^bool less = f128_lt_quiet(f128(FRS1), f128(FRS2)) ||$/;"	v	typeref:typename:bool
less	riscv/insns/fmin_s.h	/^bool less = f32_lt_quiet(f32(FRS1), f32(FRS2)) ||$/;"	v	typeref:typename:bool
levels	riscv/mmu.h	/^  int levels;$/;"	m	struct:vm_info	typeref:typename:int
lfsr	riscv/cachesim.h	/^  lfsr_t lfsr;$/;"	m	class:cache_sim_t	typeref:typename:lfsr_t
lfsr_t	riscv/cachesim.h	/^  lfsr_t() : reg(1) {}$/;"	f	class:lfsr_t
lfsr_t	riscv/cachesim.h	/^  lfsr_t(const lfsr_t& lfsr) : reg(lfsr.reg) {}$/;"	f	class:lfsr_t
lfsr_t	riscv/cachesim.h	/^class lfsr_t$/;"	c
lg_pmp_granularity	riscv/processor.h	/^  reg_t lg_pmp_granularity;$/;"	m	class:processor_t	typeref:typename:reg_t
lh	riscv/opcodes.h	/^static uint32_t lh(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
lhs	riscv/insns/div.h	/^sreg_t lhs = sext_xlen(RS1);$/;"	v	typeref:typename:sreg_t
lhs	riscv/insns/divu.h	/^reg_t lhs = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
lhs	riscv/insns/divuw.h	/^reg_t lhs = zext32(RS1);$/;"	v	typeref:typename:reg_t
lhs	riscv/insns/divw.h	/^sreg_t lhs = sext32(RS1);$/;"	v	typeref:typename:sreg_t
lhs	riscv/insns/rem.h	/^sreg_t lhs = sext_xlen(RS1);$/;"	v	typeref:typename:sreg_t
lhs	riscv/insns/remu.h	/^reg_t lhs = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
lhs	riscv/insns/remuw.h	/^reg_t lhs = zext32(RS1);$/;"	v	typeref:typename:reg_t
lhs	riscv/insns/remw.h	/^sreg_t lhs = sext32(RS1);$/;"	v	typeref:typename:sreg_t
libfesvr_is_present	fesvr/dummy.cc	/^extern "C" void libfesvr_is_present() {}$/;"	f	typeref:typename:void
likely	riscv/common.h	/^#define   likely(/;"	d
line_size	fesvr/htif.h	/^  unsigned int line_size;$/;"	m	class:htif_t	typeref:typename:unsigned int
linesz	riscv/cachesim.h	/^  size_t linesz;$/;"	m	class:cache_sim_t	typeref:typename:size_t
list	riscv/memtracer.h	/^  std::vector<memtracer_t*> list;$/;"	m	class:memtracer_list_t	typeref:typename:std::vector<memtracer_t * >
lo	riscv/insns/pack.h	/^reg_t lo = zext_xlen(RS1 << (xlen\/2)) >> (xlen\/2);$/;"	v	typeref:typename:reg_t
lo	riscv/insns/packh.h	/^reg_t lo = zext_xlen(RS1 << (xlen-8)) >> (xlen-8);$/;"	v	typeref:typename:reg_t
lo	riscv/insns/packu.h	/^reg_t lo = zext_xlen(RS1) >> (xlen\/2);$/;"	v	typeref:typename:reg_t
lo	riscv/insns/packuw.h	/^reg_t lo = zext32(RS1) >> 16;$/;"	v	typeref:typename:reg_t
lo	riscv/insns/packw.h	/^reg_t lo = zext32(RS1 << 16) >> 16;$/;"	v	typeref:typename:reg_t
load	riscv/clint.cc	/^bool clint_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:clint_t	typeref:typename:bool
load	riscv/debug_module.cc	/^bool debug_module_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:debug_module_t	typeref:typename:bool
load	riscv/devices.cc	/^bool bus_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:bus_t	typeref:typename:bool
load	riscv/devices.cc	/^bool mmio_plugin_device_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:mmio_plugin_device_t	typeref:typename:bool
load	riscv/devices.h	/^  bool load(reg_t addr, size_t len, uint8_t* bytes) { return false; }$/;"	f	class:mem_t	typeref:typename:bool
load	riscv/mmio_plugin.h	/^  bool (*load)(void*, reg_t, size_t, uint8_t*);$/;"	m	struct:__anonafb95f510108	typeref:typename:bool (*)(void *,reg_t,size_t,uint8_t *)
load	riscv/mmio_plugin.h	/^  static bool load(void* self, reg_t addr, size_t len, uint8_t* bytes)$/;"	f	struct:mmio_plugin_registration_t	typeref:typename:bool
load	riscv/processor.cc	/^bool processor_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:processor_t	typeref:typename:bool
load	riscv/processor.h	/^  bool load;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
load	riscv/rom.cc	/^bool rom_device_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:rom_device_t	typeref:typename:bool
load_address	disasm/disasm.cc	/^} load_address;$/;"	v	typeref:struct:__anon961b4d0a0108
load_elf	fesvr/elfloader.cc	/^std::map<std::string, uint64_t> load_elf(const char* fn, memif_t* memif, reg_t* entry)$/;"	f	typeref:typename:std::map<std::string,uint64_t>
load_float128	riscv/mmu.h	/^  float128_t load_float128(reg_t addr)$/;"	f	class:mmu_t	typeref:typename:float128_t
load_func	riscv/mmu.h	/^  #define load_func(/;"	d
load_func	riscv/mmu.h	/^  load_func(uint8, guest_load, RISCV_XLATE_VIRT)$/;"	f	class:mmu_t
load_insn	riscv/mmu.h	/^  inline insn_fetch_t load_insn(reg_t addr)$/;"	f	class:mmu_t	typeref:typename:insn_fetch_t
load_payload	fesvr/htif.cc	/^std::map<std::string, uint64_t> htif_t::load_payload(const std::string& payload, reg_t* entry)$/;"	f	class:htif_t	typeref:typename:std::map<std::string,uint64_t>
load_program	fesvr/htif.cc	/^void htif_t::load_program()$/;"	f	class:htif_t	typeref:typename:void
load_reservation_address	riscv/mmu.h	/^  reg_t load_reservation_address;$/;"	m	class:mmu_t	typeref:typename:reg_t
load_slow_path	riscv/mmu.cc	/^void mmu_t::load_slow_path(reg_t addr, reg_t len, uint8_t* bytes, uint32_t xlate_flags)$/;"	f	class:mmu_t	typeref:typename:void
lock	fesvr/rfb.h	/^  pthread_mutex_t lock;$/;"	m	class:rfb_t	typeref:typename:pthread_mutex_t
log	riscv/cachesim.h	/^  bool log;$/;"	m	class:cache_sim_t	typeref:typename:bool
log	riscv/sim.h	/^  bool log;$/;"	m	class:sim_t	typeref:typename:bool
log_commits_enabled	riscv/processor.h	/^  bool log_commits_enabled;$/;"	m	class:processor_t	typeref:typename:bool
log_file	riscv/processor.h	/^  FILE *log_file;$/;"	m	class:processor_t	typeref:typename:FILE *
log_file	riscv/sim.h	/^  log_file_t log_file;$/;"	m	class:sim_t	typeref:typename:log_file_t
log_file_t	riscv/log_file.h	/^  log_file_t(const char *path)$/;"	f	class:log_file_t
log_file_t	riscv/log_file.h	/^class log_file_t$/;"	c
log_mem_read	riscv/processor.h	/^  commit_log_mem_t log_mem_read;$/;"	m	struct:state_t	typeref:typename:commit_log_mem_t
log_mem_write	riscv/processor.h	/^  commit_log_mem_t log_mem_write;$/;"	m	struct:state_t	typeref:typename:commit_log_mem_t
log_reg_write	riscv/processor.h	/^  commit_log_reg_t log_reg_write;$/;"	m	struct:state_t	typeref:typename:commit_log_reg_t
lookup	disasm/disasm.cc	/^const disasm_insn_t* disassembler_t::lookup(insn_t insn) const$/;"	f	class:disassembler_t	typeref:typename:const disasm_insn_t *
lookup	fesvr/syscall.cc	/^int fds_t::lookup(reg_t fd)$/;"	f	class:fds_t	typeref:typename:int
lui	riscv/opcodes.h	/^static uint32_t lui(unsigned int dest, uint32_t imm)$/;"	f	typeref:typename:uint32_t
lw	riscv/opcodes.h	/^static uint32_t lw(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
m	riscv/processor.h	/^  bool m;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
magic	fdt/fdt.h	/^	fdt32_t magic;			 \/* magic word FDT_MAGIC *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
main	customext/dummy_rocc_test.c	/^int main() {$/;"	f	typeref:typename:int
main	fesvr/elf2hex.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	riscv/sim.cc	/^void sim_t::main()$/;"	f	class:sim_t	typeref:typename:void
main	spike_dasm/spike-dasm.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	spike_main/spike-log-parser.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	spike_main/spike.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	spike_main/termios-xspike.cc	/^int main()$/;"	f	typeref:typename:int
main	spike_main/xspike.cc	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	tests/ebreak.s	/^main:$/;"	l
make_dtb	riscv/sim.cc	/^void sim_t::make_dtb()$/;"	f	class:sim_t	typeref:typename:void
make_dts	riscv/dts.cc	/^std::string make_dts(size_t insns_per_rtc_tick, size_t cpu_hz,$/;"	f	typeref:typename:std::string
make_mask64	riscv/arith.h	/^static inline uint64_t make_mask64(int pos, int len)$/;"	f	typeref:typename:uint64_t
make_mask64	softfloat/fall_reciprocal.c	/^static inline uint64_t make_mask64(int pos, int len)$/;"	f	typeref:typename:uint64_t	file:
make_mems	spike_main/spike.cc	/^static std::vector<std::pair<reg_t, mem_t*>> make_mems(const char* arg)$/;"	f	typeref:typename:std::vector<std::pair<reg_t,mem_t * >>	file:
mask	disasm/disasm.cc	/^  reg_t mask;$/;"	m	struct:__anon961b4d0a3108	typeref:typename:reg_t	file:
mask	riscv/disasm.h	/^  uint32_t mask;$/;"	m	class:disasm_insn_t	typeref:typename:uint32_t
mask	riscv/insns/bdep.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
mask	riscv/insns/bdepw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
mask	riscv/insns/bext.h	/^uint64_t c = 0, i = 0, data = zext_xlen(RS1), mask = zext_xlen(RS2);$/;"	v	typeref:typename:uint64_t
mask	riscv/insns/bextw.h	/^uint64_t c = 0, i = 0, data = zext32(RS1), mask = zext32(RS2);$/;"	v	typeref:typename:uint64_t
mask	riscv/insns/bfp.h	/^reg_t mask = ~(~reg_t(0) << len) << off;$/;"	v	typeref:typename:reg_t
mask	riscv/insns/bfpw.h	/^reg_t mask = ~(~reg_t(0) << len) << off;$/;"	v	typeref:typename:reg_t
mask	riscv/processor.h	/^  insn_bits_t mask;$/;"	m	struct:insn_desc_t	typeref:typename:insn_bits_t
maskmax	riscv/processor.h	/^  uint8_t maskmax;$/;"	m	struct:__anon2b80edf10408	typeref:typename:uint8_t
match	disasm/disasm.cc	/^  reg_t match;$/;"	m	struct:__anon961b4d0a3108	typeref:typename:reg_t	file:
match	riscv/disasm.h	/^  uint32_t match;$/;"	m	class:disasm_insn_t	typeref:typename:uint32_t
match	riscv/processor.h	/^  insn_bits_t match;$/;"	m	struct:insn_desc_t	typeref:typename:insn_bits_t
match	riscv/processor.h	/^  mcontrol_match_t match;$/;"	m	struct:__anon2b80edf10408	typeref:typename:mcontrol_match_t
matched_trigger	riscv/mmu.h	/^  trigger_matched_t *matched_trigger;$/;"	m	class:mmu_t	typeref:typename:trigger_matched_t *
max_bus_master_bits	riscv/debug_module.h	/^    unsigned max_bus_master_bits;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:unsigned
max_idle_cycles	fesvr/dtm.h	/^  static const int max_idle_cycles = 10000;$/;"	m	class:dtm_t	typeref:typename:const int
max_isa	riscv/processor.h	/^  reg_t max_isa;$/;"	m	class:processor_t	typeref:typename:reg_t
max_pmp	riscv/processor.h	/^  static const int max_pmp = 16;$/;"	m	struct:state_t	typeref:typename:const int
max_xlen	riscv/processor.h	/^  unsigned max_xlen;$/;"	m	class:processor_t	typeref:typename:unsigned
mcause	riscv/processor.h	/^  reg_t mcause;$/;"	m	struct:state_t	typeref:typename:reg_t
mcontrol	riscv/processor.h	/^  mcontrol_t mcontrol[num_triggers];$/;"	m	struct:state_t	typeref:typename:mcontrol_t[]
mcontrol_action_t	riscv/processor.h	/^} mcontrol_action_t;$/;"	t	typeref:enum:__anon2b80edf10203
mcontrol_match_t	riscv/processor.h	/^} mcontrol_match_t;$/;"	t	typeref:enum:__anon2b80edf10303
mcontrol_t	riscv/processor.h	/^} mcontrol_t;$/;"	t	typeref:struct:__anon2b80edf10408
mcounteren	riscv/processor.h	/^  uint32_t mcounteren;$/;"	m	struct:state_t	typeref:typename:uint32_t
mcppbs-CFLAGS	Makefile.in	/^mcppbs-CFLAGS   := $(default-CFLAGS) @CFLAGS@$/;"	m
mcppbs-CFLAGS	build/Makefile	/^mcppbs-CFLAGS   := $(default-CFLAGS) -g -O2$/;"	m
mcppbs-CPPFLAGS	Makefile.in	/^mcppbs-CPPFLAGS := @CPPFLAGS@$/;"	m
mcppbs-CPPFLAGS	build/Makefile	/^mcppbs-CPPFLAGS := $/;"	m
mcppbs-CXXFLAGS	Makefile.in	/^mcppbs-CXXFLAGS := $(default-CXXFLAGS) @CXXFLAGS@$/;"	m
mcppbs-CXXFLAGS	build/Makefile	/^mcppbs-CXXFLAGS := $(default-CXXFLAGS) -g -O2$/;"	m
mcppbs-LDFLAGS	Makefile.in	/^mcppbs-LDFLAGS := @LDFLAGS@$/;"	m
mcppbs-LDFLAGS	build/Makefile	/^mcppbs-LDFLAGS :=  -Wl,--export-dynamic$/;"	m
medeleg	riscv/processor.h	/^  reg_t medeleg;$/;"	m	struct:state_t	typeref:typename:reg_t
mem	fesvr/htif.h	/^  memif_t mem;$/;"	m	class:htif_t	typeref:typename:memif_t
mem	fesvr/htif_hexwriter.h	/^  std::map<addr_t,std::vector<char> > mem;$/;"	m	class:htif_hexwriter_t	typeref:typename:std::map<addr_t,std::vector<char>>
mem_t	riscv/devices.h	/^  mem_t(size_t size) : len(size) {$/;"	f	class:mem_t
mem_t	riscv/devices.h	/^class mem_t : public abstract_device_t {$/;"	c
mem_trap_t	riscv/trap.h	/^  mem_trap_t(reg_t which, bool gva, reg_t tval, reg_t tval2, reg_t tinst)$/;"	f	class:mem_trap_t
mem_trap_t	riscv/trap.h	/^class mem_trap_t : public trap_t$/;"	c
memif	fesvr/device.h	/^  memif_t& memif() { return _memif; }$/;"	f	class:command_t	typeref:typename:memif_t &
memif	fesvr/htif.h	/^  virtual memif_t& memif() { return mem; }$/;"	f	class:htif_t	typeref:typename:memif_t &
memif	fesvr/rfb.h	/^  memif_t* memif;$/;"	m	class:rfb_t	typeref:typename:memif_t *
memif	fesvr/syscall.h	/^  memif_t* memif;$/;"	m	class:syscall_t	typeref:typename:memif_t *
memif_t	fesvr/memif.h	/^  memif_t(chunked_memif_t* _cmemif) : cmemif(_cmemif) {}$/;"	f	class:memif_t
memif_t	fesvr/memif.h	/^class memif_t$/;"	c
mems	riscv/sim.h	/^  std::vector<std::pair<reg_t, mem_t*>> mems;$/;"	m	class:sim_t	typeref:typename:std::vector<std::pair<reg_t,mem_t * >>
memtracer_list_t	riscv/memtracer.h	/^class memtracer_list_t : public memtracer_t$/;"	c
memtracer_t	riscv/memtracer.h	/^  memtracer_t() {}$/;"	f	class:memtracer_t
memtracer_t	riscv/memtracer.h	/^class memtracer_t$/;"	c
mepc	riscv/processor.h	/^  reg_t mepc;$/;"	m	struct:state_t	typeref:typename:reg_t
merge_overlapping_memory_regions	spike_main/spike.cc	/^void merge_overlapping_memory_regions(std::vector<std::pair<reg_t, mem_t*>>& mems)$/;"	f	typeref:typename:void
mideleg	riscv/processor.h	/^  reg_t mideleg;$/;"	m	struct:state_t	typeref:typename:reg_t
midx	riscv/insns/vcompress_vm.h	/^  const int midx = i \/ 64;$/;"	v	typeref:typename:VI_GENERAL_LOOP_BASE const int
midx	riscv/insns/vfmerge_vfm.h	/^      int midx = i \/ 64;$/;"	v	typeref:typename:int
midx	riscv/insns/viota_m.h	/^  const int midx = i \/ 64;$/;"	v	typeref:typename:const int
midx	riscv/insns/vmsbf_m.h	/^  const int midx = i \/ 64;$/;"	v	typeref:typename:const int
midx	riscv/insns/vmsif_m.h	/^  const int midx = i \/ 64;$/;"	v	typeref:typename:const int
midx	riscv/insns/vmsof_m.h	/^  const int midx = i \/ 64;$/;"	v	typeref:typename:const int
midx	riscv/insns/vpopc_m.h	/^  const int midx = i \/ 32;$/;"	v	typeref:typename:const int
mie	riscv/processor.h	/^  reg_t mie;$/;"	m	struct:state_t	typeref:typename:reg_t
minstret	riscv/processor.h	/^  reg_t minstret;$/;"	m	struct:state_t	typeref:typename:reg_t
mip	riscv/processor.h	/^  reg_t mip;$/;"	m	struct:state_t	typeref:typename:reg_t
misa	riscv/processor.h	/^  reg_t misa;$/;"	m	struct:state_t	typeref:typename:reg_t
misaligned	riscv/riscv.ac	/^AC_ARG_ENABLE([misaligned], AS_HELP_STRING([--enable-misaligned], [Enable hardware support for m/;"	e
misaligned_load	riscv/mmu.h	/^  inline reg_t misaligned_load(reg_t addr, size_t size)$/;"	f	class:mmu_t	typeref:typename:reg_t
misaligned_store	riscv/mmu.h	/^  inline void misaligned_store(reg_t addr, reg_t data, size_t size)$/;"	f	class:mmu_t	typeref:typename:void
miss_handler	riscv/cachesim.h	/^  cache_sim_t* miss_handler;$/;"	m	class:cache_sim_t	typeref:typename:cache_sim_t *
mmask	riscv/insns/vmsbf_m.h	/^  const uint64_t mmask = UINT64_C(1) << mpos; \\$/;"	v	typeref:typename:const uint64_t
mmask	riscv/insns/vmsif_m.h	/^  const uint64_t mmask = UINT64_C(1) << mpos; \\$/;"	v	typeref:typename:const uint64_t
mmask	riscv/insns/vmsof_m.h	/^  const uint64_t mmask = UINT64_C(1) << mpos; \\$/;"	v	typeref:typename:const uint64_t
mmio_load	riscv/mmu.cc	/^bool mmu_t::mmio_load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:mmu_t	typeref:typename:bool
mmio_load	riscv/sim.cc	/^bool sim_t::mmio_load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:sim_t	typeref:typename:bool
mmio_ok	riscv/mmu.cc	/^bool mmu_t::mmio_ok(reg_t addr, access_type type)$/;"	f	class:mmu_t	typeref:typename:bool
mmio_plugin_device_t	riscv/devices.cc	/^mmio_plugin_device_t::mmio_plugin_device_t(const std::string& name,$/;"	f	class:mmio_plugin_device_t
mmio_plugin_device_t	riscv/devices.h	/^class mmio_plugin_device_t : public abstract_device_t {$/;"	c
mmio_plugin_map	riscv/devices.cc	/^static mmio_plugin_map_t& mmio_plugin_map()$/;"	f	typeref:typename:mmio_plugin_map_t &	file:
mmio_plugin_map_t	riscv/devices.cc	/^using mmio_plugin_map_t = std::map<std::string, mmio_plugin_t>;$/;"	t	typeref:typename:std::map<std::string,mmio_plugin_t>	file:
mmio_plugin_registration_t	riscv/mmio_plugin.h	/^  mmio_plugin_registration_t(const std::string& name)$/;"	f	struct:mmio_plugin_registration_t
mmio_plugin_registration_t	riscv/mmio_plugin.h	/^struct mmio_plugin_registration_t$/;"	s
mmio_plugin_t	riscv/mmio_plugin.h	/^} mmio_plugin_t;$/;"	t	typeref:struct:__anonafb95f510108
mmio_store	riscv/mmu.cc	/^bool mmu_t::mmio_store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:mmu_t	typeref:typename:bool
mmio_store	riscv/sim.cc	/^bool sim_t::mmio_store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:sim_t	typeref:typename:bool
mmu	riscv/processor.h	/^  mmu_t* mmu; \/\/ main memory is always accessed via the mmu$/;"	m	class:processor_t	typeref:typename:mmu_t *
mmu_t	riscv/mmu.cc	/^mmu_t::mmu_t(simif_t* sim, processor_t* proc)$/;"	f	class:mmu_t
mmu_t	riscv/mmu.h	/^class mmu_t$/;"	c
mode	fesvr/syscall.cc	/^  uint32_t mode;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
modify_csr	fesvr/dtm.cc	/^uint64_t dtm_t::modify_csr(unsigned which, uint64_t data, uint32_t type)$/;"	f	class:dtm_t	typeref:typename:uint64_t
mpos	riscv/insns/vcompress_vm.h	/^  const int mpos = i % 64;$/;"	v	typeref:typename:const int
mpos	riscv/insns/vfmerge_vfm.h	/^      int mpos = i % 64;$/;"	v	typeref:typename:int
mpos	riscv/insns/viota_m.h	/^  const int mpos = i % 64;$/;"	v	typeref:typename:const int
mpos	riscv/insns/vmsbf_m.h	/^  const int mpos = i % 64;$/;"	v	typeref:typename:const int
mpos	riscv/insns/vmsif_m.h	/^  const int mpos = i % 64;$/;"	v	typeref:typename:const int
mpos	riscv/insns/vmsof_m.h	/^  const int mpos = i % 64;$/;"	v	typeref:typename:const int
mpos	riscv/insns/vpopc_m.h	/^  const int mpos = i % 32;$/;"	v	typeref:typename:const int
mscratch	riscv/processor.h	/^  reg_t mscratch;$/;"	m	struct:state_t	typeref:typename:reg_t
msip_t	riscv/devices.h	/^  typedef uint32_t msip_t;$/;"	t	class:clint_t	typeref:typename:uint32_t
mstatus	riscv/processor.h	/^  reg_t mstatus;$/;"	m	struct:state_t	typeref:typename:reg_t
mtime	fesvr/syscall.cc	/^  uint64_t mtime;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
mtime	riscv/devices.h	/^  mtime_t mtime;$/;"	m	class:clint_t	typeref:typename:mtime_t
mtime_t	riscv/devices.h	/^  typedef uint64_t mtime_t;$/;"	t	class:clint_t	typeref:typename:uint64_t
mtimecmp	riscv/devices.h	/^  std::vector<mtimecmp_t> mtimecmp;$/;"	m	class:clint_t	typeref:typename:std::vector<mtimecmp_t>
mtimecmp_t	riscv/devices.h	/^  typedef uint64_t mtimecmp_t;$/;"	t	class:clint_t	typeref:typename:uint64_t
mtinst	riscv/processor.h	/^  reg_t mtinst;$/;"	m	struct:state_t	typeref:typename:reg_t
mtval	riscv/processor.h	/^  reg_t mtval;$/;"	m	struct:state_t	typeref:typename:reg_t
mtval2	riscv/processor.h	/^  reg_t mtval2;$/;"	m	struct:state_t	typeref:typename:reg_t
mtvec	riscv/processor.h	/^  reg_t mtvec;$/;"	m	struct:state_t	typeref:typename:reg_t
mulh	riscv/arith.h	/^inline int64_t mulh(int64_t a, int64_t b)$/;"	f	typeref:typename:int64_t
mulhsu	riscv/arith.h	/^inline int64_t mulhsu(int64_t a, uint64_t b)$/;"	f	typeref:typename:int64_t
mulhu	riscv/arith.h	/^inline uint64_t mulhu(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t
mutex	fesvr/context.h	/^  pthread_mutex_t mutex;$/;"	m	class:context_t	typeref:typename:pthread_mutex_t
n_pmp	riscv/processor.h	/^  reg_t n_pmp;$/;"	m	class:processor_t	typeref:typename:reg_t
name	customext/cflush.cc	/^  const char* name() { return "cflush"; }$/;"	f	class:cflush_t	typeref:typename:const char *	file:
name	customext/dummy_rocc.cc	/^  const char* name() { return "dummy_rocc"; }$/;"	f	class:dummy_rocc_t	typeref:typename:const char *	file:
name	fdt/fdt.h	/^	char name[0];$/;"	m	struct:fdt_node_header	typeref:typename:char[0]
name	fesvr/rfb.h	/^  std::string name() { return "RISC-V"; }$/;"	f	class:rfb_t	typeref:typename:std::string
name	riscv/cachesim.h	/^  std::string name;$/;"	m	class:cache_sim_t	typeref:typename:std::string
name	riscv/disasm.h	/^  const char* name;$/;"	m	class:disasm_insn_t	typeref:typename:const char *
name	riscv/trap.cc	/^const char* trap_t::name()$/;"	f	class:trap_t	typeref:typename:const char *
nameoff	fdt/fdt.h	/^	fdt32_t nameoff;$/;"	m	struct:fdt_property	typeref:typename:fdt32_t
ndmreset	riscv/debug_module.h	/^  bool ndmreset;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
next	riscv/cachesim.h	/^  uint32_t next() { return reg = (reg>>1)^(-(reg&1) & 0xd0000001); }$/;"	f	class:lfsr_t	typeref:typename:uint32_t
next	riscv/mmu.h	/^  struct icache_entry_t* next;$/;"	m	struct:icache_entry_t	typeref:struct:icache_entry_t *
next_pc	riscv/insns/sret.h	/^reg_t next_pc = (STATE.v) ? p->get_state()->vsepc : p->get_state()->sepc;$/;"	v	typeref:typename:reg_t
nextprop_	fdt/fdt_ro.c	/^static int nextprop_(const void *fdt, int offset)$/;"	f	typeref:typename:int	file:
nlink	fesvr/syscall.cc	/^  uint32_t nlink;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
nop	fesvr/dtm.cc	/^void dtm_t::nop()$/;"	f	class:dtm_t	typeref:typename:void
nprocs	riscv/debug_module.h	/^    unsigned nprocs;$/;"	m	class:debug_module_t	typeref:typename:unsigned
nprocs	riscv/sim.h	/^  unsigned nprocs() const { return procs.size(); }$/;"	f	class:sim_t	typeref:typename:unsigned
null_device	fesvr/device.h	/^  null_device_t null_device;$/;"	m	class:device_list_t	typeref:typename:null_device_t
null_device_t	fesvr/device.h	/^class null_device_t : public device_t$/;"	c
num_acc	customext/dummy_rocc.cc	/^  static const int num_acc = 4;$/;"	m	class:dummy_rocc_t	typeref:typename:const int	file:
num_devices	fesvr/device.h	/^  size_t num_devices;$/;"	m	class:device_list_t	typeref:typename:size_t
num_harts	fesvr/dtm.h	/^  int num_harts;$/;"	m	class:dtm_t	typeref:typename:int
num_triggers	riscv/processor.h	/^  static const int num_triggers = 4;$/;"	m	struct:state_t	typeref:typename:const int
off	riscv/insns/bfp.h	/^int off = cfg & (xlen-1);$/;"	v	typeref:typename:int
off	riscv/insns/bfpw.h	/^int off = cfg & 31;$/;"	v	typeref:typename:int
off	riscv/insns/vmvnfr_v.h	/^  reg_t off = P.VU.vstart % P.VU.vlenb;$/;"	v	typeref:typename:reg_t
off_dt_strings	fdt/fdt.h	/^	fdt32_t off_dt_strings;		 \/* offset to strings *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
off_dt_struct	fdt/fdt.h	/^	fdt32_t off_dt_struct;		 \/* offset to structure *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
off_mem_rsvmap	fdt/fdt.h	/^	fdt32_t off_mem_rsvmap;		 \/* offset to memory reserve map *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
offset	fesvr/device.h	/^    uint64_t offset;$/;"	m	struct:disk_t::request_t	typeref:typename:uint64_t
offset	riscv/insns/vslidedown_vi.h	/^reg_t offset = 0;$/;"	v	typeref:typename:VI_LOOP_BASE reg_t
offset	riscv/insns/vslidedown_vx.h	/^reg_t offset = 0;$/;"	v	typeref:typename:VI_LOOP_BASE reg_t
offset	riscv/insns/vslideup_vi.h	/^const reg_t offset = insn.v_zimm5();$/;"	v	typeref:typename:const reg_t
offset	riscv/insns/vslideup_vx.h	/^const reg_t offset = RS1;$/;"	v	typeref:typename:const reg_t
old	riscv/insns/csrrc.h	/^reg_t old = p->get_csr(csr, insn, write);$/;"	v	typeref:typename:reg_t
old	riscv/insns/csrrci.h	/^reg_t old = p->get_csr(csr, insn, write);$/;"	v	typeref:typename:reg_t
old	riscv/insns/csrrs.h	/^reg_t old = p->get_csr(csr, insn, write);$/;"	v	typeref:typename:reg_t
old	riscv/insns/csrrsi.h	/^reg_t old = p->get_csr(csr, insn, write);$/;"	v	typeref:typename:reg_t
old	riscv/insns/csrrw.h	/^reg_t old = p->get_csr(csr, insn, true);$/;"	v	typeref:typename:reg_t
old	riscv/insns/csrrwi.h	/^reg_t old = p->get_csr(csr, insn, true);$/;"	v	typeref:typename:reg_t
old_tios	fesvr/term.cc	/^  struct termios old_tios;$/;"	m	class:canonical_termios_t	typeref:struct:termios	file:
op	fesvr/dtm.h	/^    uint32_t op;$/;"	m	struct:dtm_t::req	typeref:typename:uint32_t
opcode	riscv/rocc.h	/^  unsigned opcode : 7;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:7
opcode_cache	riscv/processor.h	/^  insn_desc_t opcode_cache[OPCODE_CACHE_SIZE];$/;"	m	class:processor_t	typeref:typename:insn_desc_t[]
operation	riscv/mmu.h	/^    trigger_operation_t operation;$/;"	m	class:trigger_matched_t	typeref:typename:trigger_operation_t
operator ()	riscv/processor.cc	/^    bool operator()(const insn_desc_t& lhs, const insn_desc_t& rhs) {$/;"	f	struct:processor_t::build_opcode_map::cmp	typeref:typename:bool	file:
operator <<	fesvr/htif_hexwriter.cc	/^std::ostream& operator<< (std::ostream& o, const htif_hexwriter_t& h)$/;"	f	typeref:typename:std::ostream &
operator ==	riscv/disasm.h	/^  bool operator == (insn_t insn) const$/;"	f	class:disasm_insn_t	typeref:typename:bool
operator [] 	riscv/decode.h	/^  const T& operator [] (size_t i) const$/;"	f	class:regfile_t	typeref:typename:const T &
opt	riscv/disasm.h	/^} opt;$/;"	v	typeref:struct:__anonbc96ba520108
option	fesvr/option_parser.cc	/^void option_parser_t::option(char c, const char* s, int arg, std::function<void(const char*)> ac/;"	f	class:option_parser_t	typeref:typename:void
option	spike_dasm/spike_dasm_option_parser.cc	/^void option_parser_t::option(char c, const char* s, int arg, std::function<void(const char*)> ac/;"	f	class:option_parser_t	typeref:typename:void
option_parser_t	fesvr/option_parser.h	/^  option_parser_t() : helpmsg(0) {}$/;"	f	class:option_parser_t
option_parser_t	fesvr/option_parser.h	/^class option_parser_t$/;"	c
option_t	fesvr/option_parser.h	/^    option_t(char chr, const char* str, int arg, std::function<void(const char*)> func)$/;"	f	struct:option_parser_t::option_t
option_t	fesvr/option_parser.h	/^  struct option_t$/;"	s	class:option_parser_t
opts	fesvr/option_parser.h	/^  std::vector<option_t> opts;$/;"	m	class:option_parser_t	typeref:typename:std::vector<option_t>
out_data	fesvr/tsi.h	/^  std::deque<uint32_t> out_data;$/;"	m	class:tsi_t	typeref:typename:std::deque<uint32_t>
out_ready	fesvr/tsi.h	/^  bool out_ready() { return true; }$/;"	f	class:tsi_t	typeref:typename:bool
overlay_adjust_local_phandles	fdt/fdt_overlay.c	/^static int overlay_adjust_local_phandles(void *fdto, uint32_t delta)$/;"	f	typeref:typename:int	file:
overlay_adjust_node_phandles	fdt/fdt_overlay.c	/^static int overlay_adjust_node_phandles(void *fdto, int node,$/;"	f	typeref:typename:int	file:
overlay_apply_node	fdt/fdt_overlay.c	/^static int overlay_apply_node(void *fdt, int target,$/;"	f	typeref:typename:int	file:
overlay_fixup_one_phandle	fdt/fdt_overlay.c	/^static int overlay_fixup_one_phandle(void *fdt, void *fdto,$/;"	f	typeref:typename:int	file:
overlay_fixup_phandle	fdt/fdt_overlay.c	/^static int overlay_fixup_phandle(void *fdt, void *fdto, int symbols_off,$/;"	f	typeref:typename:int	file:
overlay_fixup_phandles	fdt/fdt_overlay.c	/^static int overlay_fixup_phandles(void *fdt, void *fdto)$/;"	f	typeref:typename:int	file:
overlay_get_target	fdt/fdt_overlay.c	/^static int overlay_get_target(const void *fdt, const void *fdto,$/;"	f	typeref:typename:int	file:
overlay_get_target_phandle	fdt/fdt_overlay.c	/^static uint32_t overlay_get_target_phandle(const void *fdto, int fragment)$/;"	f	typeref:typename:uint32_t	file:
overlay_merge	fdt/fdt_overlay.c	/^static int overlay_merge(void *fdt, void *fdto)$/;"	f	typeref:typename:int	file:
overlay_phandle_add_offset	fdt/fdt_overlay.c	/^static int overlay_phandle_add_offset(void *fdt, int node,$/;"	f	typeref:typename:int	file:
overlay_symbol_update	fdt/fdt_overlay.c	/^static int overlay_symbol_update(void *fdt, void *fdto)$/;"	f	typeref:typename:int	file:
overlay_update_local_node_references	fdt/fdt_overlay.c	/^static int overlay_update_local_node_references(void *fdto,$/;"	f	typeref:typename:int	file:
overlay_update_local_references	fdt/fdt_overlay.c	/^static int overlay_update_local_references(void *fdto, uint32_t delta)$/;"	f	typeref:typename:int	file:
p	riscv/extension.h	/^  processor_t* p;$/;"	m	class:extension_t	typeref:typename:processor_t *
p	riscv/processor.h	/^      processor_t* p;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:processor_t *
p	tests/testlib.py	/^    def p(self, obj):$/;"	m	class:Gdb
p_align	fesvr/elf.h	/^  uint32_t p_align;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_align	fesvr/elf.h	/^  uint64_t p_align;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
p_filesz	fesvr/elf.h	/^  uint32_t p_filesz;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_filesz	fesvr/elf.h	/^  uint64_t p_filesz;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
p_flags	fesvr/elf.h	/^  uint32_t p_flags;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_flags	fesvr/elf.h	/^  uint32_t p_flags;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint32_t
p_memsz	fesvr/elf.h	/^  uint32_t p_memsz;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_memsz	fesvr/elf.h	/^  uint64_t p_memsz;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
p_offset	fesvr/elf.h	/^  uint32_t p_offset;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_offset	fesvr/elf.h	/^  uint64_t p_offset;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
p_paddr	fesvr/elf.h	/^  uint32_t p_paddr;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_paddr	fesvr/elf.h	/^  uint64_t p_paddr;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
p_type	fesvr/elf.h	/^  uint32_t p_type;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_type	fesvr/elf.h	/^  uint32_t p_type;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint32_t
p_vaddr	fesvr/elf.h	/^  uint32_t p_vaddr;$/;"	m	struct:__anon9d3644870308	typeref:typename:uint32_t
p_vaddr	fesvr/elf.h	/^  uint64_t p_vaddr;$/;"	m	struct:__anon9d3644870708	typeref:typename:uint64_t
packToExtF80UI64	softfloat/internals.h	/^#define packToExtF80UI64(/;"	d
packToF128UI64	softfloat/internals.h	/^#define packToF128UI64(/;"	d
packToF128UI96	softfloat/internals.h	/^#define packToF128UI96(/;"	d
packToF16UI	softfloat/internals.h	/^#define packToF16UI(/;"	d
packToF32UI	softfloat/internals.h	/^#define packToF32UI(/;"	d
packToF64UI	softfloat/internals.h	/^#define packToF64UI(/;"	d
paddr_bits	riscv/processor.cc	/^int processor_t::paddr_bits()$/;"	f	class:processor_t	typeref:typename:int
paddr_ok	riscv/sim.cc	/^static bool paddr_ok(reg_t addr)$/;"	f	typeref:typename:bool	file:
parse	fesvr/option_parser.cc	/^const char* const* option_parser_t::parse(const char* const* argv0)$/;"	f	class:option_parser_t	typeref:typename:const char * const *
parse	spike_dasm/spike_dasm_option_parser.cc	/^const char* const* option_parser_t::parse(const char* const* argv0)$/;"	f	class:option_parser_t	typeref:typename:const char * const *
parse_arguments	fesvr/htif.cc	/^void htif_t::parse_arguments(int argc, char ** argv)$/;"	f	class:htif_t	typeref:typename:void
parse_isa_string	riscv/processor.cc	/^void processor_t::parse_isa_string(const char* str)$/;"	f	class:processor_t	typeref:typename:void
parse_priv_string	riscv/processor.cc	/^void processor_t::parse_priv_string(const char* str)$/;"	f	class:processor_t	typeref:typename:void
parse_varch_string	riscv/processor.cc	/^void processor_t::parse_varch_string(const char* s)$/;"	f	class:processor_t	typeref:typename:void
payload	fesvr/device.h	/^  uint64_t payload() { return tohost << 16 >> 16; }$/;"	f	class:command_t	typeref:typename:uint64_t
payloads	fesvr/htif.h	/^  std::vector<std::string> payloads;$/;"	m	class:htif_t	typeref:typename:std::vector<std::string>
pc	riscv/processor.h	/^  reg_t pc;$/;"	m	struct:state_t	typeref:typename:reg_t
pc_alignment_mask	riscv/processor.h	/^  reg_t pc_alignment_mask() {$/;"	f	class:processor_t	typeref:typename:reg_t
pc_histogram	riscv/processor.h	/^  std::map<reg_t,uint64_t> pc_histogram;$/;"	m	class:processor_t	typeref:typename:std::map<reg_t,uint64_t>
pending_reads	fesvr/device.h	/^  std::queue<command_t> pending_reads;$/;"	m	class:bcd_t	typeref:typename:std::queue<command_t>
perform_abstract_command	riscv/debug_module.cc	/^bool debug_module_t::perform_abstract_command()$/;"	f	class:debug_module_t	typeref:typename:bool
pixel_format	fesvr/rfb.cc	/^std::string rfb_t::pixel_format()$/;"	f	class:rfb_t	typeref:typename:std::string
plugin	riscv/devices.h	/^  mmio_plugin_t plugin;$/;"	m	class:mmio_plugin_device_t	typeref:typename:mmio_plugin_t
plugin_devices	riscv/sim.h	/^  std::vector<std::pair<reg_t, abstract_device_t*>> plugin_devices;$/;"	m	class:sim_t	typeref:typename:std::vector<std::pair<reg_t,abstract_device_t * >>
pmp_homogeneous	riscv/mmu.cc	/^reg_t mmu_t::pmp_homogeneous(reg_t addr, reg_t len)$/;"	f	class:mmu_t	typeref:typename:reg_t
pmp_ok	riscv/mmu.cc	/^reg_t mmu_t::pmp_ok(reg_t addr, reg_t len, access_type type, reg_t mode)$/;"	f	class:mmu_t	typeref:typename:reg_t
pmp_tor_mask	riscv/processor.h	/^  reg_t pmp_tor_mask() { return -(reg_t(1) << (lg_pmp_granularity - PMP_SHIFT)); }$/;"	f	class:processor_t	typeref:typename:reg_t
pmpaddr	riscv/processor.h	/^  reg_t pmpaddr[max_pmp];$/;"	m	struct:state_t	typeref:typename:reg_t[]
pmpcfg	riscv/processor.h	/^  uint8_t pmpcfg[max_pmp];$/;"	m	struct:state_t	typeref:typename:uint8_t[]
popcount	riscv/insns/vpopc_m.h	/^reg_t popcount = 0;$/;"	v	typeref:typename:reg_t
pos	riscv/insns/vcompress_vm.h	/^reg_t pos = 0;$/;"	v	typeref:typename:reg_t
pos	riscv/insns/vfirst_m.h	/^reg_t pos = -1;$/;"	v	typeref:typename:reg_t
prefix	Makefile.in	/^prefix       ?= @prefix@$/;"	m
prefix	build/Makefile	/^prefix       ?= \/etc\/opt\/risc-v$/;"	m
preload_aware_memif_t	fesvr/htif.cc	/^    preload_aware_memif_t(htif_t* htif) : memif_t(htif), htif(htif) {}$/;"	f	class:htif_t::load_payload::preload_aware_memif_t	file:
preload_aware_memif_t	fesvr/htif.cc	/^  class preload_aware_memif_t : public memif_t {$/;"	c	function:htif_t::load_payload	file:
prev_prv	riscv/insns/mret.h	/^reg_t prev_prv = get_field(s, MSTATUS_MPP);$/;"	v	typeref:typename:reg_t
prev_prv	riscv/insns/sret.h	/^reg_t prev_prv = get_field(s, MSTATUS_SPP);$/;"	v	typeref:typename:reg_t
prev_virt	riscv/insns/mret.h	/^reg_t prev_virt = get_field(s, MSTATUS_MPV);$/;"	v	typeref:typename:reg_t
prev_virt	riscv/insns/sret.h	/^  reg_t prev_virt = get_field(STATE.hstatus, HSTATUS_SPV);$/;"	v	typeref:typename:reg_t
primitiveTypes_h	softfloat/primitiveTypes.h	/^#define primitiveTypes_h /;"	d
primitives_h	softfloat/primitives.h	/^#define primitives_h /;"	d
print_stats	riscv/cachesim.cc	/^void cache_sim_t::print_stats()$/;"	f	class:cache_sim_t	typeref:typename:void
priv	riscv/riscv.ac	/^AC_ARG_WITH(priv,$/;"	w
proc	riscv/mmu.h	/^  processor_t* proc;$/;"	m	class:mmu_t	typeref:typename:processor_t *
proc_reset	riscv/debug_module.cc	/^void debug_module_t::proc_reset(unsigned id)$/;"	f	class:debug_module_t	typeref:typename:void
proc_reset	riscv/sim.cc	/^void sim_t::proc_reset(unsigned id)$/;"	f	class:sim_t	typeref:typename:void
processor	riscv/debug_module.cc	/^processor_t *debug_module_t::processor(unsigned hartid) const$/;"	f	class:debug_module_t	typeref:typename:processor_t *
processor_t	riscv/processor.cc	/^processor_t::processor_t(const char* isa, const char* priv, const char* varch,$/;"	f	class:processor_t
processor_t	riscv/processor.h	/^class processor_t : public abstract_device_t$/;"	c
procs	riscv/devices.h	/^  std::vector<processor_t*>& procs;$/;"	m	class:clint_t	typeref:typename:std::vector<processor_t * > &
procs	riscv/sim.h	/^  std::vector<processor_t*> procs;$/;"	m	class:sim_t	typeref:typename:std::vector<processor_t * >
producer	fesvr/dtm.h	/^  pthread_t producer;$/;"	m	class:dtm_t	typeref:typename:pthread_t
producer_thread	fesvr/dtm.cc	/^void dtm_t::producer_thread()$/;"	f	class:dtm_t	typeref:typename:void
progbufsize	riscv/debug_module.h	/^    unsigned progbufsize;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:unsigned
progbufsize	riscv/debug_module.h	/^  unsigned progbufsize;$/;"	m	struct:__anon5c7e8f3d0408	typeref:typename:unsigned
program_buffer	riscv/debug_module.h	/^    uint8_t *program_buffer;$/;"	m	class:debug_module_t	typeref:typename:uint8_t *
program_buffer_bytes	riscv/debug_module.h	/^    unsigned program_buffer_bytes;$/;"	m	class:debug_module_t	typeref:typename:unsigned
proj_abbreviation	configure.ac	/^m4_define( proj_abbreviation, [spike])$/;"	d
proj_maintainer	configure.ac	/^m4_define( proj_maintainer,   [Andrew Waterman])$/;"	d
proj_name	configure.ac	/^AC_INIT(proj_name,proj_version,proj_maintainer,proj_abbreviation)$/;"	p
proj_name	configure.ac	/^m4_define( proj_name,         [RISC-V ISA Simulator])$/;"	d
proj_version	configure.ac	/^m4_define( proj_version, [?])$/;"	d
project_name	Makefile.in	/^project_name := @PACKAGE_TARNAME@$/;"	m
project_name	build/Makefile	/^project_name := spike$/;"	m
project_ver	Makefile.in	/^  project_ver:=$(shell $(scripts_dir)\/vcs-version.sh $(src_dir))$/;"	m
project_ver	Makefile.in	/^  project_ver:=@PACKAGE_VERSION@$/;"	m
project_ver	build/Makefile	/^  project_ver:=$(shell $(scripts_dir)\/vcs-version.sh $(src_dir))$/;"	m
project_ver	build/Makefile	/^  project_ver:=?$/;"	m
prv	riscv/processor.h	/^  reg_t prv;    \/\/ TODO: Can this be an enum instead?$/;"	m	struct:state_t	typeref:typename:reg_t
prv	riscv/processor.h	/^  uint8_t prv;$/;"	m	struct:__anon2b80edf10108	typeref:typename:uint8_t
ptbase	riscv/mmu.h	/^  reg_t ptbase;$/;"	m	struct:vm_info	typeref:typename:reg_t
ptesize	riscv/mmu.h	/^  int ptesize;$/;"	m	struct:vm_info	typeref:typename:int
push_addr	fesvr/tsi.cc	/^void tsi_t::push_addr(addr_t addr)$/;"	f	class:tsi_t	typeref:typename:void
push_len	fesvr/tsi.cc	/^void tsi_t::push_len(addr_t len)$/;"	f	class:tsi_t	typeref:typename:void
r	riscv/interactive.cc	/^  freg_t r;$/;"	m	union:fpr	typeref:typename:freg_t	file:
r	riscv/rocc.h	/^  rocc_insn_t r;$/;"	m	union:rocc_insn_union_t	typeref:typename:rocc_insn_t
raise_interrupt	riscv/extension.cc	/^void extension_t::raise_interrupt()$/;"	f	class:extension_t	typeref:typename:void
ram_words	fesvr/dtm.h	/^  size_t ram_words;$/;"	m	class:dtm_t	typeref:typename:size_t
rd	riscv/decode.h	/^  uint64_t rd() { return x(7, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rd	riscv/rocc.h	/^  unsigned rd : 5;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:5
rd_num	riscv/insns/vfirst_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vfmv_s_f.h	/^  reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vid_v.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/viota_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vmsbf_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vmsif_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vmsof_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vmv_s_x.h	/^  reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rd_num	riscv/insns/vpopc_m.h	/^reg_t rd_num = insn.rd();$/;"	v	typeref:typename:reg_t
rdcycle	riscv/encoding.h	/^#define rdcycle(/;"	d
rdev	fesvr/syscall.cc	/^  uint64_t rdev;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
rdinstret	riscv/encoding.h	/^#define rdinstret(/;"	d
rdtime	riscv/encoding.h	/^#define rdtime(/;"	d
read	fesvr/dtm.cc	/^uint32_t dtm_t::read(uint32_t addr)$/;"	f	class:dtm_t	typeref:typename:uint32_t
read	fesvr/htif_pthread.cc	/^ssize_t htif_pthread_t::read(void* buf, size_t max_size)$/;"	f	class:htif_pthread_t	typeref:typename:ssize_t
read	fesvr/memif.cc	/^void memif_t::read(addr_t addr, size_t len, void* bytes)$/;"	f	class:memif_t	typeref:typename:void
read	fesvr/rfb.cc	/^std::string rfb_t::read()$/;"	f	class:rfb_t	typeref:typename:std::string
read	fesvr/term.cc	/^int canonical_terminal_t::read()$/;"	f	class:canonical_terminal_t	typeref:typename:int
read32	riscv/debug_module.cc	/^uint32_t debug_module_t::read32(uint8_t *memory, unsigned int index)$/;"	f	class:debug_module_t	typeref:typename:uint32_t
read_accesses	riscv/cachesim.h	/^  uint64_t read_accesses;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
read_chunk	fesvr/dtm.cc	/^void dtm_t::read_chunk(uint64_t taddr, size_t len, void* dst)$/;"	f	class:dtm_t	typeref:typename:void
read_chunk	fesvr/htif_hexwriter.cc	/^void htif_hexwriter_t::read_chunk(addr_t taddr, size_t len, void* vdst)$/;"	f	class:htif_hexwriter_t	typeref:typename:void
read_chunk	fesvr/tsi.cc	/^void tsi_t::read_chunk(addr_t taddr, size_t nbytes, void* dst)$/;"	f	class:tsi_t	typeref:typename:void
read_chunk	riscv/sim.cc	/^void sim_t::read_chunk(addr_t taddr, size_t len, void* dst)$/;"	f	class:sim_t	typeref:typename:void
read_csr	fesvr/dtm.cc	/^uint64_t dtm_t::read_csr(unsigned which)$/;"	f	class:dtm_t	typeref:typename:uint64_t
read_csr	riscv/encoding.h	/^#define read_csr(/;"	d
read_file_bytes	spike_main/spike.cc	/^static void read_file_bytes(const char *filename,size_t fileoff,$/;"	f	typeref:typename:void	file:
read_int16	fesvr/memif.cc	/^int16_t memif_t::read_int16(addr_t addr)$/;"	f	class:memif_t	typeref:typename:int16_t
read_int32	fesvr/memif.cc	/^int32_t memif_t::read_int32(addr_t addr)$/;"	f	class:memif_t	typeref:typename:int32_t
read_int64	fesvr/memif.cc	/^int64_t memif_t::read_int64(addr_t addr)$/;"	f	class:memif_t	typeref:typename:int64_t
read_int8	fesvr/memif.cc	/^int8_t memif_t::read_int8(addr_t addr)$/;"	f	class:memif_t	typeref:typename:int8_t
read_misses	riscv/cachesim.h	/^  uint64_t read_misses;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
read_pos	fesvr/rfb.h	/^  size_t read_pos;$/;"	m	class:rfb_t	typeref:typename:size_t
read_uint16	fesvr/memif.cc	/^uint16_t memif_t::read_uint16(addr_t addr)$/;"	f	class:memif_t	typeref:typename:uint16_t
read_uint32	fesvr/memif.cc	/^uint32_t memif_t::read_uint32(addr_t addr)$/;"	f	class:memif_t	typeref:typename:uint32_t
read_uint64	fesvr/memif.cc	/^uint64_t memif_t::read_uint64(addr_t addr)$/;"	f	class:memif_t	typeref:typename:uint64_t
read_uint8	fesvr/memif.cc	/^uint8_t memif_t::read_uint8(addr_t addr)$/;"	f	class:memif_t	typeref:typename:uint8_t
readline	riscv/interactive.cc	/^static std::string readline(int fd)$/;"	f	typeref:typename:std::string	file:
readonaddr	riscv/debug_module.h	/^  bool readonaddr;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
readondata	riscv/debug_module.h	/^  bool readondata;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:bool
real_time	riscv/devices.h	/^  bool real_time;$/;"	m	class:clint_t	typeref:typename:bool
real_time_ref_secs	riscv/devices.h	/^  uint64_t real_time_ref_secs;$/;"	m	class:clint_t	typeref:typename:uint64_t
real_time_ref_usecs	riscv/devices.h	/^  uint64_t real_time_ref_usecs;$/;"	m	class:clint_t	typeref:typename:uint64_t
recip7	softfloat/fall_reciprocal.c	/^static inline uint64_t recip7(uint64_t val, int e, int s, int rm, bool sub,$/;"	f	typeref:typename:uint64_t	file:
recv	fesvr/htif_pthread.cc	/^void htif_pthread_t::recv(void* buf, size_t size)$/;"	f	class:htif_pthread_t	typeref:typename:void
recv_buf	riscv/remote_bitbang.h	/^  char recv_buf[buf_size];$/;"	m	class:remote_bitbang_t	typeref:typename:char[]
recv_end	riscv/remote_bitbang.h	/^  ssize_t recv_start, recv_end;$/;"	m	class:remote_bitbang_t	typeref:typename:ssize_t
recv_nonblocking	fesvr/htif_pthread.cc	/^bool htif_pthread_t::recv_nonblocking(void* buf, size_t size)$/;"	f	class:htif_pthread_t	typeref:typename:bool
recv_start	riscv/remote_bitbang.h	/^  ssize_t recv_start, recv_end;$/;"	m	class:remote_bitbang_t	typeref:typename:ssize_t
recv_word	fesvr/tsi.cc	/^uint32_t tsi_t::recv_word(void)$/;"	f	class:tsi_t	typeref:typename:uint32_t
refill_icache	riscv/mmu.h	/^  inline icache_entry_t* refill_icache(reg_t addr, icache_entry_t* entry)$/;"	f	class:mmu_t	typeref:typename:icache_entry_t *
refill_tlb	riscv/mmu.cc	/^tlb_entry_t mmu_t::refill_tlb(reg_t vaddr, reg_t paddr, char* host_addr, access_type type)$/;"	f	class:mmu_t	typeref:typename:tlb_entry_t
reg	riscv/cachesim.h	/^  uint32_t reg;$/;"	m	class:lfsr_t	typeref:typename:uint32_t
reg_file	riscv/processor.h	/^      void *reg_file;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:void *
reg_from_bytes	riscv/mmu.cc	/^reg_t reg_from_bytes(size_t len, const uint8_t* bytes)$/;"	f	typeref:typename:reg_t
reg_referenced	riscv/processor.h	/^      char reg_referenced[NVPR];$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:char[]
reg_t	fesvr/memif.h	/^typedef uint64_t reg_t;$/;"	t	typeref:typename:uint64_t
reg_t	riscv/decode.h	/^typedef uint64_t reg_t;$/;"	t	typeref:typename:uint64_t
reg_t	riscv/mmio_plugin.h	/^typedef uint64_t reg_t;$/;"	t	typeref:typename:uint64_t
regfile_t	riscv/decode.h	/^  regfile_t()$/;"	f	class:regfile_t
regfile_t	riscv/decode.h	/^class regfile_t$/;"	c
register_base_instructions	riscv/processor.cc	/^void processor_t::register_base_instructions()$/;"	f	class:processor_t	typeref:typename:void
register_command	fesvr/device.cc	/^void device_t::register_command(size_t cmd, command_func_t handler, const char* name)$/;"	f	class:device_t	typeref:typename:void
register_device	fesvr/device.cc	/^void device_list_t::register_device(device_t* dev)$/;"	f	class:device_list_t	typeref:typename:void
register_devices	fesvr/htif.cc	/^void htif_t::register_devices()$/;"	f	class:htif_t	typeref:typename:void
register_extension	riscv/extensions.cc	/^void register_extension(const char* name, std::function<extension_t*()> f)$/;"	f	typeref:typename:void
register_extension	riscv/processor.cc	/^void processor_t::register_extension(extension_t* x)$/;"	f	class:processor_t	typeref:typename:void
register_insn	riscv/processor.cc	/^void processor_t::register_insn(insn_desc_t desc)$/;"	f	class:processor_t	typeref:typename:void
register_memtracer	riscv/mmu.cc	/^void mmu_t::register_memtracer(memtracer_t* t)$/;"	f	class:mmu_t	typeref:typename:void
register_mmio_plugin	riscv/devices.cc	/^void register_mmio_plugin(const char* name_cstr,$/;"	f	typeref:typename:void
remote_bitbang	riscv/sim.h	/^  remote_bitbang_t* remote_bitbang;$/;"	m	class:sim_t	typeref:typename:remote_bitbang_t *
remote_bitbang_t	riscv/remote_bitbang.cc	/^remote_bitbang_t::remote_bitbang_t(uint16_t port, jtag_dtm_t *tap) :$/;"	f	class:remote_bitbang_t
remote_bitbang_t	riscv/remote_bitbang.h	/^class remote_bitbang_t$/;"	c
req	fesvr/dtm.h	/^  struct req {$/;"	s	class:dtm_t
req_bits	fesvr/dtm.h	/^  req req_bits() { return req_buf; }$/;"	f	class:dtm_t	typeref:typename:req
req_buf	fesvr/dtm.h	/^  req req_buf;$/;"	m	class:dtm_t	typeref:typename:req
req_consume	fesvr/dtm.h	/^  sem_t req_consume;$/;"	m	class:dtm_t	typeref:typename:sem_t
req_produce	fesvr/dtm.h	/^  sem_t req_produce;$/;"	m	class:dtm_t	typeref:typename:sem_t
req_valid	fesvr/dtm.h	/^  bool req_valid() { return req_wait; }$/;"	f	class:dtm_t	typeref:typename:bool
req_wait	fesvr/dtm.h	/^  bool req_wait;$/;"	m	class:dtm_t	typeref:typename:bool
request_t	fesvr/device.h	/^  struct request_t$/;"	s	class:disk_t
require	riscv/decode.h	/^#define require(/;"	d
require_accelerator	riscv/decode.h	/^#define require_accelerator /;"	d
require_align	riscv/decode.h	/^#define require_align(/;"	d
require_authentication	riscv/debug_module.h	/^    bool require_authentication;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:bool
require_extension	riscv/decode.h	/^#define require_extension(/;"	d
require_fp	riscv/decode.h	/^#define require_fp /;"	d
require_noover	riscv/decode.h	/^#define require_noover(/;"	d
require_noover_widen	riscv/decode.h	/^#define require_noover_widen(/;"	d
require_novirt	riscv/decode.h	/^#define require_novirt(/;"	d
require_privilege	riscv/decode.h	/^#define require_privilege(/;"	d
require_rv32	riscv/decode.h	/^#define require_rv32 /;"	d
require_rv64	riscv/decode.h	/^#define require_rv64 /;"	d
require_vector	riscv/decode.h	/^#define require_vector(/;"	d
require_vector_novtype	riscv/decode.h	/^#define require_vector_novtype(/;"	d
require_vector_vs	riscv/decode.h	/^#define require_vector_vs /;"	d
require_vm	riscv/decode.h	/^#define require_vm /;"	d
required_rti_cycles	riscv/jtag_dtm.h	/^    unsigned required_rti_cycles;$/;"	m	class:jtag_dtm_t	typeref:typename:unsigned
res	riscv/insns/lr_d.h	/^auto res = MMU.load_int64(RS1);$/;"	v	typeref:typename:auto
res	riscv/insns/lr_w.h	/^auto res = MMU.load_int32(RS1);$/;"	v	typeref:typename:auto
res	riscv/insns/vmsbf_m.h	/^    uint64_t res = 0;$/;"	v	typeref:typename:uint64_t
res	riscv/insns/vmsif_m.h	/^    uint64_t res = 0;$/;"	v	typeref:typename:uint64_t
res	riscv/insns/vmsof_m.h	/^    uint64_t res = 0;$/;"	v	typeref:typename:uint64_t
reset	fesvr/dtm.cc	/^void dtm_t::reset()$/;"	f	class:dtm_t	typeref:typename:void
reset	fesvr/tsi.cc	/^void tsi_t::reset()$/;"	f	class:tsi_t	typeref:typename:void
reset	riscv/debug_module.cc	/^void debug_module_t::reset()$/;"	f	class:debug_module_t	typeref:typename:void
reset	riscv/decode.h	/^  void reset()$/;"	f	class:regfile_t	typeref:typename:void
reset	riscv/extension.h	/^  virtual void reset() {};$/;"	f	class:extension_t	typeref:typename:void
reset	riscv/jtag_dtm.cc	/^void jtag_dtm_t::reset() {$/;"	f	class:jtag_dtm_t	typeref:typename:void
reset	riscv/processor.cc	/^void processor_t::reset()$/;"	f	class:processor_t	typeref:typename:void
reset	riscv/processor.cc	/^void processor_t::vectorUnit_t::reset(){$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:void
reset	riscv/processor.cc	/^void state_t::reset(reg_t max_isa)$/;"	f	class:state_t	typeref:typename:void
reset	riscv/sim.cc	/^void sim_t::reset()$/;"	f	class:sim_t	typeref:typename:void
resp	fesvr/dtm.h	/^    uint32_t resp;$/;"	m	struct:dtm_t::resp	typeref:typename:uint32_t
resp	fesvr/dtm.h	/^  struct resp {$/;"	s	class:dtm_t
resp_buf	fesvr/dtm.h	/^  resp resp_buf;$/;"	m	class:dtm_t	typeref:typename:resp
resp_consume	fesvr/dtm.h	/^  sem_t resp_consume;$/;"	m	class:dtm_t	typeref:typename:sem_t
resp_produce	fesvr/dtm.h	/^  sem_t resp_produce;$/;"	m	class:dtm_t	typeref:typename:sem_t
resp_ready	fesvr/dtm.h	/^  bool resp_ready() { return true; }$/;"	f	class:dtm_t	typeref:typename:bool
resp_wait	fesvr/dtm.h	/^  bool resp_wait;$/;"	m	class:dtm_t	typeref:typename:bool
respond	fesvr/device.h	/^  void respond(uint64_t resp) { cb((tohost >> 48 << 48) | (resp << 16 >> 16)); }$/;"	f	class:command_t	typeref:typename:void
restore_reg	fesvr/dtm.cc	/^void dtm_t::restore_reg(unsigned regno, uint64_t val)$/;"	f	class:dtm_t	typeref:typename:void
restore_tios	fesvr/term.cc	/^  bool restore_tios;$/;"	m	class:canonical_termios_t	typeref:typename:bool	file:
resume	debug_rom/debug_rom.S	/^resume:$/;"	l
resume	fesvr/dtm.cc	/^void dtm_t::resume(int hartsel)$/;"	f	class:dtm_t	typeref:typename:void
resumeack	riscv/debug_module.h	/^  bool resumeack;$/;"	m	struct:__anon5c7e8f3d0708	typeref:typename:bool
resumereq	riscv/debug_module.h	/^  bool resumereq;$/;"	m	struct:__anon5c7e8f3d0208	typeref:typename:bool
ret	riscv/processor.cc	/^#define ret(/;"	d	file:
return_resp	fesvr/dtm.cc	/^void dtm_t::return_resp(resp resp_bits){$/;"	f	class:dtm_t	typeref:typename:void
reverse_list	Makefile.in	/^reverse_list = $(call reverse_list_h,$(1),)$/;"	m
reverse_list	build/Makefile	/^reverse_list = $(call reverse_list_h,$(1),)$/;"	m
reverse_list_h	Makefile.in	/^define reverse_list_h$/;"	m
reverse_list_h	build/Makefile	/^define reverse_list_h$/;"	m
rfb_t	fesvr/rfb.cc	/^rfb_t::rfb_t(int display)$/;"	f	class:rfb_t
rfb_t	fesvr/rfb.h	/^class rfb_t : public device_t$/;"	c
rfb_thread_main	fesvr/rfb.cc	/^void* rfb_thread_main(void* arg)$/;"	f	typeref:typename:void *
rhs	riscv/insns/div.h	/^sreg_t rhs = sext_xlen(RS2);$/;"	v	typeref:typename:sreg_t
rhs	riscv/insns/divu.h	/^reg_t rhs = zext_xlen(RS2);$/;"	v	typeref:typename:reg_t
rhs	riscv/insns/divuw.h	/^reg_t rhs = zext32(RS2);$/;"	v	typeref:typename:reg_t
rhs	riscv/insns/divw.h	/^sreg_t rhs = sext32(RS2);$/;"	v	typeref:typename:sreg_t
rhs	riscv/insns/rem.h	/^sreg_t rhs = sext_xlen(RS2);$/;"	v	typeref:typename:sreg_t
rhs	riscv/insns/remu.h	/^reg_t rhs = zext_xlen(RS2);$/;"	v	typeref:typename:reg_t
rhs	riscv/insns/remuw.h	/^reg_t rhs = zext32(RS2);$/;"	v	typeref:typename:reg_t
rhs	riscv/insns/remw.h	/^sreg_t rhs = sext32(RS2);$/;"	v	typeref:typename:sreg_t
riscv_CFLAGS	build/riscv.mk	/^riscv_CFLAGS = -fPIC$/;"	m
riscv_CFLAGS	riscv/riscv.mk.in	/^riscv_CFLAGS = -fPIC$/;"	m
riscv_gen_hdrs	build/riscv.mk	/^riscv_gen_hdrs = \\$/;"	m
riscv_gen_hdrs	riscv/riscv.mk.in	/^riscv_gen_hdrs = \\$/;"	m
riscv_gen_srcs	build/riscv.mk	/^riscv_gen_srcs = \\$/;"	m
riscv_gen_srcs	riscv/riscv.mk.in	/^riscv_gen_srcs = \\$/;"	m
riscv_hdrs	build/riscv.mk	/^riscv_hdrs = \\$/;"	m
riscv_hdrs	riscv/riscv.mk.in	/^riscv_hdrs = \\$/;"	m
riscv_insn_ext_a	build/riscv.mk	/^riscv_insn_ext_a = \\$/;"	m
riscv_insn_ext_a	riscv/riscv.mk.in	/^riscv_insn_ext_a = \\$/;"	m
riscv_insn_ext_b	build/riscv.mk	/^riscv_insn_ext_b = \\$/;"	m
riscv_insn_ext_b	riscv/riscv.mk.in	/^riscv_insn_ext_b = \\$/;"	m
riscv_insn_ext_c	build/riscv.mk	/^riscv_insn_ext_c = \\$/;"	m
riscv_insn_ext_c	riscv/riscv.mk.in	/^riscv_insn_ext_c = \\$/;"	m
riscv_insn_ext_d	build/riscv.mk	/^riscv_insn_ext_d = \\$/;"	m
riscv_insn_ext_d	riscv/riscv.mk.in	/^riscv_insn_ext_d = \\$/;"	m
riscv_insn_ext_f	build/riscv.mk	/^riscv_insn_ext_f = \\$/;"	m
riscv_insn_ext_f	riscv/riscv.mk.in	/^riscv_insn_ext_f = \\$/;"	m
riscv_insn_ext_h	build/riscv.mk	/^riscv_insn_ext_h = \\$/;"	m
riscv_insn_ext_h	riscv/riscv.mk.in	/^riscv_insn_ext_h = \\$/;"	m
riscv_insn_ext_i	build/riscv.mk	/^riscv_insn_ext_i = \\$/;"	m
riscv_insn_ext_i	riscv/riscv.mk.in	/^riscv_insn_ext_i = \\$/;"	m
riscv_insn_ext_m	build/riscv.mk	/^riscv_insn_ext_m = \\$/;"	m
riscv_insn_ext_m	riscv/riscv.mk.in	/^riscv_insn_ext_m = \\$/;"	m
riscv_insn_ext_q	build/riscv.mk	/^riscv_insn_ext_q = \\$/;"	m
riscv_insn_ext_q	riscv/riscv.mk.in	/^riscv_insn_ext_q = \\$/;"	m
riscv_insn_ext_v	build/riscv.mk	/^riscv_insn_ext_v = \\$/;"	m
riscv_insn_ext_v	riscv/riscv.mk.in	/^riscv_insn_ext_v = \\$/;"	m
riscv_insn_ext_v_alu_fp	build/riscv.mk	/^riscv_insn_ext_v_alu_fp = \\$/;"	m
riscv_insn_ext_v_alu_fp	riscv/riscv.mk.in	/^riscv_insn_ext_v_alu_fp = \\$/;"	m
riscv_insn_ext_v_alu_int	build/riscv.mk	/^riscv_insn_ext_v_alu_int = \\$/;"	m
riscv_insn_ext_v_alu_int	riscv/riscv.mk.in	/^riscv_insn_ext_v_alu_int = \\$/;"	m
riscv_insn_ext_v_amo	build/riscv.mk	/^riscv_insn_ext_v_amo = \\$/;"	m
riscv_insn_ext_v_amo	riscv/riscv.mk.in	/^riscv_insn_ext_v_amo = \\$/;"	m
riscv_insn_ext_v_ctrl	build/riscv.mk	/^riscv_insn_ext_v_ctrl = \\$/;"	m
riscv_insn_ext_v_ctrl	riscv/riscv.mk.in	/^riscv_insn_ext_v_ctrl = \\$/;"	m
riscv_insn_ext_v_ldst	build/riscv.mk	/^riscv_insn_ext_v_ldst = \\$/;"	m
riscv_insn_ext_v_ldst	riscv/riscv.mk.in	/^riscv_insn_ext_v_ldst = \\$/;"	m
riscv_insn_ext_zfh	build/riscv.mk	/^riscv_insn_ext_zfh = \\$/;"	m
riscv_insn_ext_zfh	riscv/riscv.mk.in	/^riscv_insn_ext_zfh = \\$/;"	m
riscv_insn_list	build/riscv.mk	/^riscv_insn_list = \\$/;"	m
riscv_insn_list	riscv/riscv.mk.in	/^riscv_insn_list = \\$/;"	m
riscv_insn_priv	build/riscv.mk	/^riscv_insn_priv = \\$/;"	m
riscv_insn_priv	riscv/riscv.mk.in	/^riscv_insn_priv = \\$/;"	m
riscv_install_hdrs	build/riscv.mk	/^riscv_install_hdrs = mmio_plugin.h$/;"	m
riscv_install_hdrs	riscv/riscv.mk.in	/^riscv_install_hdrs = mmio_plugin.h$/;"	m
riscv_install_prog_srcs	build/riscv.mk	/^riscv_install_prog_srcs = \\$/;"	m
riscv_install_prog_srcs	riscv/riscv.mk.in	/^riscv_install_prog_srcs = \\$/;"	m
riscv_junk	build/riscv.mk	/^riscv_junk = \\$/;"	m
riscv_junk	riscv/riscv.mk.in	/^riscv_junk = \\$/;"	m
riscv_precompiled_hdrs	build/riscv.mk	/^riscv_precompiled_hdrs = \\$/;"	m
riscv_precompiled_hdrs	riscv/riscv.mk.in	/^riscv_precompiled_hdrs = \\$/;"	m
riscv_srcs	build/riscv.mk	/^riscv_srcs = \\$/;"	m
riscv_srcs	riscv/riscv.mk.in	/^riscv_srcs = \\$/;"	m
riscv_stat	fesvr/syscall.cc	/^  riscv_stat(const struct stat& s)$/;"	f	struct:riscv_stat	file:
riscv_stat	fesvr/syscall.cc	/^struct riscv_stat$/;"	s	file:
riscv_subproject_deps	build/riscv.mk	/^riscv_subproject_deps = \\$/;"	m
riscv_subproject_deps	riscv/riscv.mk.in	/^riscv_subproject_deps = \\$/;"	m
riscv_test_srcs	build/riscv.mk	/^riscv_test_srcs =$/;"	m
riscv_test_srcs	riscv/riscv.mk.in	/^riscv_test_srcs =$/;"	m
rm	riscv/decode.h	/^  uint64_t rm() { return x(12, 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rocc_insn_t	riscv/rocc.h	/^struct rocc_insn_t$/;"	s
rocc_insn_union_t	riscv/rocc.h	/^union rocc_insn_union_t$/;"	u
rocc_t	riscv/rocc.h	/^class rocc_t : public extension_t$/;"	c
rom_device_t	riscv/devices.h	/^class rom_device_t : public abstract_device_t {$/;"	c
rom_device_t	riscv/rom.cc	/^rom_device_t::rom_device_t(std::vector<char> data)$/;"	f	class:rom_device_t
rs1	riscv/decode.h	/^  uint64_t rs1() { return x(15, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rs1	riscv/insns/bmator.h	/^int64_t rs1 = RS1;$/;"	v	typeref:typename:int64_t
rs1	riscv/insns/bmatxor.h	/^int64_t rs1 = RS1;$/;"	v	typeref:typename:int64_t
rs1	riscv/insns/vfmerge_vfm.h	/^      auto rs1 = f16(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vfmerge_vfm.h	/^      auto rs1 = f32(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vfmerge_vfm.h	/^      auto rs1 = f64(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vfmv_v_f.h	/^      auto rs1 = f16(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vfmv_v_f.h	/^      auto rs1 = f32(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vfmv_v_f.h	/^      auto rs1 = f64(READ_FREG(rs1_num));$/;"	v	typeref:typename:auto
rs1	riscv/insns/vmulhsu_vx.h	/^  uint16_t rs1 = RS1;$/;"	v	typeref:typename:uint16_t
rs1	riscv/insns/vmulhsu_vx.h	/^  uint32_t rs1 = RS1;$/;"	v	typeref:typename:uint32_t
rs1	riscv/insns/vmulhsu_vx.h	/^  uint64_t rs1 = RS1;$/;"	v	typeref:typename:uint64_t
rs1	riscv/insns/vmulhsu_vx.h	/^  uint8_t rs1 = RS1;$/;"	v	typeref:typename:uint8_t
rs1	riscv/insns/vmv_x_s.h	/^reg_t rs1 = RS1;$/;"	v	typeref:typename:reg_t
rs1	riscv/insns/vrgather_vx.h	/^reg_t rs1 = RS1;$/;"	v	typeref:typename:reg_t
rs1	riscv/rocc.h	/^  unsigned rs1 : 5;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:5
rs1_num	riscv/insns/vid_v.h	/^reg_t rs1_num = insn.rs1();$/;"	v	typeref:typename:reg_t
rs1_num	riscv/insns/viota_m.h	/^reg_t rs1_num = insn.rs1();$/;"	v	typeref:typename:reg_t
rs2	riscv/decode.h	/^  uint64_t rs2() { return x(20, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rs2	riscv/rocc.h	/^  unsigned rs2 : 5;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:5
rs2_num	riscv/insns/vfirst_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vfmv_f_s.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vid_v.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/viota_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vmsbf_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vmsif_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vmsof_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vmv_x_s.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2_num	riscv/insns/vpopc_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v	typeref:typename:reg_t
rs2t	riscv/insns/bmator.h	/^int64_t rs2t = RS2;$/;"	v	typeref:typename:int64_t
rs2t	riscv/insns/bmatxor.h	/^int64_t rs2t = RS2;$/;"	v	typeref:typename:int64_t
rs3	riscv/decode.h	/^  uint64_t rs3() { return x(27, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rshamt	riscv/insns/fsl.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/fslw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rshamt	riscv/insns/fsr.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/fsri.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/fsriw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rshamt	riscv/insns/fsrw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rshamt	riscv/insns/rol.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/rolw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rshamt	riscv/insns/ror.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/rori.h	/^int rshamt = -shamt & (xlen-1);$/;"	v	typeref:typename:int
rshamt	riscv/insns/roriw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rshamt	riscv/insns/rorw.h	/^int rshamt = -shamt & 31;$/;"	v	typeref:typename:int
rsqrte7	softfloat/fall_reciprocal.c	/^static inline uint64_t rsqrte7(uint64_t val, int e, int s, bool sub) {$/;"	f	typeref:typename:uint64_t	file:
rti_remaining	riscv/debug_module.h	/^    unsigned rti_remaining;$/;"	m	class:debug_module_t	typeref:typename:unsigned
rti_remaining	riscv/jtag_dtm.h	/^    unsigned rti_remaining;$/;"	m	class:jtag_dtm_t	typeref:typename:unsigned
run	fesvr/htif.cc	/^int htif_t::run()$/;"	f	class:htif_t	typeref:typename:int
run	riscv/sim.cc	/^int sim_t::run()$/;"	f	class:sim_t	typeref:typename:int
run_abstract_command	fesvr/dtm.cc	/^uint32_t dtm_t::run_abstract_command(uint32_t command,$/;"	f	class:dtm_t	typeref:typename:uint32_t
run_test_idle	riscv/debug_module.cc	/^void debug_module_t::run_test_idle()$/;"	f	class:debug_module_t	typeref:typename:void
running	fesvr/dtm.h	/^  bool running;$/;"	m	class:dtm_t	typeref:typename:bool
rv32	riscv/processor.h	/^  insn_func_t rv32;$/;"	m	struct:insn_desc_t	typeref:typename:insn_func_t
rv32_NAME	riscv/insn_template.cc	/^reg_t rv32_NAME(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_add	build/add.cc	/^reg_t rv32_add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addi	build/addi.cc	/^reg_t rv32_addi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addiw	build/addiw.cc	/^reg_t rv32_addiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addiwu	build/addiwu.cc	/^reg_t rv32_addiwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addu_w	build/addu_w.cc	/^reg_t rv32_addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addw	build/addw.cc	/^reg_t rv32_addw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_addwu	build/addwu.cc	/^reg_t rv32_addwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoadd_d	build/amoadd_d.cc	/^reg_t rv32_amoadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoadd_w	build/amoadd_w.cc	/^reg_t rv32_amoadd_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoand_d	build/amoand_d.cc	/^reg_t rv32_amoand_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoand_w	build/amoand_w.cc	/^reg_t rv32_amoand_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomax_d	build/amomax_d.cc	/^reg_t rv32_amomax_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomax_w	build/amomax_w.cc	/^reg_t rv32_amomax_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomaxu_d	build/amomaxu_d.cc	/^reg_t rv32_amomaxu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomaxu_w	build/amomaxu_w.cc	/^reg_t rv32_amomaxu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomin_d	build/amomin_d.cc	/^reg_t rv32_amomin_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amomin_w	build/amomin_w.cc	/^reg_t rv32_amomin_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amominu_d	build/amominu_d.cc	/^reg_t rv32_amominu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amominu_w	build/amominu_w.cc	/^reg_t rv32_amominu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoor_d	build/amoor_d.cc	/^reg_t rv32_amoor_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoor_w	build/amoor_w.cc	/^reg_t rv32_amoor_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoswap_d	build/amoswap_d.cc	/^reg_t rv32_amoswap_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoswap_w	build/amoswap_w.cc	/^reg_t rv32_amoswap_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoxor_d	build/amoxor_d.cc	/^reg_t rv32_amoxor_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_amoxor_w	build/amoxor_w.cc	/^reg_t rv32_amoxor_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_and	build/and.cc	/^reg_t rv32_and(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_andi	build/andi.cc	/^reg_t rv32_andi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_andn	build/andn.cc	/^reg_t rv32_andn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_auipc	build/auipc.cc	/^reg_t rv32_auipc(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bdep	build/bdep.cc	/^reg_t rv32_bdep(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bdepw	build/bdepw.cc	/^reg_t rv32_bdepw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_beq	build/beq.cc	/^reg_t rv32_beq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bext	build/bext.cc	/^reg_t rv32_bext(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bextw	build/bextw.cc	/^reg_t rv32_bextw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bfp	build/bfp.cc	/^reg_t rv32_bfp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bfpw	build/bfpw.cc	/^reg_t rv32_bfpw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bge	build/bge.cc	/^reg_t rv32_bge(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bgeu	build/bgeu.cc	/^reg_t rv32_bgeu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_blt	build/blt.cc	/^reg_t rv32_blt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bltu	build/bltu.cc	/^reg_t rv32_bltu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bmatflip	build/bmatflip.cc	/^reg_t rv32_bmatflip(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bmator	build/bmator.cc	/^reg_t rv32_bmator(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bmatxor	build/bmatxor.cc	/^reg_t rv32_bmatxor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_bne	build/bne.cc	/^reg_t rv32_bne(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_add	build/c_add.cc	/^reg_t rv32_c_add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_addi	build/c_addi.cc	/^reg_t rv32_c_addi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_addi4spn	build/c_addi4spn.cc	/^reg_t rv32_c_addi4spn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_addw	build/c_addw.cc	/^reg_t rv32_c_addw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_and	build/c_and.cc	/^reg_t rv32_c_and(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_andi	build/c_andi.cc	/^reg_t rv32_c_andi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_beqz	build/c_beqz.cc	/^reg_t rv32_c_beqz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_bnez	build/c_bnez.cc	/^reg_t rv32_c_bnez(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_ebreak	build/c_ebreak.cc	/^reg_t rv32_c_ebreak(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fld	build/c_fld.cc	/^reg_t rv32_c_fld(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fldsp	build/c_fldsp.cc	/^reg_t rv32_c_fldsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_flw	build/c_flw.cc	/^reg_t rv32_c_flw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_flwsp	build/c_flwsp.cc	/^reg_t rv32_c_flwsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fsd	build/c_fsd.cc	/^reg_t rv32_c_fsd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fsdsp	build/c_fsdsp.cc	/^reg_t rv32_c_fsdsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fsw	build/c_fsw.cc	/^reg_t rv32_c_fsw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_fswsp	build/c_fswsp.cc	/^reg_t rv32_c_fswsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_j	build/c_j.cc	/^reg_t rv32_c_j(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_jal	build/c_jal.cc	/^reg_t rv32_c_jal(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_jalr	build/c_jalr.cc	/^reg_t rv32_c_jalr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_jr	build/c_jr.cc	/^reg_t rv32_c_jr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_li	build/c_li.cc	/^reg_t rv32_c_li(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_lui	build/c_lui.cc	/^reg_t rv32_c_lui(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_lw	build/c_lw.cc	/^reg_t rv32_c_lw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_lwsp	build/c_lwsp.cc	/^reg_t rv32_c_lwsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_mv	build/c_mv.cc	/^reg_t rv32_c_mv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_or	build/c_or.cc	/^reg_t rv32_c_or(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_slli	build/c_slli.cc	/^reg_t rv32_c_slli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_srai	build/c_srai.cc	/^reg_t rv32_c_srai(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_srli	build/c_srli.cc	/^reg_t rv32_c_srli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_sub	build/c_sub.cc	/^reg_t rv32_c_sub(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_subw	build/c_subw.cc	/^reg_t rv32_c_subw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_sw	build/c_sw.cc	/^reg_t rv32_c_sw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_swsp	build/c_swsp.cc	/^reg_t rv32_c_swsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_c_xor	build/c_xor.cc	/^reg_t rv32_c_xor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmul	build/clmul.cc	/^reg_t rv32_clmul(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmulh	build/clmulh.cc	/^reg_t rv32_clmulh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmulhw	build/clmulhw.cc	/^reg_t rv32_clmulhw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmulr	build/clmulr.cc	/^reg_t rv32_clmulr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmulrw	build/clmulrw.cc	/^reg_t rv32_clmulrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clmulw	build/clmulw.cc	/^reg_t rv32_clmulw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clz	build/clz.cc	/^reg_t rv32_clz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_clzw	build/clzw.cc	/^reg_t rv32_clzw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_cmix	build/cmix.cc	/^reg_t rv32_cmix(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_cmov	build/cmov.cc	/^reg_t rv32_cmov(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32_b	build/crc32_b.cc	/^reg_t rv32_crc32_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32_d	build/crc32_d.cc	/^reg_t rv32_crc32_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32_h	build/crc32_h.cc	/^reg_t rv32_crc32_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32_w	build/crc32_w.cc	/^reg_t rv32_crc32_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32c_b	build/crc32c_b.cc	/^reg_t rv32_crc32c_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32c_d	build/crc32c_d.cc	/^reg_t rv32_crc32c_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32c_h	build/crc32c_h.cc	/^reg_t rv32_crc32c_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_crc32c_w	build/crc32c_w.cc	/^reg_t rv32_crc32c_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_ctz	build/ctz.cc	/^reg_t rv32_ctz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_ctzw	build/ctzw.cc	/^reg_t rv32_ctzw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_div	build/div.cc	/^reg_t rv32_div(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_divu	build/divu.cc	/^reg_t rv32_divu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_divuw	build/divuw.cc	/^reg_t rv32_divuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_divw	build/divw.cc	/^reg_t rv32_divw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fadd_d	build/fadd_d.cc	/^reg_t rv32_fadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fadd_h	build/fadd_h.cc	/^reg_t rv32_fadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fadd_q	build/fadd_q.cc	/^reg_t rv32_fadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fadd_s	build/fadd_s.cc	/^reg_t rv32_fadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fclass_d	build/fclass_d.cc	/^reg_t rv32_fclass_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fclass_h	build/fclass_h.cc	/^reg_t rv32_fclass_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fclass_q	build/fclass_q.cc	/^reg_t rv32_fclass_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fclass_s	build/fclass_s.cc	/^reg_t rv32_fclass_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_h	build/fcvt_d_h.cc	/^reg_t rv32_fcvt_d_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_l	build/fcvt_d_l.cc	/^reg_t rv32_fcvt_d_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_lu	build/fcvt_d_lu.cc	/^reg_t rv32_fcvt_d_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_q	build/fcvt_d_q.cc	/^reg_t rv32_fcvt_d_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_s	build/fcvt_d_s.cc	/^reg_t rv32_fcvt_d_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_w	build/fcvt_d_w.cc	/^reg_t rv32_fcvt_d_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_d_wu	build/fcvt_d_wu.cc	/^reg_t rv32_fcvt_d_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_d	build/fcvt_h_d.cc	/^reg_t rv32_fcvt_h_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_l	build/fcvt_h_l.cc	/^reg_t rv32_fcvt_h_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_lu	build/fcvt_h_lu.cc	/^reg_t rv32_fcvt_h_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_q	build/fcvt_h_q.cc	/^reg_t rv32_fcvt_h_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_s	build/fcvt_h_s.cc	/^reg_t rv32_fcvt_h_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_w	build/fcvt_h_w.cc	/^reg_t rv32_fcvt_h_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_h_wu	build/fcvt_h_wu.cc	/^reg_t rv32_fcvt_h_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_l_d	build/fcvt_l_d.cc	/^reg_t rv32_fcvt_l_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_l_h	build/fcvt_l_h.cc	/^reg_t rv32_fcvt_l_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_l_q	build/fcvt_l_q.cc	/^reg_t rv32_fcvt_l_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_l_s	build/fcvt_l_s.cc	/^reg_t rv32_fcvt_l_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_lu_d	build/fcvt_lu_d.cc	/^reg_t rv32_fcvt_lu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_lu_h	build/fcvt_lu_h.cc	/^reg_t rv32_fcvt_lu_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_lu_q	build/fcvt_lu_q.cc	/^reg_t rv32_fcvt_lu_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_lu_s	build/fcvt_lu_s.cc	/^reg_t rv32_fcvt_lu_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_d	build/fcvt_q_d.cc	/^reg_t rv32_fcvt_q_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_h	build/fcvt_q_h.cc	/^reg_t rv32_fcvt_q_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_l	build/fcvt_q_l.cc	/^reg_t rv32_fcvt_q_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_lu	build/fcvt_q_lu.cc	/^reg_t rv32_fcvt_q_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_s	build/fcvt_q_s.cc	/^reg_t rv32_fcvt_q_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_w	build/fcvt_q_w.cc	/^reg_t rv32_fcvt_q_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_q_wu	build/fcvt_q_wu.cc	/^reg_t rv32_fcvt_q_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_d	build/fcvt_s_d.cc	/^reg_t rv32_fcvt_s_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_h	build/fcvt_s_h.cc	/^reg_t rv32_fcvt_s_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_l	build/fcvt_s_l.cc	/^reg_t rv32_fcvt_s_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_lu	build/fcvt_s_lu.cc	/^reg_t rv32_fcvt_s_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_q	build/fcvt_s_q.cc	/^reg_t rv32_fcvt_s_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_w	build/fcvt_s_w.cc	/^reg_t rv32_fcvt_s_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_s_wu	build/fcvt_s_wu.cc	/^reg_t rv32_fcvt_s_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_w_d	build/fcvt_w_d.cc	/^reg_t rv32_fcvt_w_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_w_h	build/fcvt_w_h.cc	/^reg_t rv32_fcvt_w_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_w_q	build/fcvt_w_q.cc	/^reg_t rv32_fcvt_w_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_w_s	build/fcvt_w_s.cc	/^reg_t rv32_fcvt_w_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_wu_d	build/fcvt_wu_d.cc	/^reg_t rv32_fcvt_wu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_wu_h	build/fcvt_wu_h.cc	/^reg_t rv32_fcvt_wu_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_wu_q	build/fcvt_wu_q.cc	/^reg_t rv32_fcvt_wu_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fcvt_wu_s	build/fcvt_wu_s.cc	/^reg_t rv32_fcvt_wu_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fdiv_d	build/fdiv_d.cc	/^reg_t rv32_fdiv_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fdiv_h	build/fdiv_h.cc	/^reg_t rv32_fdiv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fdiv_q	build/fdiv_q.cc	/^reg_t rv32_fdiv_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fdiv_s	build/fdiv_s.cc	/^reg_t rv32_fdiv_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fence	build/fence.cc	/^reg_t rv32_fence(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fence_i	build/fence_i.cc	/^reg_t rv32_fence_i(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_feq_d	build/feq_d.cc	/^reg_t rv32_feq_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_feq_h	build/feq_h.cc	/^reg_t rv32_feq_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_feq_q	build/feq_q.cc	/^reg_t rv32_feq_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_feq_s	build/feq_s.cc	/^reg_t rv32_feq_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fld	build/fld.cc	/^reg_t rv32_fld(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fle_d	build/fle_d.cc	/^reg_t rv32_fle_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fle_h	build/fle_h.cc	/^reg_t rv32_fle_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fle_q	build/fle_q.cc	/^reg_t rv32_fle_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fle_s	build/fle_s.cc	/^reg_t rv32_fle_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flh	build/flh.cc	/^reg_t rv32_flh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flq	build/flq.cc	/^reg_t rv32_flq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flt_d	build/flt_d.cc	/^reg_t rv32_flt_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flt_h	build/flt_h.cc	/^reg_t rv32_flt_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flt_q	build/flt_q.cc	/^reg_t rv32_flt_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flt_s	build/flt_s.cc	/^reg_t rv32_flt_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_flw	build/flw.cc	/^reg_t rv32_flw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmadd_d	build/fmadd_d.cc	/^reg_t rv32_fmadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmadd_h	build/fmadd_h.cc	/^reg_t rv32_fmadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmadd_q	build/fmadd_q.cc	/^reg_t rv32_fmadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmadd_s	build/fmadd_s.cc	/^reg_t rv32_fmadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmax_d	build/fmax_d.cc	/^reg_t rv32_fmax_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmax_h	build/fmax_h.cc	/^reg_t rv32_fmax_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmax_q	build/fmax_q.cc	/^reg_t rv32_fmax_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmax_s	build/fmax_s.cc	/^reg_t rv32_fmax_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmin_d	build/fmin_d.cc	/^reg_t rv32_fmin_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmin_h	build/fmin_h.cc	/^reg_t rv32_fmin_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmin_q	build/fmin_q.cc	/^reg_t rv32_fmin_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmin_s	build/fmin_s.cc	/^reg_t rv32_fmin_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmsub_d	build/fmsub_d.cc	/^reg_t rv32_fmsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmsub_h	build/fmsub_h.cc	/^reg_t rv32_fmsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmsub_q	build/fmsub_q.cc	/^reg_t rv32_fmsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmsub_s	build/fmsub_s.cc	/^reg_t rv32_fmsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmul_d	build/fmul_d.cc	/^reg_t rv32_fmul_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmul_h	build/fmul_h.cc	/^reg_t rv32_fmul_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmul_q	build/fmul_q.cc	/^reg_t rv32_fmul_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmul_s	build/fmul_s.cc	/^reg_t rv32_fmul_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_d_x	build/fmv_d_x.cc	/^reg_t rv32_fmv_d_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_h_x	build/fmv_h_x.cc	/^reg_t rv32_fmv_h_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_w_x	build/fmv_w_x.cc	/^reg_t rv32_fmv_w_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_x_d	build/fmv_x_d.cc	/^reg_t rv32_fmv_x_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_x_h	build/fmv_x_h.cc	/^reg_t rv32_fmv_x_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fmv_x_w	build/fmv_x_w.cc	/^reg_t rv32_fmv_x_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmadd_d	build/fnmadd_d.cc	/^reg_t rv32_fnmadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmadd_h	build/fnmadd_h.cc	/^reg_t rv32_fnmadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmadd_q	build/fnmadd_q.cc	/^reg_t rv32_fnmadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmadd_s	build/fnmadd_s.cc	/^reg_t rv32_fnmadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmsub_d	build/fnmsub_d.cc	/^reg_t rv32_fnmsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmsub_h	build/fnmsub_h.cc	/^reg_t rv32_fnmsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmsub_q	build/fnmsub_q.cc	/^reg_t rv32_fnmsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fnmsub_s	build/fnmsub_s.cc	/^reg_t rv32_fnmsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsd	build/fsd.cc	/^reg_t rv32_fsd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnj_d	build/fsgnj_d.cc	/^reg_t rv32_fsgnj_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnj_h	build/fsgnj_h.cc	/^reg_t rv32_fsgnj_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnj_q	build/fsgnj_q.cc	/^reg_t rv32_fsgnj_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnj_s	build/fsgnj_s.cc	/^reg_t rv32_fsgnj_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjn_d	build/fsgnjn_d.cc	/^reg_t rv32_fsgnjn_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjn_h	build/fsgnjn_h.cc	/^reg_t rv32_fsgnjn_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjn_q	build/fsgnjn_q.cc	/^reg_t rv32_fsgnjn_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjn_s	build/fsgnjn_s.cc	/^reg_t rv32_fsgnjn_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjx_d	build/fsgnjx_d.cc	/^reg_t rv32_fsgnjx_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjx_h	build/fsgnjx_h.cc	/^reg_t rv32_fsgnjx_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjx_q	build/fsgnjx_q.cc	/^reg_t rv32_fsgnjx_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsgnjx_s	build/fsgnjx_s.cc	/^reg_t rv32_fsgnjx_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsh	build/fsh.cc	/^reg_t rv32_fsh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsl	build/fsl.cc	/^reg_t rv32_fsl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fslw	build/fslw.cc	/^reg_t rv32_fslw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsq	build/fsq.cc	/^reg_t rv32_fsq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsqrt_d	build/fsqrt_d.cc	/^reg_t rv32_fsqrt_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsqrt_h	build/fsqrt_h.cc	/^reg_t rv32_fsqrt_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsqrt_q	build/fsqrt_q.cc	/^reg_t rv32_fsqrt_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsqrt_s	build/fsqrt_s.cc	/^reg_t rv32_fsqrt_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsr	build/fsr.cc	/^reg_t rv32_fsr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsri	build/fsri.cc	/^reg_t rv32_fsri(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsriw	build/fsriw.cc	/^reg_t rv32_fsriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsrw	build/fsrw.cc	/^reg_t rv32_fsrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsub_d	build/fsub_d.cc	/^reg_t rv32_fsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsub_h	build/fsub_h.cc	/^reg_t rv32_fsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsub_q	build/fsub_q.cc	/^reg_t rv32_fsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsub_s	build/fsub_s.cc	/^reg_t rv32_fsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_fsw	build/fsw.cc	/^reg_t rv32_fsw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_gorc	build/gorc.cc	/^reg_t rv32_gorc(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_gorci	build/gorci.cc	/^reg_t rv32_gorci(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_gorciw	build/gorciw.cc	/^reg_t rv32_gorciw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_gorcw	build/gorcw.cc	/^reg_t rv32_gorcw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_grev	build/grev.cc	/^reg_t rv32_grev(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_grevi	build/grevi.cc	/^reg_t rv32_grevi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_greviw	build/greviw.cc	/^reg_t rv32_greviw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_grevw	build/grevw.cc	/^reg_t rv32_grevw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hfence_gvma	build/hfence_gvma.cc	/^reg_t rv32_hfence_gvma(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hfence_vvma	build/hfence_vvma.cc	/^reg_t rv32_hfence_vvma(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_b	build/hlv_b.cc	/^reg_t rv32_hlv_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_bu	build/hlv_bu.cc	/^reg_t rv32_hlv_bu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_d	build/hlv_d.cc	/^reg_t rv32_hlv_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_h	build/hlv_h.cc	/^reg_t rv32_hlv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_hu	build/hlv_hu.cc	/^reg_t rv32_hlv_hu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_w	build/hlv_w.cc	/^reg_t rv32_hlv_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlv_wu	build/hlv_wu.cc	/^reg_t rv32_hlv_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlvx_hu	build/hlvx_hu.cc	/^reg_t rv32_hlvx_hu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hlvx_wu	build/hlvx_wu.cc	/^reg_t rv32_hlvx_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hsv_b	build/hsv_b.cc	/^reg_t rv32_hsv_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_hsv_h	build/hsv_h.cc	/^reg_t rv32_hsv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_jal	build/jal.cc	/^reg_t rv32_jal(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_jalr	build/jalr.cc	/^reg_t rv32_jalr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lb	build/lb.cc	/^reg_t rv32_lb(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lbu	build/lbu.cc	/^reg_t rv32_lbu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lh	build/lh.cc	/^reg_t rv32_lh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lhu	build/lhu.cc	/^reg_t rv32_lhu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lr_d	build/lr_d.cc	/^reg_t rv32_lr_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lr_w	build/lr_w.cc	/^reg_t rv32_lr_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lui	build/lui.cc	/^reg_t rv32_lui(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lw	build/lw.cc	/^reg_t rv32_lw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_lwu	build/lwu.cc	/^reg_t rv32_lwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_max	build/max.cc	/^reg_t rv32_max(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_maxu	build/maxu.cc	/^reg_t rv32_maxu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_min	build/min.cc	/^reg_t rv32_min(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_minu	build/minu.cc	/^reg_t rv32_minu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_mul	build/mul.cc	/^reg_t rv32_mul(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_mulh	build/mulh.cc	/^reg_t rv32_mulh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_mulhsu	build/mulhsu.cc	/^reg_t rv32_mulhsu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_mulhu	build/mulhu.cc	/^reg_t rv32_mulhu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_mulw	build/mulw.cc	/^reg_t rv32_mulw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_or	build/or.cc	/^reg_t rv32_or(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_ori	build/ori.cc	/^reg_t rv32_ori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_orn	build/orn.cc	/^reg_t rv32_orn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_pack	build/pack.cc	/^reg_t rv32_pack(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_packh	build/packh.cc	/^reg_t rv32_packh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_packu	build/packu.cc	/^reg_t rv32_packu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_packuw	build/packuw.cc	/^reg_t rv32_packuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_packw	build/packw.cc	/^reg_t rv32_packw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_pcnt	build/pcnt.cc	/^reg_t rv32_pcnt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_pcntw	build/pcntw.cc	/^reg_t rv32_pcntw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_rem	build/rem.cc	/^reg_t rv32_rem(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_remu	build/remu.cc	/^reg_t rv32_remu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_remuw	build/remuw.cc	/^reg_t rv32_remuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_remw	build/remw.cc	/^reg_t rv32_remw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_rol	build/rol.cc	/^reg_t rv32_rol(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_rolw	build/rolw.cc	/^reg_t rv32_rolw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_ror	build/ror.cc	/^reg_t rv32_ror(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_rori	build/rori.cc	/^reg_t rv32_rori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_roriw	build/roriw.cc	/^reg_t rv32_roriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_rorw	build/rorw.cc	/^reg_t rv32_rorw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sb	build/sb.cc	/^reg_t rv32_sb(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbclr	build/sbclr.cc	/^reg_t rv32_sbclr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbclri	build/sbclri.cc	/^reg_t rv32_sbclri(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbclriw	build/sbclriw.cc	/^reg_t rv32_sbclriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbclrw	build/sbclrw.cc	/^reg_t rv32_sbclrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbext	build/sbext.cc	/^reg_t rv32_sbext(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbexti	build/sbexti.cc	/^reg_t rv32_sbexti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbextw	build/sbextw.cc	/^reg_t rv32_sbextw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbinv	build/sbinv.cc	/^reg_t rv32_sbinv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbinvi	build/sbinvi.cc	/^reg_t rv32_sbinvi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbinviw	build/sbinviw.cc	/^reg_t rv32_sbinviw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbinvw	build/sbinvw.cc	/^reg_t rv32_sbinvw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbset	build/sbset.cc	/^reg_t rv32_sbset(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbseti	build/sbseti.cc	/^reg_t rv32_sbseti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbsetiw	build/sbsetiw.cc	/^reg_t rv32_sbsetiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sbsetw	build/sbsetw.cc	/^reg_t rv32_sbsetw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sc_d	build/sc_d.cc	/^reg_t rv32_sc_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sc_w	build/sc_w.cc	/^reg_t rv32_sc_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sd	build/sd.cc	/^reg_t rv32_sd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sext_b	build/sext_b.cc	/^reg_t rv32_sext_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sext_h	build/sext_h.cc	/^reg_t rv32_sext_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh	build/sh.cc	/^reg_t rv32_sh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh1add	build/sh1add.cc	/^reg_t rv32_sh1add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh1addu_w	build/sh1addu_w.cc	/^reg_t rv32_sh1addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh2add	build/sh2add.cc	/^reg_t rv32_sh2add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh2addu_w	build/sh2addu_w.cc	/^reg_t rv32_sh2addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh3add	build/sh3add.cc	/^reg_t rv32_sh3add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sh3addu_w	build/sh3addu_w.cc	/^reg_t rv32_sh3addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_shfl	build/shfl.cc	/^reg_t rv32_shfl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_shfli	build/shfli.cc	/^reg_t rv32_shfli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_shflw	build/shflw.cc	/^reg_t rv32_shflw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sll	build/sll.cc	/^reg_t rv32_sll(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slli	build/slli.cc	/^reg_t rv32_slli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slliu_w	build/slliu_w.cc	/^reg_t rv32_slliu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slliw	build/slliw.cc	/^reg_t rv32_slliw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sllw	build/sllw.cc	/^reg_t rv32_sllw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slo	build/slo.cc	/^reg_t rv32_slo(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sloi	build/sloi.cc	/^reg_t rv32_sloi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sloiw	build/sloiw.cc	/^reg_t rv32_sloiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slow	build/slow.cc	/^reg_t rv32_slow(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slt	build/slt.cc	/^reg_t rv32_slt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_slti	build/slti.cc	/^reg_t rv32_slti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sltiu	build/sltiu.cc	/^reg_t rv32_sltiu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sltu	build/sltu.cc	/^reg_t rv32_sltu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sra	build/sra.cc	/^reg_t rv32_sra(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srai	build/srai.cc	/^reg_t rv32_srai(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sraiw	build/sraiw.cc	/^reg_t rv32_sraiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sraw	build/sraw.cc	/^reg_t rv32_sraw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srl	build/srl.cc	/^reg_t rv32_srl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srli	build/srli.cc	/^reg_t rv32_srli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srliw	build/srliw.cc	/^reg_t rv32_srliw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srlw	build/srlw.cc	/^reg_t rv32_srlw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sro	build/sro.cc	/^reg_t rv32_sro(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sroi	build/sroi.cc	/^reg_t rv32_sroi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sroiw	build/sroiw.cc	/^reg_t rv32_sroiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_srow	build/srow.cc	/^reg_t rv32_srow(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sub	build/sub.cc	/^reg_t rv32_sub(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_subw	build/subw.cc	/^reg_t rv32_subw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_subwu	build/subwu.cc	/^reg_t rv32_subwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_sw	build/sw.cc	/^reg_t rv32_sw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_unshfl	build/unshfl.cc	/^reg_t rv32_unshfl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_unshfli	build/unshfli.cc	/^reg_t rv32_unshfli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_unshflw	build/unshflw.cc	/^reg_t rv32_unshflw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vaadd_vv	build/vaadd_vv.cc	/^reg_t rv32_vaadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vaadd_vx	build/vaadd_vx.cc	/^reg_t rv32_vaadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vaaddu_vv	build/vaaddu_vv.cc	/^reg_t rv32_vaaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vaaddu_vx	build/vaaddu_vx.cc	/^reg_t rv32_vaaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadc_vim	build/vadc_vim.cc	/^reg_t rv32_vadc_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadc_vvm	build/vadc_vvm.cc	/^reg_t rv32_vadc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadc_vxm	build/vadc_vxm.cc	/^reg_t rv32_vadc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadd_vi	build/vadd_vi.cc	/^reg_t rv32_vadd_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadd_vv	build/vadd_vv.cc	/^reg_t rv32_vadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vadd_vx	build/vadd_vx.cc	/^reg_t rv32_vadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoaddei16_v	build/vamoaddei16_v.cc	/^reg_t rv32_vamoaddei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoaddei32_v	build/vamoaddei32_v.cc	/^reg_t rv32_vamoaddei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoaddei64_v	build/vamoaddei64_v.cc	/^reg_t rv32_vamoaddei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoaddei8_v	build/vamoaddei8_v.cc	/^reg_t rv32_vamoaddei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoandei16_v	build/vamoandei16_v.cc	/^reg_t rv32_vamoandei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoandei32_v	build/vamoandei32_v.cc	/^reg_t rv32_vamoandei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoandei64_v	build/vamoandei64_v.cc	/^reg_t rv32_vamoandei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoandei8_v	build/vamoandei8_v.cc	/^reg_t rv32_vamoandei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxei16_v	build/vamomaxei16_v.cc	/^reg_t rv32_vamomaxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxei32_v	build/vamomaxei32_v.cc	/^reg_t rv32_vamomaxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxei64_v	build/vamomaxei64_v.cc	/^reg_t rv32_vamomaxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxei8_v	build/vamomaxei8_v.cc	/^reg_t rv32_vamomaxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxuei16_v	build/vamomaxuei16_v.cc	/^reg_t rv32_vamomaxuei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxuei32_v	build/vamomaxuei32_v.cc	/^reg_t rv32_vamomaxuei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxuei64_v	build/vamomaxuei64_v.cc	/^reg_t rv32_vamomaxuei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamomaxuei8_v	build/vamomaxuei8_v.cc	/^reg_t rv32_vamomaxuei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominei16_v	build/vamominei16_v.cc	/^reg_t rv32_vamominei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominei32_v	build/vamominei32_v.cc	/^reg_t rv32_vamominei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominei64_v	build/vamominei64_v.cc	/^reg_t rv32_vamominei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominei8_v	build/vamominei8_v.cc	/^reg_t rv32_vamominei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominuei16_v	build/vamominuei16_v.cc	/^reg_t rv32_vamominuei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominuei32_v	build/vamominuei32_v.cc	/^reg_t rv32_vamominuei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominuei64_v	build/vamominuei64_v.cc	/^reg_t rv32_vamominuei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamominuei8_v	build/vamominuei8_v.cc	/^reg_t rv32_vamominuei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoorei16_v	build/vamoorei16_v.cc	/^reg_t rv32_vamoorei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoorei32_v	build/vamoorei32_v.cc	/^reg_t rv32_vamoorei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoorei64_v	build/vamoorei64_v.cc	/^reg_t rv32_vamoorei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoorei8_v	build/vamoorei8_v.cc	/^reg_t rv32_vamoorei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoswapei16_v	build/vamoswapei16_v.cc	/^reg_t rv32_vamoswapei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoswapei32_v	build/vamoswapei32_v.cc	/^reg_t rv32_vamoswapei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoswapei64_v	build/vamoswapei64_v.cc	/^reg_t rv32_vamoswapei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoswapei8_v	build/vamoswapei8_v.cc	/^reg_t rv32_vamoswapei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoxorei16_v	build/vamoxorei16_v.cc	/^reg_t rv32_vamoxorei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoxorei32_v	build/vamoxorei32_v.cc	/^reg_t rv32_vamoxorei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoxorei64_v	build/vamoxorei64_v.cc	/^reg_t rv32_vamoxorei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vamoxorei8_v	build/vamoxorei8_v.cc	/^reg_t rv32_vamoxorei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vand_vi	build/vand_vi.cc	/^reg_t rv32_vand_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vand_vv	build/vand_vv.cc	/^reg_t rv32_vand_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vand_vx	build/vand_vx.cc	/^reg_t rv32_vand_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vasub_vv	build/vasub_vv.cc	/^reg_t rv32_vasub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vasub_vx	build/vasub_vx.cc	/^reg_t rv32_vasub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vasubu_vv	build/vasubu_vv.cc	/^reg_t rv32_vasubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vasubu_vx	build/vasubu_vx.cc	/^reg_t rv32_vasubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vcompress_vm	build/vcompress_vm.cc	/^reg_t rv32_vcompress_vm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdiv_vv	build/vdiv_vv.cc	/^reg_t rv32_vdiv_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdiv_vx	build/vdiv_vx.cc	/^reg_t rv32_vdiv_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdivu_vv	build/vdivu_vv.cc	/^reg_t rv32_vdivu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdivu_vx	build/vdivu_vx.cc	/^reg_t rv32_vdivu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdot_vv	build/vdot_vv.cc	/^reg_t rv32_vdot_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vdotu_vv	build/vdotu_vv.cc	/^reg_t rv32_vdotu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfadd_vf	build/vfadd_vf.cc	/^reg_t rv32_vfadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfadd_vv	build/vfadd_vv.cc	/^reg_t rv32_vfadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfclass_v	build/vfclass_v.cc	/^reg_t rv32_vfclass_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_f_x_v	build/vfcvt_f_x_v.cc	/^reg_t rv32_vfcvt_f_x_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_f_xu_v	build/vfcvt_f_xu_v.cc	/^reg_t rv32_vfcvt_f_xu_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_rtz_x_f_v	build/vfcvt_rtz_x_f_v.cc	/^reg_t rv32_vfcvt_rtz_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_rtz_xu_f_v	build/vfcvt_rtz_xu_f_v.cc	/^reg_t rv32_vfcvt_rtz_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_x_f_v	build/vfcvt_x_f_v.cc	/^reg_t rv32_vfcvt_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfcvt_xu_f_v	build/vfcvt_xu_f_v.cc	/^reg_t rv32_vfcvt_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfdiv_vf	build/vfdiv_vf.cc	/^reg_t rv32_vfdiv_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfdiv_vv	build/vfdiv_vv.cc	/^reg_t rv32_vfdiv_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfdot_vv	build/vfdot_vv.cc	/^reg_t rv32_vfdot_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfirst_m	build/vfirst_m.cc	/^reg_t rv32_vfirst_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmacc_vf	build/vfmacc_vf.cc	/^reg_t rv32_vfmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmacc_vv	build/vfmacc_vv.cc	/^reg_t rv32_vfmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmadd_vf	build/vfmadd_vf.cc	/^reg_t rv32_vfmadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmadd_vv	build/vfmadd_vv.cc	/^reg_t rv32_vfmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmax_vf	build/vfmax_vf.cc	/^reg_t rv32_vfmax_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmax_vv	build/vfmax_vv.cc	/^reg_t rv32_vfmax_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmerge_vfm	build/vfmerge_vfm.cc	/^reg_t rv32_vfmerge_vfm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmin_vf	build/vfmin_vf.cc	/^reg_t rv32_vfmin_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmin_vv	build/vfmin_vv.cc	/^reg_t rv32_vfmin_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmsac_vf	build/vfmsac_vf.cc	/^reg_t rv32_vfmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmsac_vv	build/vfmsac_vv.cc	/^reg_t rv32_vfmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmsub_vf	build/vfmsub_vf.cc	/^reg_t rv32_vfmsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmsub_vv	build/vfmsub_vv.cc	/^reg_t rv32_vfmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmul_vf	build/vfmul_vf.cc	/^reg_t rv32_vfmul_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmul_vv	build/vfmul_vv.cc	/^reg_t rv32_vfmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmv_f_s	build/vfmv_f_s.cc	/^reg_t rv32_vfmv_f_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmv_s_f	build/vfmv_s_f.cc	/^reg_t rv32_vfmv_s_f(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfmv_v_f	build/vfmv_v_f.cc	/^reg_t rv32_vfmv_v_f(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_f_f_w	build/vfncvt_f_f_w.cc	/^reg_t rv32_vfncvt_f_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_f_x_w	build/vfncvt_f_x_w.cc	/^reg_t rv32_vfncvt_f_x_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_f_xu_w	build/vfncvt_f_xu_w.cc	/^reg_t rv32_vfncvt_f_xu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_rod_f_f_w	build/vfncvt_rod_f_f_w.cc	/^reg_t rv32_vfncvt_rod_f_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_rtz_x_f_w	build/vfncvt_rtz_x_f_w.cc	/^reg_t rv32_vfncvt_rtz_x_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_rtz_xu_f_w	build/vfncvt_rtz_xu_f_w.cc	/^reg_t rv32_vfncvt_rtz_xu_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_x_f_w	build/vfncvt_x_f_w.cc	/^reg_t rv32_vfncvt_x_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfncvt_xu_f_w	build/vfncvt_xu_f_w.cc	/^reg_t rv32_vfncvt_xu_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmacc_vf	build/vfnmacc_vf.cc	/^reg_t rv32_vfnmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmacc_vv	build/vfnmacc_vv.cc	/^reg_t rv32_vfnmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmadd_vf	build/vfnmadd_vf.cc	/^reg_t rv32_vfnmadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmadd_vv	build/vfnmadd_vv.cc	/^reg_t rv32_vfnmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmsac_vf	build/vfnmsac_vf.cc	/^reg_t rv32_vfnmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmsac_vv	build/vfnmsac_vv.cc	/^reg_t rv32_vfnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmsub_vf	build/vfnmsub_vf.cc	/^reg_t rv32_vfnmsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfnmsub_vv	build/vfnmsub_vv.cc	/^reg_t rv32_vfnmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfrdiv_vf	build/vfrdiv_vf.cc	/^reg_t rv32_vfrdiv_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfrece7_v	build/vfrece7_v.cc	/^reg_t rv32_vfrece7_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfredmax_vs	build/vfredmax_vs.cc	/^reg_t rv32_vfredmax_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfredmin_vs	build/vfredmin_vs.cc	/^reg_t rv32_vfredmin_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfredosum_vs	build/vfredosum_vs.cc	/^reg_t rv32_vfredosum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfredsum_vs	build/vfredsum_vs.cc	/^reg_t rv32_vfredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfrsqrte7_v	build/vfrsqrte7_v.cc	/^reg_t rv32_vfrsqrte7_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfrsub_vf	build/vfrsub_vf.cc	/^reg_t rv32_vfrsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnj_vf	build/vfsgnj_vf.cc	/^reg_t rv32_vfsgnj_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnj_vv	build/vfsgnj_vv.cc	/^reg_t rv32_vfsgnj_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnjn_vf	build/vfsgnjn_vf.cc	/^reg_t rv32_vfsgnjn_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnjn_vv	build/vfsgnjn_vv.cc	/^reg_t rv32_vfsgnjn_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnjx_vf	build/vfsgnjx_vf.cc	/^reg_t rv32_vfsgnjx_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsgnjx_vv	build/vfsgnjx_vv.cc	/^reg_t rv32_vfsgnjx_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfslide1down_vf	build/vfslide1down_vf.cc	/^reg_t rv32_vfslide1down_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfslide1up_vf	build/vfslide1up_vf.cc	/^reg_t rv32_vfslide1up_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsqrt_v	build/vfsqrt_v.cc	/^reg_t rv32_vfsqrt_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsub_vf	build/vfsub_vf.cc	/^reg_t rv32_vfsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfsub_vv	build/vfsub_vv.cc	/^reg_t rv32_vfsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwadd_vf	build/vfwadd_vf.cc	/^reg_t rv32_vfwadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwadd_vv	build/vfwadd_vv.cc	/^reg_t rv32_vfwadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwadd_wf	build/vfwadd_wf.cc	/^reg_t rv32_vfwadd_wf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwadd_wv	build/vfwadd_wv.cc	/^reg_t rv32_vfwadd_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_f_f_v	build/vfwcvt_f_f_v.cc	/^reg_t rv32_vfwcvt_f_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_f_x_v	build/vfwcvt_f_x_v.cc	/^reg_t rv32_vfwcvt_f_x_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_f_xu_v	build/vfwcvt_f_xu_v.cc	/^reg_t rv32_vfwcvt_f_xu_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_rtz_x_f_v	build/vfwcvt_rtz_x_f_v.cc	/^reg_t rv32_vfwcvt_rtz_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_rtz_xu_f_v	build/vfwcvt_rtz_xu_f_v.cc	/^reg_t rv32_vfwcvt_rtz_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_x_f_v	build/vfwcvt_x_f_v.cc	/^reg_t rv32_vfwcvt_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwcvt_xu_f_v	build/vfwcvt_xu_f_v.cc	/^reg_t rv32_vfwcvt_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmacc_vf	build/vfwmacc_vf.cc	/^reg_t rv32_vfwmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmacc_vv	build/vfwmacc_vv.cc	/^reg_t rv32_vfwmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmsac_vf	build/vfwmsac_vf.cc	/^reg_t rv32_vfwmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmsac_vv	build/vfwmsac_vv.cc	/^reg_t rv32_vfwmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmul_vf	build/vfwmul_vf.cc	/^reg_t rv32_vfwmul_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwmul_vv	build/vfwmul_vv.cc	/^reg_t rv32_vfwmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwnmacc_vf	build/vfwnmacc_vf.cc	/^reg_t rv32_vfwnmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwnmacc_vv	build/vfwnmacc_vv.cc	/^reg_t rv32_vfwnmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwnmsac_vf	build/vfwnmsac_vf.cc	/^reg_t rv32_vfwnmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwnmsac_vv	build/vfwnmsac_vv.cc	/^reg_t rv32_vfwnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwredosum_vs	build/vfwredosum_vs.cc	/^reg_t rv32_vfwredosum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwredsum_vs	build/vfwredsum_vs.cc	/^reg_t rv32_vfwredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwsub_vf	build/vfwsub_vf.cc	/^reg_t rv32_vfwsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwsub_vv	build/vfwsub_vv.cc	/^reg_t rv32_vfwsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwsub_wf	build/vfwsub_wf.cc	/^reg_t rv32_vfwsub_wf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vfwsub_wv	build/vfwsub_wv.cc	/^reg_t rv32_vfwsub_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vid_v	build/vid_v.cc	/^reg_t rv32_vid_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_viota_m	build/viota_m.cc	/^reg_t rv32_viota_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl1re16_v	build/vl1re16_v.cc	/^reg_t rv32_vl1re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl1re32_v	build/vl1re32_v.cc	/^reg_t rv32_vl1re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl1re64_v	build/vl1re64_v.cc	/^reg_t rv32_vl1re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl1re8_v	build/vl1re8_v.cc	/^reg_t rv32_vl1re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl2re16_v	build/vl2re16_v.cc	/^reg_t rv32_vl2re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl2re32_v	build/vl2re32_v.cc	/^reg_t rv32_vl2re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl2re64_v	build/vl2re64_v.cc	/^reg_t rv32_vl2re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl2re8_v	build/vl2re8_v.cc	/^reg_t rv32_vl2re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl4re16_v	build/vl4re16_v.cc	/^reg_t rv32_vl4re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl4re32_v	build/vl4re32_v.cc	/^reg_t rv32_vl4re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl4re64_v	build/vl4re64_v.cc	/^reg_t rv32_vl4re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl4re8_v	build/vl4re8_v.cc	/^reg_t rv32_vl4re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl8re16_v	build/vl8re16_v.cc	/^reg_t rv32_vl8re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl8re32_v	build/vl8re32_v.cc	/^reg_t rv32_vl8re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl8re64_v	build/vl8re64_v.cc	/^reg_t rv32_vl8re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vl8re8_v	build/vl8re8_v.cc	/^reg_t rv32_vl8re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle16_v	build/vle16_v.cc	/^reg_t rv32_vle16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle16ff_v	build/vle16ff_v.cc	/^reg_t rv32_vle16ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle32_v	build/vle32_v.cc	/^reg_t rv32_vle32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle32ff_v	build/vle32ff_v.cc	/^reg_t rv32_vle32ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle64_v	build/vle64_v.cc	/^reg_t rv32_vle64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle64ff_v	build/vle64ff_v.cc	/^reg_t rv32_vle64ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle8_v	build/vle8_v.cc	/^reg_t rv32_vle8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vle8ff_v	build/vle8ff_v.cc	/^reg_t rv32_vle8ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlse16_v	build/vlse16_v.cc	/^reg_t rv32_vlse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlse32_v	build/vlse32_v.cc	/^reg_t rv32_vlse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlse64_v	build/vlse64_v.cc	/^reg_t rv32_vlse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlse8_v	build/vlse8_v.cc	/^reg_t rv32_vlse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlxei16_v	build/vlxei16_v.cc	/^reg_t rv32_vlxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlxei32_v	build/vlxei32_v.cc	/^reg_t rv32_vlxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlxei64_v	build/vlxei64_v.cc	/^reg_t rv32_vlxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vlxei8_v	build/vlxei8_v.cc	/^reg_t rv32_vlxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmacc_vv	build/vmacc_vv.cc	/^reg_t rv32_vmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmacc_vx	build/vmacc_vx.cc	/^reg_t rv32_vmacc_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmadc_vim	build/vmadc_vim.cc	/^reg_t rv32_vmadc_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmadc_vvm	build/vmadc_vvm.cc	/^reg_t rv32_vmadc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmadc_vxm	build/vmadc_vxm.cc	/^reg_t rv32_vmadc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmadd_vv	build/vmadd_vv.cc	/^reg_t rv32_vmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmadd_vx	build/vmadd_vx.cc	/^reg_t rv32_vmadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmand_mm	build/vmand_mm.cc	/^reg_t rv32_vmand_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmandnot_mm	build/vmandnot_mm.cc	/^reg_t rv32_vmandnot_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmax_vv	build/vmax_vv.cc	/^reg_t rv32_vmax_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmax_vx	build/vmax_vx.cc	/^reg_t rv32_vmax_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmaxu_vv	build/vmaxu_vv.cc	/^reg_t rv32_vmaxu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmaxu_vx	build/vmaxu_vx.cc	/^reg_t rv32_vmaxu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmerge_vim	build/vmerge_vim.cc	/^reg_t rv32_vmerge_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmerge_vvm	build/vmerge_vvm.cc	/^reg_t rv32_vmerge_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmerge_vxm	build/vmerge_vxm.cc	/^reg_t rv32_vmerge_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfeq_vf	build/vmfeq_vf.cc	/^reg_t rv32_vmfeq_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfeq_vv	build/vmfeq_vv.cc	/^reg_t rv32_vmfeq_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfge_vf	build/vmfge_vf.cc	/^reg_t rv32_vmfge_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfgt_vf	build/vmfgt_vf.cc	/^reg_t rv32_vmfgt_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfle_vf	build/vmfle_vf.cc	/^reg_t rv32_vmfle_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfle_vv	build/vmfle_vv.cc	/^reg_t rv32_vmfle_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmflt_vf	build/vmflt_vf.cc	/^reg_t rv32_vmflt_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmflt_vv	build/vmflt_vv.cc	/^reg_t rv32_vmflt_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfne_vf	build/vmfne_vf.cc	/^reg_t rv32_vmfne_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmfne_vv	build/vmfne_vv.cc	/^reg_t rv32_vmfne_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmin_vv	build/vmin_vv.cc	/^reg_t rv32_vmin_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmin_vx	build/vmin_vx.cc	/^reg_t rv32_vmin_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vminu_vv	build/vminu_vv.cc	/^reg_t rv32_vminu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vminu_vx	build/vminu_vx.cc	/^reg_t rv32_vminu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmnand_mm	build/vmnand_mm.cc	/^reg_t rv32_vmnand_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmnor_mm	build/vmnor_mm.cc	/^reg_t rv32_vmnor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmor_mm	build/vmor_mm.cc	/^reg_t rv32_vmor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmornot_mm	build/vmornot_mm.cc	/^reg_t rv32_vmornot_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsbc_vvm	build/vmsbc_vvm.cc	/^reg_t rv32_vmsbc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsbc_vxm	build/vmsbc_vxm.cc	/^reg_t rv32_vmsbc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsbf_m	build/vmsbf_m.cc	/^reg_t rv32_vmsbf_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmseq_vi	build/vmseq_vi.cc	/^reg_t rv32_vmseq_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmseq_vv	build/vmseq_vv.cc	/^reg_t rv32_vmseq_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmseq_vx	build/vmseq_vx.cc	/^reg_t rv32_vmseq_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsgt_vi	build/vmsgt_vi.cc	/^reg_t rv32_vmsgt_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsgt_vx	build/vmsgt_vx.cc	/^reg_t rv32_vmsgt_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsgtu_vi	build/vmsgtu_vi.cc	/^reg_t rv32_vmsgtu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsgtu_vx	build/vmsgtu_vx.cc	/^reg_t rv32_vmsgtu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsif_m	build/vmsif_m.cc	/^reg_t rv32_vmsif_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsle_vi	build/vmsle_vi.cc	/^reg_t rv32_vmsle_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsle_vv	build/vmsle_vv.cc	/^reg_t rv32_vmsle_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsle_vx	build/vmsle_vx.cc	/^reg_t rv32_vmsle_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsleu_vi	build/vmsleu_vi.cc	/^reg_t rv32_vmsleu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsleu_vv	build/vmsleu_vv.cc	/^reg_t rv32_vmsleu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsleu_vx	build/vmsleu_vx.cc	/^reg_t rv32_vmsleu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmslt_vv	build/vmslt_vv.cc	/^reg_t rv32_vmslt_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmslt_vx	build/vmslt_vx.cc	/^reg_t rv32_vmslt_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsltu_vv	build/vmsltu_vv.cc	/^reg_t rv32_vmsltu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsltu_vx	build/vmsltu_vx.cc	/^reg_t rv32_vmsltu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsne_vi	build/vmsne_vi.cc	/^reg_t rv32_vmsne_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsne_vv	build/vmsne_vv.cc	/^reg_t rv32_vmsne_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsne_vx	build/vmsne_vx.cc	/^reg_t rv32_vmsne_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmsof_m	build/vmsof_m.cc	/^reg_t rv32_vmsof_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmul_vv	build/vmul_vv.cc	/^reg_t rv32_vmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmul_vx	build/vmul_vx.cc	/^reg_t rv32_vmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulh_vv	build/vmulh_vv.cc	/^reg_t rv32_vmulh_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulh_vx	build/vmulh_vx.cc	/^reg_t rv32_vmulh_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulhsu_vv	build/vmulhsu_vv.cc	/^reg_t rv32_vmulhsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulhsu_vx	build/vmulhsu_vx.cc	/^reg_t rv32_vmulhsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulhu_vv	build/vmulhu_vv.cc	/^reg_t rv32_vmulhu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmulhu_vx	build/vmulhu_vx.cc	/^reg_t rv32_vmulhu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv1r_v	build/vmv1r_v.cc	/^reg_t rv32_vmv1r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv2r_v	build/vmv2r_v.cc	/^reg_t rv32_vmv2r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv4r_v	build/vmv4r_v.cc	/^reg_t rv32_vmv4r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv8r_v	build/vmv8r_v.cc	/^reg_t rv32_vmv8r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv_s_x	build/vmv_s_x.cc	/^reg_t rv32_vmv_s_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv_v_i	build/vmv_v_i.cc	/^reg_t rv32_vmv_v_i(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv_v_v	build/vmv_v_v.cc	/^reg_t rv32_vmv_v_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv_v_x	build/vmv_v_x.cc	/^reg_t rv32_vmv_v_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmv_x_s	build/vmv_x_s.cc	/^reg_t rv32_vmv_x_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmxnor_mm	build/vmxnor_mm.cc	/^reg_t rv32_vmxnor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vmxor_mm	build/vmxor_mm.cc	/^reg_t rv32_vmxor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclip_wi	build/vnclip_wi.cc	/^reg_t rv32_vnclip_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclip_wv	build/vnclip_wv.cc	/^reg_t rv32_vnclip_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclip_wx	build/vnclip_wx.cc	/^reg_t rv32_vnclip_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclipu_wi	build/vnclipu_wi.cc	/^reg_t rv32_vnclipu_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclipu_wv	build/vnclipu_wv.cc	/^reg_t rv32_vnclipu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnclipu_wx	build/vnclipu_wx.cc	/^reg_t rv32_vnclipu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnmsac_vv	build/vnmsac_vv.cc	/^reg_t rv32_vnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnmsac_vx	build/vnmsac_vx.cc	/^reg_t rv32_vnmsac_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnmsub_vv	build/vnmsub_vv.cc	/^reg_t rv32_vnmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnmsub_vx	build/vnmsub_vx.cc	/^reg_t rv32_vnmsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsra_wi	build/vnsra_wi.cc	/^reg_t rv32_vnsra_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsra_wv	build/vnsra_wv.cc	/^reg_t rv32_vnsra_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsra_wx	build/vnsra_wx.cc	/^reg_t rv32_vnsra_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsrl_wi	build/vnsrl_wi.cc	/^reg_t rv32_vnsrl_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsrl_wv	build/vnsrl_wv.cc	/^reg_t rv32_vnsrl_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vnsrl_wx	build/vnsrl_wx.cc	/^reg_t rv32_vnsrl_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vor_vi	build/vor_vi.cc	/^reg_t rv32_vor_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vor_vv	build/vor_vv.cc	/^reg_t rv32_vor_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vor_vx	build/vor_vx.cc	/^reg_t rv32_vor_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vpopc_m	build/vpopc_m.cc	/^reg_t rv32_vpopc_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredand_vs	build/vredand_vs.cc	/^reg_t rv32_vredand_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredmax_vs	build/vredmax_vs.cc	/^reg_t rv32_vredmax_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredmaxu_vs	build/vredmaxu_vs.cc	/^reg_t rv32_vredmaxu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredmin_vs	build/vredmin_vs.cc	/^reg_t rv32_vredmin_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredminu_vs	build/vredminu_vs.cc	/^reg_t rv32_vredminu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredor_vs	build/vredor_vs.cc	/^reg_t rv32_vredor_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredsum_vs	build/vredsum_vs.cc	/^reg_t rv32_vredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vredxor_vs	build/vredxor_vs.cc	/^reg_t rv32_vredxor_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrem_vv	build/vrem_vv.cc	/^reg_t rv32_vrem_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrem_vx	build/vrem_vx.cc	/^reg_t rv32_vrem_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vremu_vv	build/vremu_vv.cc	/^reg_t rv32_vremu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vremu_vx	build/vremu_vx.cc	/^reg_t rv32_vremu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrgather_vi	build/vrgather_vi.cc	/^reg_t rv32_vrgather_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrgather_vv	build/vrgather_vv.cc	/^reg_t rv32_vrgather_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrgather_vx	build/vrgather_vx.cc	/^reg_t rv32_vrgather_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrgatherei16_vv	build/vrgatherei16_vv.cc	/^reg_t rv32_vrgatherei16_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrsub_vi	build/vrsub_vi.cc	/^reg_t rv32_vrsub_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vrsub_vx	build/vrsub_vx.cc	/^reg_t rv32_vrsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vs1r_v	build/vs1r_v.cc	/^reg_t rv32_vs1r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vs2r_v	build/vs2r_v.cc	/^reg_t rv32_vs2r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vs4r_v	build/vs4r_v.cc	/^reg_t rv32_vs4r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vs8r_v	build/vs8r_v.cc	/^reg_t rv32_vs8r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsadd_vi	build/vsadd_vi.cc	/^reg_t rv32_vsadd_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsadd_vv	build/vsadd_vv.cc	/^reg_t rv32_vsadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsadd_vx	build/vsadd_vx.cc	/^reg_t rv32_vsadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsaddu_vi	build/vsaddu_vi.cc	/^reg_t rv32_vsaddu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsaddu_vv	build/vsaddu_vv.cc	/^reg_t rv32_vsaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsaddu_vx	build/vsaddu_vx.cc	/^reg_t rv32_vsaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsbc_vvm	build/vsbc_vvm.cc	/^reg_t rv32_vsbc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsbc_vxm	build/vsbc_vxm.cc	/^reg_t rv32_vsbc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vse16_v	build/vse16_v.cc	/^reg_t rv32_vse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vse32_v	build/vse32_v.cc	/^reg_t rv32_vse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vse64_v	build/vse64_v.cc	/^reg_t rv32_vse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vse8_v	build/vse8_v.cc	/^reg_t rv32_vse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsetvl	build/vsetvl.cc	/^reg_t rv32_vsetvl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsetvli	build/vsetvli.cc	/^reg_t rv32_vsetvli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsext_vf2	build/vsext_vf2.cc	/^reg_t rv32_vsext_vf2(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsext_vf4	build/vsext_vf4.cc	/^reg_t rv32_vsext_vf4(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsext_vf8	build/vsext_vf8.cc	/^reg_t rv32_vsext_vf8(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslide1down_vx	build/vslide1down_vx.cc	/^reg_t rv32_vslide1down_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslide1up_vx	build/vslide1up_vx.cc	/^reg_t rv32_vslide1up_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslidedown_vi	build/vslidedown_vi.cc	/^reg_t rv32_vslidedown_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslidedown_vx	build/vslidedown_vx.cc	/^reg_t rv32_vslidedown_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslideup_vi	build/vslideup_vi.cc	/^reg_t rv32_vslideup_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vslideup_vx	build/vslideup_vx.cc	/^reg_t rv32_vslideup_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsll_vi	build/vsll_vi.cc	/^reg_t rv32_vsll_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsll_vv	build/vsll_vv.cc	/^reg_t rv32_vsll_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsll_vx	build/vsll_vx.cc	/^reg_t rv32_vsll_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsmul_vv	build/vsmul_vv.cc	/^reg_t rv32_vsmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsmul_vx	build/vsmul_vx.cc	/^reg_t rv32_vsmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsra_vi	build/vsra_vi.cc	/^reg_t rv32_vsra_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsra_vv	build/vsra_vv.cc	/^reg_t rv32_vsra_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsra_vx	build/vsra_vx.cc	/^reg_t rv32_vsra_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsrl_vi	build/vsrl_vi.cc	/^reg_t rv32_vsrl_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsrl_vv	build/vsrl_vv.cc	/^reg_t rv32_vsrl_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsrl_vx	build/vsrl_vx.cc	/^reg_t rv32_vsrl_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsse16_v	build/vsse16_v.cc	/^reg_t rv32_vsse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsse32_v	build/vsse32_v.cc	/^reg_t rv32_vsse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsse64_v	build/vsse64_v.cc	/^reg_t rv32_vsse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsse8_v	build/vsse8_v.cc	/^reg_t rv32_vsse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssra_vi	build/vssra_vi.cc	/^reg_t rv32_vssra_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssra_vv	build/vssra_vv.cc	/^reg_t rv32_vssra_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssra_vx	build/vssra_vx.cc	/^reg_t rv32_vssra_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssrl_vi	build/vssrl_vi.cc	/^reg_t rv32_vssrl_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssrl_vv	build/vssrl_vv.cc	/^reg_t rv32_vssrl_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssrl_vx	build/vssrl_vx.cc	/^reg_t rv32_vssrl_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssub_vv	build/vssub_vv.cc	/^reg_t rv32_vssub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssub_vx	build/vssub_vx.cc	/^reg_t rv32_vssub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssubu_vv	build/vssubu_vv.cc	/^reg_t rv32_vssubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vssubu_vx	build/vssubu_vx.cc	/^reg_t rv32_vssubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsub_vv	build/vsub_vv.cc	/^reg_t rv32_vsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsub_vx	build/vsub_vx.cc	/^reg_t rv32_vsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsuxei16_v	build/vsuxei16_v.cc	/^reg_t rv32_vsuxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsuxei32_v	build/vsuxei32_v.cc	/^reg_t rv32_vsuxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsuxei64_v	build/vsuxei64_v.cc	/^reg_t rv32_vsuxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsuxei8_v	build/vsuxei8_v.cc	/^reg_t rv32_vsuxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsxei16_v	build/vsxei16_v.cc	/^reg_t rv32_vsxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsxei32_v	build/vsxei32_v.cc	/^reg_t rv32_vsxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsxei64_v	build/vsxei64_v.cc	/^reg_t rv32_vsxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vsxei8_v	build/vsxei8_v.cc	/^reg_t rv32_vsxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwadd_vv	build/vwadd_vv.cc	/^reg_t rv32_vwadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwadd_vx	build/vwadd_vx.cc	/^reg_t rv32_vwadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwadd_wv	build/vwadd_wv.cc	/^reg_t rv32_vwadd_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwadd_wx	build/vwadd_wx.cc	/^reg_t rv32_vwadd_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwaddu_vv	build/vwaddu_vv.cc	/^reg_t rv32_vwaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwaddu_vx	build/vwaddu_vx.cc	/^reg_t rv32_vwaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwaddu_wv	build/vwaddu_wv.cc	/^reg_t rv32_vwaddu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwaddu_wx	build/vwaddu_wx.cc	/^reg_t rv32_vwaddu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmacc_vv	build/vwmacc_vv.cc	/^reg_t rv32_vwmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmacc_vx	build/vwmacc_vx.cc	/^reg_t rv32_vwmacc_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmaccsu_vv	build/vwmaccsu_vv.cc	/^reg_t rv32_vwmaccsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmaccsu_vx	build/vwmaccsu_vx.cc	/^reg_t rv32_vwmaccsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmaccu_vv	build/vwmaccu_vv.cc	/^reg_t rv32_vwmaccu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmaccu_vx	build/vwmaccu_vx.cc	/^reg_t rv32_vwmaccu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmaccus_vx	build/vwmaccus_vx.cc	/^reg_t rv32_vwmaccus_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmul_vv	build/vwmul_vv.cc	/^reg_t rv32_vwmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmul_vx	build/vwmul_vx.cc	/^reg_t rv32_vwmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmulsu_vv	build/vwmulsu_vv.cc	/^reg_t rv32_vwmulsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmulsu_vx	build/vwmulsu_vx.cc	/^reg_t rv32_vwmulsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmulu_vv	build/vwmulu_vv.cc	/^reg_t rv32_vwmulu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwmulu_vx	build/vwmulu_vx.cc	/^reg_t rv32_vwmulu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwredsum_vs	build/vwredsum_vs.cc	/^reg_t rv32_vwredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwredsumu_vs	build/vwredsumu_vs.cc	/^reg_t rv32_vwredsumu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsub_vv	build/vwsub_vv.cc	/^reg_t rv32_vwsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsub_vx	build/vwsub_vx.cc	/^reg_t rv32_vwsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsub_wv	build/vwsub_wv.cc	/^reg_t rv32_vwsub_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsub_wx	build/vwsub_wx.cc	/^reg_t rv32_vwsub_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsubu_vv	build/vwsubu_vv.cc	/^reg_t rv32_vwsubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsubu_vx	build/vwsubu_vx.cc	/^reg_t rv32_vwsubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsubu_wv	build/vwsubu_wv.cc	/^reg_t rv32_vwsubu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vwsubu_wx	build/vwsubu_wx.cc	/^reg_t rv32_vwsubu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vxor_vi	build/vxor_vi.cc	/^reg_t rv32_vxor_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vxor_vv	build/vxor_vv.cc	/^reg_t rv32_vxor_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vxor_vx	build/vxor_vx.cc	/^reg_t rv32_vxor_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vzext_vf2	build/vzext_vf2.cc	/^reg_t rv32_vzext_vf2(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vzext_vf4	build/vzext_vf4.cc	/^reg_t rv32_vzext_vf4(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_vzext_vf8	build/vzext_vf8.cc	/^reg_t rv32_vzext_vf8(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_xnor	build/xnor.cc	/^reg_t rv32_xnor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_xor	build/xor.cc	/^reg_t rv32_xor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv32_xori	build/xori.cc	/^reg_t rv32_xori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64	riscv/processor.h	/^  insn_func_t rv64;$/;"	m	struct:insn_desc_t	typeref:typename:insn_func_t
rv64_NAME	riscv/insn_template.cc	/^reg_t rv64_NAME(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_add	build/add.cc	/^reg_t rv64_add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addi	build/addi.cc	/^reg_t rv64_addi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addiw	build/addiw.cc	/^reg_t rv64_addiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addiwu	build/addiwu.cc	/^reg_t rv64_addiwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addu_w	build/addu_w.cc	/^reg_t rv64_addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addw	build/addw.cc	/^reg_t rv64_addw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_addwu	build/addwu.cc	/^reg_t rv64_addwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoadd_d	build/amoadd_d.cc	/^reg_t rv64_amoadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoadd_w	build/amoadd_w.cc	/^reg_t rv64_amoadd_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoand_d	build/amoand_d.cc	/^reg_t rv64_amoand_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoand_w	build/amoand_w.cc	/^reg_t rv64_amoand_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomax_d	build/amomax_d.cc	/^reg_t rv64_amomax_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomax_w	build/amomax_w.cc	/^reg_t rv64_amomax_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomaxu_d	build/amomaxu_d.cc	/^reg_t rv64_amomaxu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomaxu_w	build/amomaxu_w.cc	/^reg_t rv64_amomaxu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomin_d	build/amomin_d.cc	/^reg_t rv64_amomin_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amomin_w	build/amomin_w.cc	/^reg_t rv64_amomin_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amominu_d	build/amominu_d.cc	/^reg_t rv64_amominu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amominu_w	build/amominu_w.cc	/^reg_t rv64_amominu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoor_d	build/amoor_d.cc	/^reg_t rv64_amoor_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoor_w	build/amoor_w.cc	/^reg_t rv64_amoor_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoswap_d	build/amoswap_d.cc	/^reg_t rv64_amoswap_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoswap_w	build/amoswap_w.cc	/^reg_t rv64_amoswap_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoxor_d	build/amoxor_d.cc	/^reg_t rv64_amoxor_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_amoxor_w	build/amoxor_w.cc	/^reg_t rv64_amoxor_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_and	build/and.cc	/^reg_t rv64_and(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_andi	build/andi.cc	/^reg_t rv64_andi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_andn	build/andn.cc	/^reg_t rv64_andn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_auipc	build/auipc.cc	/^reg_t rv64_auipc(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bdep	build/bdep.cc	/^reg_t rv64_bdep(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bdepw	build/bdepw.cc	/^reg_t rv64_bdepw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_beq	build/beq.cc	/^reg_t rv64_beq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bext	build/bext.cc	/^reg_t rv64_bext(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bextw	build/bextw.cc	/^reg_t rv64_bextw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bfp	build/bfp.cc	/^reg_t rv64_bfp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bfpw	build/bfpw.cc	/^reg_t rv64_bfpw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bge	build/bge.cc	/^reg_t rv64_bge(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bgeu	build/bgeu.cc	/^reg_t rv64_bgeu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_blt	build/blt.cc	/^reg_t rv64_blt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bltu	build/bltu.cc	/^reg_t rv64_bltu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bmatflip	build/bmatflip.cc	/^reg_t rv64_bmatflip(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bmator	build/bmator.cc	/^reg_t rv64_bmator(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bmatxor	build/bmatxor.cc	/^reg_t rv64_bmatxor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_bne	build/bne.cc	/^reg_t rv64_bne(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_add	build/c_add.cc	/^reg_t rv64_c_add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_addi	build/c_addi.cc	/^reg_t rv64_c_addi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_addi4spn	build/c_addi4spn.cc	/^reg_t rv64_c_addi4spn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_addw	build/c_addw.cc	/^reg_t rv64_c_addw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_and	build/c_and.cc	/^reg_t rv64_c_and(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_andi	build/c_andi.cc	/^reg_t rv64_c_andi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_beqz	build/c_beqz.cc	/^reg_t rv64_c_beqz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_bnez	build/c_bnez.cc	/^reg_t rv64_c_bnez(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_ebreak	build/c_ebreak.cc	/^reg_t rv64_c_ebreak(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fld	build/c_fld.cc	/^reg_t rv64_c_fld(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fldsp	build/c_fldsp.cc	/^reg_t rv64_c_fldsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_flw	build/c_flw.cc	/^reg_t rv64_c_flw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_flwsp	build/c_flwsp.cc	/^reg_t rv64_c_flwsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fsd	build/c_fsd.cc	/^reg_t rv64_c_fsd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fsdsp	build/c_fsdsp.cc	/^reg_t rv64_c_fsdsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fsw	build/c_fsw.cc	/^reg_t rv64_c_fsw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_fswsp	build/c_fswsp.cc	/^reg_t rv64_c_fswsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_j	build/c_j.cc	/^reg_t rv64_c_j(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_jal	build/c_jal.cc	/^reg_t rv64_c_jal(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_jalr	build/c_jalr.cc	/^reg_t rv64_c_jalr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_jr	build/c_jr.cc	/^reg_t rv64_c_jr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_li	build/c_li.cc	/^reg_t rv64_c_li(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_lui	build/c_lui.cc	/^reg_t rv64_c_lui(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_lw	build/c_lw.cc	/^reg_t rv64_c_lw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_lwsp	build/c_lwsp.cc	/^reg_t rv64_c_lwsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_mv	build/c_mv.cc	/^reg_t rv64_c_mv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_or	build/c_or.cc	/^reg_t rv64_c_or(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_slli	build/c_slli.cc	/^reg_t rv64_c_slli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_srai	build/c_srai.cc	/^reg_t rv64_c_srai(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_srli	build/c_srli.cc	/^reg_t rv64_c_srli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_sub	build/c_sub.cc	/^reg_t rv64_c_sub(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_subw	build/c_subw.cc	/^reg_t rv64_c_subw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_sw	build/c_sw.cc	/^reg_t rv64_c_sw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_swsp	build/c_swsp.cc	/^reg_t rv64_c_swsp(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_c_xor	build/c_xor.cc	/^reg_t rv64_c_xor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmul	build/clmul.cc	/^reg_t rv64_clmul(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmulh	build/clmulh.cc	/^reg_t rv64_clmulh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmulhw	build/clmulhw.cc	/^reg_t rv64_clmulhw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmulr	build/clmulr.cc	/^reg_t rv64_clmulr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmulrw	build/clmulrw.cc	/^reg_t rv64_clmulrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clmulw	build/clmulw.cc	/^reg_t rv64_clmulw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clz	build/clz.cc	/^reg_t rv64_clz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_clzw	build/clzw.cc	/^reg_t rv64_clzw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_cmix	build/cmix.cc	/^reg_t rv64_cmix(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_cmov	build/cmov.cc	/^reg_t rv64_cmov(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32_b	build/crc32_b.cc	/^reg_t rv64_crc32_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32_d	build/crc32_d.cc	/^reg_t rv64_crc32_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32_h	build/crc32_h.cc	/^reg_t rv64_crc32_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32_w	build/crc32_w.cc	/^reg_t rv64_crc32_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32c_b	build/crc32c_b.cc	/^reg_t rv64_crc32c_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32c_d	build/crc32c_d.cc	/^reg_t rv64_crc32c_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32c_h	build/crc32c_h.cc	/^reg_t rv64_crc32c_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_crc32c_w	build/crc32c_w.cc	/^reg_t rv64_crc32c_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_ctz	build/ctz.cc	/^reg_t rv64_ctz(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_ctzw	build/ctzw.cc	/^reg_t rv64_ctzw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_div	build/div.cc	/^reg_t rv64_div(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_divu	build/divu.cc	/^reg_t rv64_divu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_divuw	build/divuw.cc	/^reg_t rv64_divuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_divw	build/divw.cc	/^reg_t rv64_divw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fadd_d	build/fadd_d.cc	/^reg_t rv64_fadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fadd_h	build/fadd_h.cc	/^reg_t rv64_fadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fadd_q	build/fadd_q.cc	/^reg_t rv64_fadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fadd_s	build/fadd_s.cc	/^reg_t rv64_fadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fclass_d	build/fclass_d.cc	/^reg_t rv64_fclass_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fclass_h	build/fclass_h.cc	/^reg_t rv64_fclass_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fclass_q	build/fclass_q.cc	/^reg_t rv64_fclass_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fclass_s	build/fclass_s.cc	/^reg_t rv64_fclass_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_h	build/fcvt_d_h.cc	/^reg_t rv64_fcvt_d_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_l	build/fcvt_d_l.cc	/^reg_t rv64_fcvt_d_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_lu	build/fcvt_d_lu.cc	/^reg_t rv64_fcvt_d_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_q	build/fcvt_d_q.cc	/^reg_t rv64_fcvt_d_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_s	build/fcvt_d_s.cc	/^reg_t rv64_fcvt_d_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_w	build/fcvt_d_w.cc	/^reg_t rv64_fcvt_d_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_d_wu	build/fcvt_d_wu.cc	/^reg_t rv64_fcvt_d_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_d	build/fcvt_h_d.cc	/^reg_t rv64_fcvt_h_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_l	build/fcvt_h_l.cc	/^reg_t rv64_fcvt_h_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_lu	build/fcvt_h_lu.cc	/^reg_t rv64_fcvt_h_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_q	build/fcvt_h_q.cc	/^reg_t rv64_fcvt_h_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_s	build/fcvt_h_s.cc	/^reg_t rv64_fcvt_h_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_w	build/fcvt_h_w.cc	/^reg_t rv64_fcvt_h_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_h_wu	build/fcvt_h_wu.cc	/^reg_t rv64_fcvt_h_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_l_d	build/fcvt_l_d.cc	/^reg_t rv64_fcvt_l_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_l_h	build/fcvt_l_h.cc	/^reg_t rv64_fcvt_l_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_l_q	build/fcvt_l_q.cc	/^reg_t rv64_fcvt_l_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_l_s	build/fcvt_l_s.cc	/^reg_t rv64_fcvt_l_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_lu_d	build/fcvt_lu_d.cc	/^reg_t rv64_fcvt_lu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_lu_h	build/fcvt_lu_h.cc	/^reg_t rv64_fcvt_lu_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_lu_q	build/fcvt_lu_q.cc	/^reg_t rv64_fcvt_lu_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_lu_s	build/fcvt_lu_s.cc	/^reg_t rv64_fcvt_lu_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_d	build/fcvt_q_d.cc	/^reg_t rv64_fcvt_q_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_h	build/fcvt_q_h.cc	/^reg_t rv64_fcvt_q_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_l	build/fcvt_q_l.cc	/^reg_t rv64_fcvt_q_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_lu	build/fcvt_q_lu.cc	/^reg_t rv64_fcvt_q_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_s	build/fcvt_q_s.cc	/^reg_t rv64_fcvt_q_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_w	build/fcvt_q_w.cc	/^reg_t rv64_fcvt_q_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_q_wu	build/fcvt_q_wu.cc	/^reg_t rv64_fcvt_q_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_d	build/fcvt_s_d.cc	/^reg_t rv64_fcvt_s_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_h	build/fcvt_s_h.cc	/^reg_t rv64_fcvt_s_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_l	build/fcvt_s_l.cc	/^reg_t rv64_fcvt_s_l(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_lu	build/fcvt_s_lu.cc	/^reg_t rv64_fcvt_s_lu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_q	build/fcvt_s_q.cc	/^reg_t rv64_fcvt_s_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_w	build/fcvt_s_w.cc	/^reg_t rv64_fcvt_s_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_s_wu	build/fcvt_s_wu.cc	/^reg_t rv64_fcvt_s_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_w_d	build/fcvt_w_d.cc	/^reg_t rv64_fcvt_w_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_w_h	build/fcvt_w_h.cc	/^reg_t rv64_fcvt_w_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_w_q	build/fcvt_w_q.cc	/^reg_t rv64_fcvt_w_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_w_s	build/fcvt_w_s.cc	/^reg_t rv64_fcvt_w_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_wu_d	build/fcvt_wu_d.cc	/^reg_t rv64_fcvt_wu_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_wu_h	build/fcvt_wu_h.cc	/^reg_t rv64_fcvt_wu_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_wu_q	build/fcvt_wu_q.cc	/^reg_t rv64_fcvt_wu_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fcvt_wu_s	build/fcvt_wu_s.cc	/^reg_t rv64_fcvt_wu_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fdiv_d	build/fdiv_d.cc	/^reg_t rv64_fdiv_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fdiv_h	build/fdiv_h.cc	/^reg_t rv64_fdiv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fdiv_q	build/fdiv_q.cc	/^reg_t rv64_fdiv_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fdiv_s	build/fdiv_s.cc	/^reg_t rv64_fdiv_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fence	build/fence.cc	/^reg_t rv64_fence(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fence_i	build/fence_i.cc	/^reg_t rv64_fence_i(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_feq_d	build/feq_d.cc	/^reg_t rv64_feq_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_feq_h	build/feq_h.cc	/^reg_t rv64_feq_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_feq_q	build/feq_q.cc	/^reg_t rv64_feq_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_feq_s	build/feq_s.cc	/^reg_t rv64_feq_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fld	build/fld.cc	/^reg_t rv64_fld(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fle_d	build/fle_d.cc	/^reg_t rv64_fle_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fle_h	build/fle_h.cc	/^reg_t rv64_fle_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fle_q	build/fle_q.cc	/^reg_t rv64_fle_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fle_s	build/fle_s.cc	/^reg_t rv64_fle_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flh	build/flh.cc	/^reg_t rv64_flh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flq	build/flq.cc	/^reg_t rv64_flq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flt_d	build/flt_d.cc	/^reg_t rv64_flt_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flt_h	build/flt_h.cc	/^reg_t rv64_flt_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flt_q	build/flt_q.cc	/^reg_t rv64_flt_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flt_s	build/flt_s.cc	/^reg_t rv64_flt_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_flw	build/flw.cc	/^reg_t rv64_flw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmadd_d	build/fmadd_d.cc	/^reg_t rv64_fmadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmadd_h	build/fmadd_h.cc	/^reg_t rv64_fmadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmadd_q	build/fmadd_q.cc	/^reg_t rv64_fmadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmadd_s	build/fmadd_s.cc	/^reg_t rv64_fmadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmax_d	build/fmax_d.cc	/^reg_t rv64_fmax_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmax_h	build/fmax_h.cc	/^reg_t rv64_fmax_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmax_q	build/fmax_q.cc	/^reg_t rv64_fmax_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmax_s	build/fmax_s.cc	/^reg_t rv64_fmax_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmin_d	build/fmin_d.cc	/^reg_t rv64_fmin_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmin_h	build/fmin_h.cc	/^reg_t rv64_fmin_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmin_q	build/fmin_q.cc	/^reg_t rv64_fmin_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmin_s	build/fmin_s.cc	/^reg_t rv64_fmin_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmsub_d	build/fmsub_d.cc	/^reg_t rv64_fmsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmsub_h	build/fmsub_h.cc	/^reg_t rv64_fmsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmsub_q	build/fmsub_q.cc	/^reg_t rv64_fmsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmsub_s	build/fmsub_s.cc	/^reg_t rv64_fmsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmul_d	build/fmul_d.cc	/^reg_t rv64_fmul_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmul_h	build/fmul_h.cc	/^reg_t rv64_fmul_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmul_q	build/fmul_q.cc	/^reg_t rv64_fmul_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmul_s	build/fmul_s.cc	/^reg_t rv64_fmul_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_d_x	build/fmv_d_x.cc	/^reg_t rv64_fmv_d_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_h_x	build/fmv_h_x.cc	/^reg_t rv64_fmv_h_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_w_x	build/fmv_w_x.cc	/^reg_t rv64_fmv_w_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_x_d	build/fmv_x_d.cc	/^reg_t rv64_fmv_x_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_x_h	build/fmv_x_h.cc	/^reg_t rv64_fmv_x_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fmv_x_w	build/fmv_x_w.cc	/^reg_t rv64_fmv_x_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmadd_d	build/fnmadd_d.cc	/^reg_t rv64_fnmadd_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmadd_h	build/fnmadd_h.cc	/^reg_t rv64_fnmadd_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmadd_q	build/fnmadd_q.cc	/^reg_t rv64_fnmadd_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmadd_s	build/fnmadd_s.cc	/^reg_t rv64_fnmadd_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmsub_d	build/fnmsub_d.cc	/^reg_t rv64_fnmsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmsub_h	build/fnmsub_h.cc	/^reg_t rv64_fnmsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmsub_q	build/fnmsub_q.cc	/^reg_t rv64_fnmsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fnmsub_s	build/fnmsub_s.cc	/^reg_t rv64_fnmsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsd	build/fsd.cc	/^reg_t rv64_fsd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnj_d	build/fsgnj_d.cc	/^reg_t rv64_fsgnj_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnj_h	build/fsgnj_h.cc	/^reg_t rv64_fsgnj_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnj_q	build/fsgnj_q.cc	/^reg_t rv64_fsgnj_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnj_s	build/fsgnj_s.cc	/^reg_t rv64_fsgnj_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjn_d	build/fsgnjn_d.cc	/^reg_t rv64_fsgnjn_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjn_h	build/fsgnjn_h.cc	/^reg_t rv64_fsgnjn_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjn_q	build/fsgnjn_q.cc	/^reg_t rv64_fsgnjn_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjn_s	build/fsgnjn_s.cc	/^reg_t rv64_fsgnjn_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjx_d	build/fsgnjx_d.cc	/^reg_t rv64_fsgnjx_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjx_h	build/fsgnjx_h.cc	/^reg_t rv64_fsgnjx_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjx_q	build/fsgnjx_q.cc	/^reg_t rv64_fsgnjx_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsgnjx_s	build/fsgnjx_s.cc	/^reg_t rv64_fsgnjx_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsh	build/fsh.cc	/^reg_t rv64_fsh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsl	build/fsl.cc	/^reg_t rv64_fsl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fslw	build/fslw.cc	/^reg_t rv64_fslw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsq	build/fsq.cc	/^reg_t rv64_fsq(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsqrt_d	build/fsqrt_d.cc	/^reg_t rv64_fsqrt_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsqrt_h	build/fsqrt_h.cc	/^reg_t rv64_fsqrt_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsqrt_q	build/fsqrt_q.cc	/^reg_t rv64_fsqrt_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsqrt_s	build/fsqrt_s.cc	/^reg_t rv64_fsqrt_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsr	build/fsr.cc	/^reg_t rv64_fsr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsri	build/fsri.cc	/^reg_t rv64_fsri(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsriw	build/fsriw.cc	/^reg_t rv64_fsriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsrw	build/fsrw.cc	/^reg_t rv64_fsrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsub_d	build/fsub_d.cc	/^reg_t rv64_fsub_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsub_h	build/fsub_h.cc	/^reg_t rv64_fsub_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsub_q	build/fsub_q.cc	/^reg_t rv64_fsub_q(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsub_s	build/fsub_s.cc	/^reg_t rv64_fsub_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_fsw	build/fsw.cc	/^reg_t rv64_fsw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_gorc	build/gorc.cc	/^reg_t rv64_gorc(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_gorci	build/gorci.cc	/^reg_t rv64_gorci(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_gorciw	build/gorciw.cc	/^reg_t rv64_gorciw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_gorcw	build/gorcw.cc	/^reg_t rv64_gorcw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_grev	build/grev.cc	/^reg_t rv64_grev(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_grevi	build/grevi.cc	/^reg_t rv64_grevi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_greviw	build/greviw.cc	/^reg_t rv64_greviw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_grevw	build/grevw.cc	/^reg_t rv64_grevw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hfence_gvma	build/hfence_gvma.cc	/^reg_t rv64_hfence_gvma(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hfence_vvma	build/hfence_vvma.cc	/^reg_t rv64_hfence_vvma(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_b	build/hlv_b.cc	/^reg_t rv64_hlv_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_bu	build/hlv_bu.cc	/^reg_t rv64_hlv_bu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_d	build/hlv_d.cc	/^reg_t rv64_hlv_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_h	build/hlv_h.cc	/^reg_t rv64_hlv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_hu	build/hlv_hu.cc	/^reg_t rv64_hlv_hu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_w	build/hlv_w.cc	/^reg_t rv64_hlv_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlv_wu	build/hlv_wu.cc	/^reg_t rv64_hlv_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlvx_hu	build/hlvx_hu.cc	/^reg_t rv64_hlvx_hu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hlvx_wu	build/hlvx_wu.cc	/^reg_t rv64_hlvx_wu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hsv_b	build/hsv_b.cc	/^reg_t rv64_hsv_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_hsv_h	build/hsv_h.cc	/^reg_t rv64_hsv_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_jal	build/jal.cc	/^reg_t rv64_jal(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_jalr	build/jalr.cc	/^reg_t rv64_jalr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lb	build/lb.cc	/^reg_t rv64_lb(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lbu	build/lbu.cc	/^reg_t rv64_lbu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lh	build/lh.cc	/^reg_t rv64_lh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lhu	build/lhu.cc	/^reg_t rv64_lhu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lr_d	build/lr_d.cc	/^reg_t rv64_lr_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lr_w	build/lr_w.cc	/^reg_t rv64_lr_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lui	build/lui.cc	/^reg_t rv64_lui(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lw	build/lw.cc	/^reg_t rv64_lw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_lwu	build/lwu.cc	/^reg_t rv64_lwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_max	build/max.cc	/^reg_t rv64_max(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_maxu	build/maxu.cc	/^reg_t rv64_maxu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_min	build/min.cc	/^reg_t rv64_min(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_minu	build/minu.cc	/^reg_t rv64_minu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_mul	build/mul.cc	/^reg_t rv64_mul(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_mulh	build/mulh.cc	/^reg_t rv64_mulh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_mulhsu	build/mulhsu.cc	/^reg_t rv64_mulhsu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_mulhu	build/mulhu.cc	/^reg_t rv64_mulhu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_mulw	build/mulw.cc	/^reg_t rv64_mulw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_or	build/or.cc	/^reg_t rv64_or(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_ori	build/ori.cc	/^reg_t rv64_ori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_orn	build/orn.cc	/^reg_t rv64_orn(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_pack	build/pack.cc	/^reg_t rv64_pack(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_packh	build/packh.cc	/^reg_t rv64_packh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_packu	build/packu.cc	/^reg_t rv64_packu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_packuw	build/packuw.cc	/^reg_t rv64_packuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_packw	build/packw.cc	/^reg_t rv64_packw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_pcnt	build/pcnt.cc	/^reg_t rv64_pcnt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_pcntw	build/pcntw.cc	/^reg_t rv64_pcntw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_rem	build/rem.cc	/^reg_t rv64_rem(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_remu	build/remu.cc	/^reg_t rv64_remu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_remuw	build/remuw.cc	/^reg_t rv64_remuw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_remw	build/remw.cc	/^reg_t rv64_remw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_rol	build/rol.cc	/^reg_t rv64_rol(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_rolw	build/rolw.cc	/^reg_t rv64_rolw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_ror	build/ror.cc	/^reg_t rv64_ror(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_rori	build/rori.cc	/^reg_t rv64_rori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_roriw	build/roriw.cc	/^reg_t rv64_roriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_rorw	build/rorw.cc	/^reg_t rv64_rorw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sb	build/sb.cc	/^reg_t rv64_sb(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbclr	build/sbclr.cc	/^reg_t rv64_sbclr(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbclri	build/sbclri.cc	/^reg_t rv64_sbclri(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbclriw	build/sbclriw.cc	/^reg_t rv64_sbclriw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbclrw	build/sbclrw.cc	/^reg_t rv64_sbclrw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbext	build/sbext.cc	/^reg_t rv64_sbext(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbexti	build/sbexti.cc	/^reg_t rv64_sbexti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbextw	build/sbextw.cc	/^reg_t rv64_sbextw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbinv	build/sbinv.cc	/^reg_t rv64_sbinv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbinvi	build/sbinvi.cc	/^reg_t rv64_sbinvi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbinviw	build/sbinviw.cc	/^reg_t rv64_sbinviw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbinvw	build/sbinvw.cc	/^reg_t rv64_sbinvw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbset	build/sbset.cc	/^reg_t rv64_sbset(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbseti	build/sbseti.cc	/^reg_t rv64_sbseti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbsetiw	build/sbsetiw.cc	/^reg_t rv64_sbsetiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sbsetw	build/sbsetw.cc	/^reg_t rv64_sbsetw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sc_d	build/sc_d.cc	/^reg_t rv64_sc_d(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sc_w	build/sc_w.cc	/^reg_t rv64_sc_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sd	build/sd.cc	/^reg_t rv64_sd(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sext_b	build/sext_b.cc	/^reg_t rv64_sext_b(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sext_h	build/sext_h.cc	/^reg_t rv64_sext_h(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh	build/sh.cc	/^reg_t rv64_sh(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh1add	build/sh1add.cc	/^reg_t rv64_sh1add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh1addu_w	build/sh1addu_w.cc	/^reg_t rv64_sh1addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh2add	build/sh2add.cc	/^reg_t rv64_sh2add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh2addu_w	build/sh2addu_w.cc	/^reg_t rv64_sh2addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh3add	build/sh3add.cc	/^reg_t rv64_sh3add(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sh3addu_w	build/sh3addu_w.cc	/^reg_t rv64_sh3addu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_shfl	build/shfl.cc	/^reg_t rv64_shfl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_shfli	build/shfli.cc	/^reg_t rv64_shfli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_shflw	build/shflw.cc	/^reg_t rv64_shflw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sll	build/sll.cc	/^reg_t rv64_sll(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slli	build/slli.cc	/^reg_t rv64_slli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slliu_w	build/slliu_w.cc	/^reg_t rv64_slliu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slliw	build/slliw.cc	/^reg_t rv64_slliw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sllw	build/sllw.cc	/^reg_t rv64_sllw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slo	build/slo.cc	/^reg_t rv64_slo(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sloi	build/sloi.cc	/^reg_t rv64_sloi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sloiw	build/sloiw.cc	/^reg_t rv64_sloiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slow	build/slow.cc	/^reg_t rv64_slow(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slt	build/slt.cc	/^reg_t rv64_slt(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_slti	build/slti.cc	/^reg_t rv64_slti(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sltiu	build/sltiu.cc	/^reg_t rv64_sltiu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sltu	build/sltu.cc	/^reg_t rv64_sltu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sra	build/sra.cc	/^reg_t rv64_sra(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srai	build/srai.cc	/^reg_t rv64_srai(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sraiw	build/sraiw.cc	/^reg_t rv64_sraiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sraw	build/sraw.cc	/^reg_t rv64_sraw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srl	build/srl.cc	/^reg_t rv64_srl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srli	build/srli.cc	/^reg_t rv64_srli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srliw	build/srliw.cc	/^reg_t rv64_srliw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srlw	build/srlw.cc	/^reg_t rv64_srlw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sro	build/sro.cc	/^reg_t rv64_sro(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sroi	build/sroi.cc	/^reg_t rv64_sroi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sroiw	build/sroiw.cc	/^reg_t rv64_sroiw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_srow	build/srow.cc	/^reg_t rv64_srow(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sub	build/sub.cc	/^reg_t rv64_sub(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_subw	build/subw.cc	/^reg_t rv64_subw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_subwu	build/subwu.cc	/^reg_t rv64_subwu(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_sw	build/sw.cc	/^reg_t rv64_sw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_unshfl	build/unshfl.cc	/^reg_t rv64_unshfl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_unshfli	build/unshfli.cc	/^reg_t rv64_unshfli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_unshflw	build/unshflw.cc	/^reg_t rv64_unshflw(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vaadd_vv	build/vaadd_vv.cc	/^reg_t rv64_vaadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vaadd_vx	build/vaadd_vx.cc	/^reg_t rv64_vaadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vaaddu_vv	build/vaaddu_vv.cc	/^reg_t rv64_vaaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vaaddu_vx	build/vaaddu_vx.cc	/^reg_t rv64_vaaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadc_vim	build/vadc_vim.cc	/^reg_t rv64_vadc_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadc_vvm	build/vadc_vvm.cc	/^reg_t rv64_vadc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadc_vxm	build/vadc_vxm.cc	/^reg_t rv64_vadc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadd_vi	build/vadd_vi.cc	/^reg_t rv64_vadd_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadd_vv	build/vadd_vv.cc	/^reg_t rv64_vadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vadd_vx	build/vadd_vx.cc	/^reg_t rv64_vadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoaddei16_v	build/vamoaddei16_v.cc	/^reg_t rv64_vamoaddei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoaddei32_v	build/vamoaddei32_v.cc	/^reg_t rv64_vamoaddei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoaddei64_v	build/vamoaddei64_v.cc	/^reg_t rv64_vamoaddei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoaddei8_v	build/vamoaddei8_v.cc	/^reg_t rv64_vamoaddei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoandei16_v	build/vamoandei16_v.cc	/^reg_t rv64_vamoandei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoandei32_v	build/vamoandei32_v.cc	/^reg_t rv64_vamoandei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoandei64_v	build/vamoandei64_v.cc	/^reg_t rv64_vamoandei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoandei8_v	build/vamoandei8_v.cc	/^reg_t rv64_vamoandei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxei16_v	build/vamomaxei16_v.cc	/^reg_t rv64_vamomaxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxei32_v	build/vamomaxei32_v.cc	/^reg_t rv64_vamomaxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxei64_v	build/vamomaxei64_v.cc	/^reg_t rv64_vamomaxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxei8_v	build/vamomaxei8_v.cc	/^reg_t rv64_vamomaxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxuei16_v	build/vamomaxuei16_v.cc	/^reg_t rv64_vamomaxuei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxuei32_v	build/vamomaxuei32_v.cc	/^reg_t rv64_vamomaxuei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxuei64_v	build/vamomaxuei64_v.cc	/^reg_t rv64_vamomaxuei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamomaxuei8_v	build/vamomaxuei8_v.cc	/^reg_t rv64_vamomaxuei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominei16_v	build/vamominei16_v.cc	/^reg_t rv64_vamominei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominei32_v	build/vamominei32_v.cc	/^reg_t rv64_vamominei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominei64_v	build/vamominei64_v.cc	/^reg_t rv64_vamominei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominei8_v	build/vamominei8_v.cc	/^reg_t rv64_vamominei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominuei16_v	build/vamominuei16_v.cc	/^reg_t rv64_vamominuei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominuei32_v	build/vamominuei32_v.cc	/^reg_t rv64_vamominuei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominuei64_v	build/vamominuei64_v.cc	/^reg_t rv64_vamominuei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamominuei8_v	build/vamominuei8_v.cc	/^reg_t rv64_vamominuei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoorei16_v	build/vamoorei16_v.cc	/^reg_t rv64_vamoorei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoorei32_v	build/vamoorei32_v.cc	/^reg_t rv64_vamoorei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoorei64_v	build/vamoorei64_v.cc	/^reg_t rv64_vamoorei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoorei8_v	build/vamoorei8_v.cc	/^reg_t rv64_vamoorei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoswapei16_v	build/vamoswapei16_v.cc	/^reg_t rv64_vamoswapei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoswapei32_v	build/vamoswapei32_v.cc	/^reg_t rv64_vamoswapei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoswapei64_v	build/vamoswapei64_v.cc	/^reg_t rv64_vamoswapei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoswapei8_v	build/vamoswapei8_v.cc	/^reg_t rv64_vamoswapei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoxorei16_v	build/vamoxorei16_v.cc	/^reg_t rv64_vamoxorei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoxorei32_v	build/vamoxorei32_v.cc	/^reg_t rv64_vamoxorei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoxorei64_v	build/vamoxorei64_v.cc	/^reg_t rv64_vamoxorei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vamoxorei8_v	build/vamoxorei8_v.cc	/^reg_t rv64_vamoxorei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vand_vi	build/vand_vi.cc	/^reg_t rv64_vand_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vand_vv	build/vand_vv.cc	/^reg_t rv64_vand_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vand_vx	build/vand_vx.cc	/^reg_t rv64_vand_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vasub_vv	build/vasub_vv.cc	/^reg_t rv64_vasub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vasub_vx	build/vasub_vx.cc	/^reg_t rv64_vasub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vasubu_vv	build/vasubu_vv.cc	/^reg_t rv64_vasubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vasubu_vx	build/vasubu_vx.cc	/^reg_t rv64_vasubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vcompress_vm	build/vcompress_vm.cc	/^reg_t rv64_vcompress_vm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdiv_vv	build/vdiv_vv.cc	/^reg_t rv64_vdiv_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdiv_vx	build/vdiv_vx.cc	/^reg_t rv64_vdiv_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdivu_vv	build/vdivu_vv.cc	/^reg_t rv64_vdivu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdivu_vx	build/vdivu_vx.cc	/^reg_t rv64_vdivu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdot_vv	build/vdot_vv.cc	/^reg_t rv64_vdot_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vdotu_vv	build/vdotu_vv.cc	/^reg_t rv64_vdotu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfadd_vf	build/vfadd_vf.cc	/^reg_t rv64_vfadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfadd_vv	build/vfadd_vv.cc	/^reg_t rv64_vfadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfclass_v	build/vfclass_v.cc	/^reg_t rv64_vfclass_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_f_x_v	build/vfcvt_f_x_v.cc	/^reg_t rv64_vfcvt_f_x_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_f_xu_v	build/vfcvt_f_xu_v.cc	/^reg_t rv64_vfcvt_f_xu_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_rtz_x_f_v	build/vfcvt_rtz_x_f_v.cc	/^reg_t rv64_vfcvt_rtz_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_rtz_xu_f_v	build/vfcvt_rtz_xu_f_v.cc	/^reg_t rv64_vfcvt_rtz_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_x_f_v	build/vfcvt_x_f_v.cc	/^reg_t rv64_vfcvt_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfcvt_xu_f_v	build/vfcvt_xu_f_v.cc	/^reg_t rv64_vfcvt_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfdiv_vf	build/vfdiv_vf.cc	/^reg_t rv64_vfdiv_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfdiv_vv	build/vfdiv_vv.cc	/^reg_t rv64_vfdiv_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfdot_vv	build/vfdot_vv.cc	/^reg_t rv64_vfdot_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfirst_m	build/vfirst_m.cc	/^reg_t rv64_vfirst_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmacc_vf	build/vfmacc_vf.cc	/^reg_t rv64_vfmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmacc_vv	build/vfmacc_vv.cc	/^reg_t rv64_vfmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmadd_vf	build/vfmadd_vf.cc	/^reg_t rv64_vfmadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmadd_vv	build/vfmadd_vv.cc	/^reg_t rv64_vfmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmax_vf	build/vfmax_vf.cc	/^reg_t rv64_vfmax_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmax_vv	build/vfmax_vv.cc	/^reg_t rv64_vfmax_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmerge_vfm	build/vfmerge_vfm.cc	/^reg_t rv64_vfmerge_vfm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmin_vf	build/vfmin_vf.cc	/^reg_t rv64_vfmin_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmin_vv	build/vfmin_vv.cc	/^reg_t rv64_vfmin_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmsac_vf	build/vfmsac_vf.cc	/^reg_t rv64_vfmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmsac_vv	build/vfmsac_vv.cc	/^reg_t rv64_vfmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmsub_vf	build/vfmsub_vf.cc	/^reg_t rv64_vfmsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmsub_vv	build/vfmsub_vv.cc	/^reg_t rv64_vfmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmul_vf	build/vfmul_vf.cc	/^reg_t rv64_vfmul_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmul_vv	build/vfmul_vv.cc	/^reg_t rv64_vfmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmv_f_s	build/vfmv_f_s.cc	/^reg_t rv64_vfmv_f_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmv_s_f	build/vfmv_s_f.cc	/^reg_t rv64_vfmv_s_f(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfmv_v_f	build/vfmv_v_f.cc	/^reg_t rv64_vfmv_v_f(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_f_f_w	build/vfncvt_f_f_w.cc	/^reg_t rv64_vfncvt_f_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_f_x_w	build/vfncvt_f_x_w.cc	/^reg_t rv64_vfncvt_f_x_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_f_xu_w	build/vfncvt_f_xu_w.cc	/^reg_t rv64_vfncvt_f_xu_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_rod_f_f_w	build/vfncvt_rod_f_f_w.cc	/^reg_t rv64_vfncvt_rod_f_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_rtz_x_f_w	build/vfncvt_rtz_x_f_w.cc	/^reg_t rv64_vfncvt_rtz_x_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_rtz_xu_f_w	build/vfncvt_rtz_xu_f_w.cc	/^reg_t rv64_vfncvt_rtz_xu_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_x_f_w	build/vfncvt_x_f_w.cc	/^reg_t rv64_vfncvt_x_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfncvt_xu_f_w	build/vfncvt_xu_f_w.cc	/^reg_t rv64_vfncvt_xu_f_w(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmacc_vf	build/vfnmacc_vf.cc	/^reg_t rv64_vfnmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmacc_vv	build/vfnmacc_vv.cc	/^reg_t rv64_vfnmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmadd_vf	build/vfnmadd_vf.cc	/^reg_t rv64_vfnmadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmadd_vv	build/vfnmadd_vv.cc	/^reg_t rv64_vfnmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmsac_vf	build/vfnmsac_vf.cc	/^reg_t rv64_vfnmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmsac_vv	build/vfnmsac_vv.cc	/^reg_t rv64_vfnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmsub_vf	build/vfnmsub_vf.cc	/^reg_t rv64_vfnmsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfnmsub_vv	build/vfnmsub_vv.cc	/^reg_t rv64_vfnmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfrdiv_vf	build/vfrdiv_vf.cc	/^reg_t rv64_vfrdiv_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfrece7_v	build/vfrece7_v.cc	/^reg_t rv64_vfrece7_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfredmax_vs	build/vfredmax_vs.cc	/^reg_t rv64_vfredmax_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfredmin_vs	build/vfredmin_vs.cc	/^reg_t rv64_vfredmin_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfredosum_vs	build/vfredosum_vs.cc	/^reg_t rv64_vfredosum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfredsum_vs	build/vfredsum_vs.cc	/^reg_t rv64_vfredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfrsqrte7_v	build/vfrsqrte7_v.cc	/^reg_t rv64_vfrsqrte7_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfrsub_vf	build/vfrsub_vf.cc	/^reg_t rv64_vfrsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnj_vf	build/vfsgnj_vf.cc	/^reg_t rv64_vfsgnj_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnj_vv	build/vfsgnj_vv.cc	/^reg_t rv64_vfsgnj_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnjn_vf	build/vfsgnjn_vf.cc	/^reg_t rv64_vfsgnjn_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnjn_vv	build/vfsgnjn_vv.cc	/^reg_t rv64_vfsgnjn_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnjx_vf	build/vfsgnjx_vf.cc	/^reg_t rv64_vfsgnjx_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsgnjx_vv	build/vfsgnjx_vv.cc	/^reg_t rv64_vfsgnjx_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfslide1down_vf	build/vfslide1down_vf.cc	/^reg_t rv64_vfslide1down_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfslide1up_vf	build/vfslide1up_vf.cc	/^reg_t rv64_vfslide1up_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsqrt_v	build/vfsqrt_v.cc	/^reg_t rv64_vfsqrt_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsub_vf	build/vfsub_vf.cc	/^reg_t rv64_vfsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfsub_vv	build/vfsub_vv.cc	/^reg_t rv64_vfsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwadd_vf	build/vfwadd_vf.cc	/^reg_t rv64_vfwadd_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwadd_vv	build/vfwadd_vv.cc	/^reg_t rv64_vfwadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwadd_wf	build/vfwadd_wf.cc	/^reg_t rv64_vfwadd_wf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwadd_wv	build/vfwadd_wv.cc	/^reg_t rv64_vfwadd_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_f_f_v	build/vfwcvt_f_f_v.cc	/^reg_t rv64_vfwcvt_f_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_f_x_v	build/vfwcvt_f_x_v.cc	/^reg_t rv64_vfwcvt_f_x_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_f_xu_v	build/vfwcvt_f_xu_v.cc	/^reg_t rv64_vfwcvt_f_xu_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_rtz_x_f_v	build/vfwcvt_rtz_x_f_v.cc	/^reg_t rv64_vfwcvt_rtz_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_rtz_xu_f_v	build/vfwcvt_rtz_xu_f_v.cc	/^reg_t rv64_vfwcvt_rtz_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_x_f_v	build/vfwcvt_x_f_v.cc	/^reg_t rv64_vfwcvt_x_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwcvt_xu_f_v	build/vfwcvt_xu_f_v.cc	/^reg_t rv64_vfwcvt_xu_f_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmacc_vf	build/vfwmacc_vf.cc	/^reg_t rv64_vfwmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmacc_vv	build/vfwmacc_vv.cc	/^reg_t rv64_vfwmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmsac_vf	build/vfwmsac_vf.cc	/^reg_t rv64_vfwmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmsac_vv	build/vfwmsac_vv.cc	/^reg_t rv64_vfwmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmul_vf	build/vfwmul_vf.cc	/^reg_t rv64_vfwmul_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwmul_vv	build/vfwmul_vv.cc	/^reg_t rv64_vfwmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwnmacc_vf	build/vfwnmacc_vf.cc	/^reg_t rv64_vfwnmacc_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwnmacc_vv	build/vfwnmacc_vv.cc	/^reg_t rv64_vfwnmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwnmsac_vf	build/vfwnmsac_vf.cc	/^reg_t rv64_vfwnmsac_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwnmsac_vv	build/vfwnmsac_vv.cc	/^reg_t rv64_vfwnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwredosum_vs	build/vfwredosum_vs.cc	/^reg_t rv64_vfwredosum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwredsum_vs	build/vfwredsum_vs.cc	/^reg_t rv64_vfwredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwsub_vf	build/vfwsub_vf.cc	/^reg_t rv64_vfwsub_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwsub_vv	build/vfwsub_vv.cc	/^reg_t rv64_vfwsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwsub_wf	build/vfwsub_wf.cc	/^reg_t rv64_vfwsub_wf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vfwsub_wv	build/vfwsub_wv.cc	/^reg_t rv64_vfwsub_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vid_v	build/vid_v.cc	/^reg_t rv64_vid_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_viota_m	build/viota_m.cc	/^reg_t rv64_viota_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl1re16_v	build/vl1re16_v.cc	/^reg_t rv64_vl1re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl1re32_v	build/vl1re32_v.cc	/^reg_t rv64_vl1re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl1re64_v	build/vl1re64_v.cc	/^reg_t rv64_vl1re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl1re8_v	build/vl1re8_v.cc	/^reg_t rv64_vl1re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl2re16_v	build/vl2re16_v.cc	/^reg_t rv64_vl2re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl2re32_v	build/vl2re32_v.cc	/^reg_t rv64_vl2re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl2re64_v	build/vl2re64_v.cc	/^reg_t rv64_vl2re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl2re8_v	build/vl2re8_v.cc	/^reg_t rv64_vl2re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl4re16_v	build/vl4re16_v.cc	/^reg_t rv64_vl4re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl4re32_v	build/vl4re32_v.cc	/^reg_t rv64_vl4re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl4re64_v	build/vl4re64_v.cc	/^reg_t rv64_vl4re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl4re8_v	build/vl4re8_v.cc	/^reg_t rv64_vl4re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl8re16_v	build/vl8re16_v.cc	/^reg_t rv64_vl8re16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl8re32_v	build/vl8re32_v.cc	/^reg_t rv64_vl8re32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl8re64_v	build/vl8re64_v.cc	/^reg_t rv64_vl8re64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vl8re8_v	build/vl8re8_v.cc	/^reg_t rv64_vl8re8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle16_v	build/vle16_v.cc	/^reg_t rv64_vle16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle16ff_v	build/vle16ff_v.cc	/^reg_t rv64_vle16ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle32_v	build/vle32_v.cc	/^reg_t rv64_vle32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle32ff_v	build/vle32ff_v.cc	/^reg_t rv64_vle32ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle64_v	build/vle64_v.cc	/^reg_t rv64_vle64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle64ff_v	build/vle64ff_v.cc	/^reg_t rv64_vle64ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle8_v	build/vle8_v.cc	/^reg_t rv64_vle8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vle8ff_v	build/vle8ff_v.cc	/^reg_t rv64_vle8ff_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlse16_v	build/vlse16_v.cc	/^reg_t rv64_vlse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlse32_v	build/vlse32_v.cc	/^reg_t rv64_vlse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlse64_v	build/vlse64_v.cc	/^reg_t rv64_vlse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlse8_v	build/vlse8_v.cc	/^reg_t rv64_vlse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlxei16_v	build/vlxei16_v.cc	/^reg_t rv64_vlxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlxei32_v	build/vlxei32_v.cc	/^reg_t rv64_vlxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlxei64_v	build/vlxei64_v.cc	/^reg_t rv64_vlxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vlxei8_v	build/vlxei8_v.cc	/^reg_t rv64_vlxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmacc_vv	build/vmacc_vv.cc	/^reg_t rv64_vmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmacc_vx	build/vmacc_vx.cc	/^reg_t rv64_vmacc_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmadc_vim	build/vmadc_vim.cc	/^reg_t rv64_vmadc_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmadc_vvm	build/vmadc_vvm.cc	/^reg_t rv64_vmadc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmadc_vxm	build/vmadc_vxm.cc	/^reg_t rv64_vmadc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmadd_vv	build/vmadd_vv.cc	/^reg_t rv64_vmadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmadd_vx	build/vmadd_vx.cc	/^reg_t rv64_vmadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmand_mm	build/vmand_mm.cc	/^reg_t rv64_vmand_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmandnot_mm	build/vmandnot_mm.cc	/^reg_t rv64_vmandnot_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmax_vv	build/vmax_vv.cc	/^reg_t rv64_vmax_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmax_vx	build/vmax_vx.cc	/^reg_t rv64_vmax_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmaxu_vv	build/vmaxu_vv.cc	/^reg_t rv64_vmaxu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmaxu_vx	build/vmaxu_vx.cc	/^reg_t rv64_vmaxu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmerge_vim	build/vmerge_vim.cc	/^reg_t rv64_vmerge_vim(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmerge_vvm	build/vmerge_vvm.cc	/^reg_t rv64_vmerge_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmerge_vxm	build/vmerge_vxm.cc	/^reg_t rv64_vmerge_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfeq_vf	build/vmfeq_vf.cc	/^reg_t rv64_vmfeq_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfeq_vv	build/vmfeq_vv.cc	/^reg_t rv64_vmfeq_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfge_vf	build/vmfge_vf.cc	/^reg_t rv64_vmfge_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfgt_vf	build/vmfgt_vf.cc	/^reg_t rv64_vmfgt_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfle_vf	build/vmfle_vf.cc	/^reg_t rv64_vmfle_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfle_vv	build/vmfle_vv.cc	/^reg_t rv64_vmfle_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmflt_vf	build/vmflt_vf.cc	/^reg_t rv64_vmflt_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmflt_vv	build/vmflt_vv.cc	/^reg_t rv64_vmflt_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfne_vf	build/vmfne_vf.cc	/^reg_t rv64_vmfne_vf(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmfne_vv	build/vmfne_vv.cc	/^reg_t rv64_vmfne_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmin_vv	build/vmin_vv.cc	/^reg_t rv64_vmin_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmin_vx	build/vmin_vx.cc	/^reg_t rv64_vmin_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vminu_vv	build/vminu_vv.cc	/^reg_t rv64_vminu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vminu_vx	build/vminu_vx.cc	/^reg_t rv64_vminu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmnand_mm	build/vmnand_mm.cc	/^reg_t rv64_vmnand_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmnor_mm	build/vmnor_mm.cc	/^reg_t rv64_vmnor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmor_mm	build/vmor_mm.cc	/^reg_t rv64_vmor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmornot_mm	build/vmornot_mm.cc	/^reg_t rv64_vmornot_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsbc_vvm	build/vmsbc_vvm.cc	/^reg_t rv64_vmsbc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsbc_vxm	build/vmsbc_vxm.cc	/^reg_t rv64_vmsbc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsbf_m	build/vmsbf_m.cc	/^reg_t rv64_vmsbf_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmseq_vi	build/vmseq_vi.cc	/^reg_t rv64_vmseq_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmseq_vv	build/vmseq_vv.cc	/^reg_t rv64_vmseq_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmseq_vx	build/vmseq_vx.cc	/^reg_t rv64_vmseq_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsgt_vi	build/vmsgt_vi.cc	/^reg_t rv64_vmsgt_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsgt_vx	build/vmsgt_vx.cc	/^reg_t rv64_vmsgt_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsgtu_vi	build/vmsgtu_vi.cc	/^reg_t rv64_vmsgtu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsgtu_vx	build/vmsgtu_vx.cc	/^reg_t rv64_vmsgtu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsif_m	build/vmsif_m.cc	/^reg_t rv64_vmsif_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsle_vi	build/vmsle_vi.cc	/^reg_t rv64_vmsle_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsle_vv	build/vmsle_vv.cc	/^reg_t rv64_vmsle_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsle_vx	build/vmsle_vx.cc	/^reg_t rv64_vmsle_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsleu_vi	build/vmsleu_vi.cc	/^reg_t rv64_vmsleu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsleu_vv	build/vmsleu_vv.cc	/^reg_t rv64_vmsleu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsleu_vx	build/vmsleu_vx.cc	/^reg_t rv64_vmsleu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmslt_vv	build/vmslt_vv.cc	/^reg_t rv64_vmslt_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmslt_vx	build/vmslt_vx.cc	/^reg_t rv64_vmslt_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsltu_vv	build/vmsltu_vv.cc	/^reg_t rv64_vmsltu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsltu_vx	build/vmsltu_vx.cc	/^reg_t rv64_vmsltu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsne_vi	build/vmsne_vi.cc	/^reg_t rv64_vmsne_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsne_vv	build/vmsne_vv.cc	/^reg_t rv64_vmsne_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsne_vx	build/vmsne_vx.cc	/^reg_t rv64_vmsne_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmsof_m	build/vmsof_m.cc	/^reg_t rv64_vmsof_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmul_vv	build/vmul_vv.cc	/^reg_t rv64_vmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmul_vx	build/vmul_vx.cc	/^reg_t rv64_vmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulh_vv	build/vmulh_vv.cc	/^reg_t rv64_vmulh_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulh_vx	build/vmulh_vx.cc	/^reg_t rv64_vmulh_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulhsu_vv	build/vmulhsu_vv.cc	/^reg_t rv64_vmulhsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulhsu_vx	build/vmulhsu_vx.cc	/^reg_t rv64_vmulhsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulhu_vv	build/vmulhu_vv.cc	/^reg_t rv64_vmulhu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmulhu_vx	build/vmulhu_vx.cc	/^reg_t rv64_vmulhu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv1r_v	build/vmv1r_v.cc	/^reg_t rv64_vmv1r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv2r_v	build/vmv2r_v.cc	/^reg_t rv64_vmv2r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv4r_v	build/vmv4r_v.cc	/^reg_t rv64_vmv4r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv8r_v	build/vmv8r_v.cc	/^reg_t rv64_vmv8r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv_s_x	build/vmv_s_x.cc	/^reg_t rv64_vmv_s_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv_v_i	build/vmv_v_i.cc	/^reg_t rv64_vmv_v_i(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv_v_v	build/vmv_v_v.cc	/^reg_t rv64_vmv_v_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv_v_x	build/vmv_v_x.cc	/^reg_t rv64_vmv_v_x(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmv_x_s	build/vmv_x_s.cc	/^reg_t rv64_vmv_x_s(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmxnor_mm	build/vmxnor_mm.cc	/^reg_t rv64_vmxnor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vmxor_mm	build/vmxor_mm.cc	/^reg_t rv64_vmxor_mm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclip_wi	build/vnclip_wi.cc	/^reg_t rv64_vnclip_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclip_wv	build/vnclip_wv.cc	/^reg_t rv64_vnclip_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclip_wx	build/vnclip_wx.cc	/^reg_t rv64_vnclip_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclipu_wi	build/vnclipu_wi.cc	/^reg_t rv64_vnclipu_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclipu_wv	build/vnclipu_wv.cc	/^reg_t rv64_vnclipu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnclipu_wx	build/vnclipu_wx.cc	/^reg_t rv64_vnclipu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnmsac_vv	build/vnmsac_vv.cc	/^reg_t rv64_vnmsac_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnmsac_vx	build/vnmsac_vx.cc	/^reg_t rv64_vnmsac_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnmsub_vv	build/vnmsub_vv.cc	/^reg_t rv64_vnmsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnmsub_vx	build/vnmsub_vx.cc	/^reg_t rv64_vnmsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsra_wi	build/vnsra_wi.cc	/^reg_t rv64_vnsra_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsra_wv	build/vnsra_wv.cc	/^reg_t rv64_vnsra_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsra_wx	build/vnsra_wx.cc	/^reg_t rv64_vnsra_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsrl_wi	build/vnsrl_wi.cc	/^reg_t rv64_vnsrl_wi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsrl_wv	build/vnsrl_wv.cc	/^reg_t rv64_vnsrl_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vnsrl_wx	build/vnsrl_wx.cc	/^reg_t rv64_vnsrl_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vor_vi	build/vor_vi.cc	/^reg_t rv64_vor_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vor_vv	build/vor_vv.cc	/^reg_t rv64_vor_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vor_vx	build/vor_vx.cc	/^reg_t rv64_vor_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vpopc_m	build/vpopc_m.cc	/^reg_t rv64_vpopc_m(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredand_vs	build/vredand_vs.cc	/^reg_t rv64_vredand_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredmax_vs	build/vredmax_vs.cc	/^reg_t rv64_vredmax_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredmaxu_vs	build/vredmaxu_vs.cc	/^reg_t rv64_vredmaxu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredmin_vs	build/vredmin_vs.cc	/^reg_t rv64_vredmin_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredminu_vs	build/vredminu_vs.cc	/^reg_t rv64_vredminu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredor_vs	build/vredor_vs.cc	/^reg_t rv64_vredor_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredsum_vs	build/vredsum_vs.cc	/^reg_t rv64_vredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vredxor_vs	build/vredxor_vs.cc	/^reg_t rv64_vredxor_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrem_vv	build/vrem_vv.cc	/^reg_t rv64_vrem_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrem_vx	build/vrem_vx.cc	/^reg_t rv64_vrem_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vremu_vv	build/vremu_vv.cc	/^reg_t rv64_vremu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vremu_vx	build/vremu_vx.cc	/^reg_t rv64_vremu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrgather_vi	build/vrgather_vi.cc	/^reg_t rv64_vrgather_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrgather_vv	build/vrgather_vv.cc	/^reg_t rv64_vrgather_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrgather_vx	build/vrgather_vx.cc	/^reg_t rv64_vrgather_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrgatherei16_vv	build/vrgatherei16_vv.cc	/^reg_t rv64_vrgatherei16_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrsub_vi	build/vrsub_vi.cc	/^reg_t rv64_vrsub_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vrsub_vx	build/vrsub_vx.cc	/^reg_t rv64_vrsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vs1r_v	build/vs1r_v.cc	/^reg_t rv64_vs1r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vs2r_v	build/vs2r_v.cc	/^reg_t rv64_vs2r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vs4r_v	build/vs4r_v.cc	/^reg_t rv64_vs4r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vs8r_v	build/vs8r_v.cc	/^reg_t rv64_vs8r_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsadd_vi	build/vsadd_vi.cc	/^reg_t rv64_vsadd_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsadd_vv	build/vsadd_vv.cc	/^reg_t rv64_vsadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsadd_vx	build/vsadd_vx.cc	/^reg_t rv64_vsadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsaddu_vi	build/vsaddu_vi.cc	/^reg_t rv64_vsaddu_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsaddu_vv	build/vsaddu_vv.cc	/^reg_t rv64_vsaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsaddu_vx	build/vsaddu_vx.cc	/^reg_t rv64_vsaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsbc_vvm	build/vsbc_vvm.cc	/^reg_t rv64_vsbc_vvm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsbc_vxm	build/vsbc_vxm.cc	/^reg_t rv64_vsbc_vxm(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vse16_v	build/vse16_v.cc	/^reg_t rv64_vse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vse32_v	build/vse32_v.cc	/^reg_t rv64_vse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vse64_v	build/vse64_v.cc	/^reg_t rv64_vse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vse8_v	build/vse8_v.cc	/^reg_t rv64_vse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsetvl	build/vsetvl.cc	/^reg_t rv64_vsetvl(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsetvli	build/vsetvli.cc	/^reg_t rv64_vsetvli(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsext_vf2	build/vsext_vf2.cc	/^reg_t rv64_vsext_vf2(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsext_vf4	build/vsext_vf4.cc	/^reg_t rv64_vsext_vf4(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsext_vf8	build/vsext_vf8.cc	/^reg_t rv64_vsext_vf8(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslide1down_vx	build/vslide1down_vx.cc	/^reg_t rv64_vslide1down_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslide1up_vx	build/vslide1up_vx.cc	/^reg_t rv64_vslide1up_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslidedown_vi	build/vslidedown_vi.cc	/^reg_t rv64_vslidedown_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslidedown_vx	build/vslidedown_vx.cc	/^reg_t rv64_vslidedown_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslideup_vi	build/vslideup_vi.cc	/^reg_t rv64_vslideup_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vslideup_vx	build/vslideup_vx.cc	/^reg_t rv64_vslideup_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsll_vi	build/vsll_vi.cc	/^reg_t rv64_vsll_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsll_vv	build/vsll_vv.cc	/^reg_t rv64_vsll_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsll_vx	build/vsll_vx.cc	/^reg_t rv64_vsll_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsmul_vv	build/vsmul_vv.cc	/^reg_t rv64_vsmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsmul_vx	build/vsmul_vx.cc	/^reg_t rv64_vsmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsra_vi	build/vsra_vi.cc	/^reg_t rv64_vsra_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsra_vv	build/vsra_vv.cc	/^reg_t rv64_vsra_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsra_vx	build/vsra_vx.cc	/^reg_t rv64_vsra_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsrl_vi	build/vsrl_vi.cc	/^reg_t rv64_vsrl_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsrl_vv	build/vsrl_vv.cc	/^reg_t rv64_vsrl_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsrl_vx	build/vsrl_vx.cc	/^reg_t rv64_vsrl_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsse16_v	build/vsse16_v.cc	/^reg_t rv64_vsse16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsse32_v	build/vsse32_v.cc	/^reg_t rv64_vsse32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsse64_v	build/vsse64_v.cc	/^reg_t rv64_vsse64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsse8_v	build/vsse8_v.cc	/^reg_t rv64_vsse8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssra_vi	build/vssra_vi.cc	/^reg_t rv64_vssra_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssra_vv	build/vssra_vv.cc	/^reg_t rv64_vssra_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssra_vx	build/vssra_vx.cc	/^reg_t rv64_vssra_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssrl_vi	build/vssrl_vi.cc	/^reg_t rv64_vssrl_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssrl_vv	build/vssrl_vv.cc	/^reg_t rv64_vssrl_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssrl_vx	build/vssrl_vx.cc	/^reg_t rv64_vssrl_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssub_vv	build/vssub_vv.cc	/^reg_t rv64_vssub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssub_vx	build/vssub_vx.cc	/^reg_t rv64_vssub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssubu_vv	build/vssubu_vv.cc	/^reg_t rv64_vssubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vssubu_vx	build/vssubu_vx.cc	/^reg_t rv64_vssubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsub_vv	build/vsub_vv.cc	/^reg_t rv64_vsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsub_vx	build/vsub_vx.cc	/^reg_t rv64_vsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsuxei16_v	build/vsuxei16_v.cc	/^reg_t rv64_vsuxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsuxei32_v	build/vsuxei32_v.cc	/^reg_t rv64_vsuxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsuxei64_v	build/vsuxei64_v.cc	/^reg_t rv64_vsuxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsuxei8_v	build/vsuxei8_v.cc	/^reg_t rv64_vsuxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsxei16_v	build/vsxei16_v.cc	/^reg_t rv64_vsxei16_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsxei32_v	build/vsxei32_v.cc	/^reg_t rv64_vsxei32_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsxei64_v	build/vsxei64_v.cc	/^reg_t rv64_vsxei64_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vsxei8_v	build/vsxei8_v.cc	/^reg_t rv64_vsxei8_v(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwadd_vv	build/vwadd_vv.cc	/^reg_t rv64_vwadd_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwadd_vx	build/vwadd_vx.cc	/^reg_t rv64_vwadd_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwadd_wv	build/vwadd_wv.cc	/^reg_t rv64_vwadd_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwadd_wx	build/vwadd_wx.cc	/^reg_t rv64_vwadd_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwaddu_vv	build/vwaddu_vv.cc	/^reg_t rv64_vwaddu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwaddu_vx	build/vwaddu_vx.cc	/^reg_t rv64_vwaddu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwaddu_wv	build/vwaddu_wv.cc	/^reg_t rv64_vwaddu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwaddu_wx	build/vwaddu_wx.cc	/^reg_t rv64_vwaddu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmacc_vv	build/vwmacc_vv.cc	/^reg_t rv64_vwmacc_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmacc_vx	build/vwmacc_vx.cc	/^reg_t rv64_vwmacc_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmaccsu_vv	build/vwmaccsu_vv.cc	/^reg_t rv64_vwmaccsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmaccsu_vx	build/vwmaccsu_vx.cc	/^reg_t rv64_vwmaccsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmaccu_vv	build/vwmaccu_vv.cc	/^reg_t rv64_vwmaccu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmaccu_vx	build/vwmaccu_vx.cc	/^reg_t rv64_vwmaccu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmaccus_vx	build/vwmaccus_vx.cc	/^reg_t rv64_vwmaccus_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmul_vv	build/vwmul_vv.cc	/^reg_t rv64_vwmul_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmul_vx	build/vwmul_vx.cc	/^reg_t rv64_vwmul_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmulsu_vv	build/vwmulsu_vv.cc	/^reg_t rv64_vwmulsu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmulsu_vx	build/vwmulsu_vx.cc	/^reg_t rv64_vwmulsu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmulu_vv	build/vwmulu_vv.cc	/^reg_t rv64_vwmulu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwmulu_vx	build/vwmulu_vx.cc	/^reg_t rv64_vwmulu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwredsum_vs	build/vwredsum_vs.cc	/^reg_t rv64_vwredsum_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwredsumu_vs	build/vwredsumu_vs.cc	/^reg_t rv64_vwredsumu_vs(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsub_vv	build/vwsub_vv.cc	/^reg_t rv64_vwsub_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsub_vx	build/vwsub_vx.cc	/^reg_t rv64_vwsub_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsub_wv	build/vwsub_wv.cc	/^reg_t rv64_vwsub_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsub_wx	build/vwsub_wx.cc	/^reg_t rv64_vwsub_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsubu_vv	build/vwsubu_vv.cc	/^reg_t rv64_vwsubu_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsubu_vx	build/vwsubu_vx.cc	/^reg_t rv64_vwsubu_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsubu_wv	build/vwsubu_wv.cc	/^reg_t rv64_vwsubu_wv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vwsubu_wx	build/vwsubu_wx.cc	/^reg_t rv64_vwsubu_wx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vxor_vi	build/vxor_vi.cc	/^reg_t rv64_vxor_vi(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vxor_vv	build/vxor_vv.cc	/^reg_t rv64_vxor_vv(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vxor_vx	build/vxor_vx.cc	/^reg_t rv64_vxor_vx(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vzext_vf2	build/vzext_vf2.cc	/^reg_t rv64_vzext_vf2(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vzext_vf4	build/vzext_vf4.cc	/^reg_t rv64_vzext_vf4(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_vzext_vf8	build/vzext_vf8.cc	/^reg_t rv64_vzext_vf8(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_xnor	build/xnor.cc	/^reg_t rv64_xnor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_xor	build/xor.cc	/^reg_t rv64_xor(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rv64_xori	build/xori.cc	/^reg_t rv64_xori(processor_t* p, insn_t insn, reg_t pc)$/;"	f	typeref:typename:reg_t
rvc_addi16sp_imm	disasm/disasm.cc	/^} rvc_addi16sp_imm;$/;"	v	typeref:struct:__anon961b4d0a1b08
rvc_addi16sp_imm	riscv/decode.h	/^  int64_t rvc_addi16sp_imm() { return (x(6, 1) << 4) + (x(2, 1) << 5) + (x(5, 1) << 6) + (x(3, 2/;"	f	class:insn_t	typeref:typename:int64_t
rvc_addi4spn_imm	disasm/disasm.cc	/^} rvc_addi4spn_imm;$/;"	v	typeref:struct:__anon961b4d0a1a08
rvc_addi4spn_imm	riscv/decode.h	/^  int64_t rvc_addi4spn_imm() { return (x(6, 1) << 2) + (x(5, 1) << 3) + (x(11, 2) << 4) + (x(7, /;"	f	class:insn_t	typeref:typename:int64_t
rvc_b_imm	riscv/decode.h	/^  int64_t rvc_b_imm() { return (x(3, 2) << 1) + (x(10, 2) << 3) + (x(2, 1) << 5) + (x(5, 2) << 6/;"	f	class:insn_t	typeref:typename:int64_t
rvc_branch_target	disasm/disasm.cc	/^} rvc_branch_target;$/;"	v	typeref:struct:__anon961b4d0a2508
rvc_fp_rs2	disasm/disasm.cc	/^} rvc_fp_rs2;$/;"	v	typeref:struct:__anon961b4d0a1408
rvc_fp_rs2s	disasm/disasm.cc	/^} rvc_fp_rs2s;$/;"	v	typeref:struct:__anon961b4d0a1708
rvc_imm	disasm/disasm.cc	/^} rvc_imm;$/;"	v	typeref:struct:__anon961b4d0a1908
rvc_imm	riscv/decode.h	/^  int64_t rvc_imm() { return x(2, 5) + (xs(12, 1) << 5); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_j_imm	riscv/decode.h	/^  int64_t rvc_j_imm() { return (x(3, 3) << 1) + (x(11, 1) << 4) + (x(2, 1) << 5) + (x(7, 1) << 6/;"	f	class:insn_t	typeref:typename:int64_t
rvc_jump_target	disasm/disasm.cc	/^} rvc_jump_target;$/;"	v	typeref:struct:__anon961b4d0a2608
rvc_ld_address	disasm/disasm.cc	/^} rvc_ld_address;$/;"	v	typeref:struct:__anon961b4d0a2408
rvc_ld_imm	riscv/decode.h	/^  int64_t rvc_ld_imm() { return (x(10, 3) << 3) + (x(5, 2) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_ldsp_address	disasm/disasm.cc	/^} rvc_ldsp_address;$/;"	v	typeref:struct:__anon961b4d0a2008
rvc_ldsp_imm	riscv/decode.h	/^  int64_t rvc_ldsp_imm() { return (x(5, 2) << 3) + (x(12, 1) << 5) + (x(2, 3) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_lw_address	disasm/disasm.cc	/^} rvc_lw_address;$/;"	v	typeref:struct:__anon961b4d0a2308
rvc_lw_imm	riscv/decode.h	/^  int64_t rvc_lw_imm() { return (x(6, 1) << 2) + (x(10, 3) << 3) + (x(5, 1) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_lwsp_address	disasm/disasm.cc	/^} rvc_lwsp_address;$/;"	v	typeref:struct:__anon961b4d0a1f08
rvc_lwsp_imm	disasm/disasm.cc	/^} rvc_lwsp_imm;$/;"	v	typeref:struct:__anon961b4d0a1c08
rvc_lwsp_imm	riscv/decode.h	/^  int64_t rvc_lwsp_imm() { return (x(4, 3) << 2) + (x(12, 1) << 5) + (x(2, 2) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_rd	riscv/decode.h	/^  uint64_t rvc_rd() { return rd(); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rvc_rs1	disasm/disasm.cc	/^} rvc_rs1;$/;"	v	typeref:struct:__anon961b4d0a1208
rvc_rs1	riscv/decode.h	/^  uint64_t rvc_rs1() { return rd(); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rvc_rs1s	disasm/disasm.cc	/^} rvc_rs1s;$/;"	v	typeref:struct:__anon961b4d0a1508
rvc_rs1s	riscv/decode.h	/^  uint64_t rvc_rs1s() { return 8 + x(7, 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rvc_rs2	disasm/disasm.cc	/^} rvc_rs2;$/;"	v	typeref:struct:__anon961b4d0a1308
rvc_rs2	riscv/decode.h	/^  uint64_t rvc_rs2() { return x(2, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rvc_rs2s	disasm/disasm.cc	/^} rvc_rs2s;$/;"	v	typeref:struct:__anon961b4d0a1608
rvc_rs2s	riscv/decode.h	/^  uint64_t rvc_rs2s() { return 8 + x(2, 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
rvc_sdsp_address	disasm/disasm.cc	/^} rvc_sdsp_address;$/;"	v	typeref:struct:__anon961b4d0a2208
rvc_sdsp_imm	riscv/decode.h	/^  int64_t rvc_sdsp_imm() { return (x(10, 3) << 3) + (x(7, 3) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_shamt	disasm/disasm.cc	/^} rvc_shamt;$/;"	v	typeref:struct:__anon961b4d0a1d08
rvc_simm3	riscv/decode.h	/^  int64_t rvc_simm3() { return x(10, 3); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_sp	disasm/disasm.cc	/^} rvc_sp;$/;"	v	typeref:struct:__anon961b4d0a1808
rvc_swsp_address	disasm/disasm.cc	/^} rvc_swsp_address;$/;"	v	typeref:struct:__anon961b4d0a2108
rvc_swsp_imm	riscv/decode.h	/^  int64_t rvc_swsp_imm() { return (x(9, 4) << 2) + (x(7, 2) << 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
rvc_uimm	disasm/disasm.cc	/^} rvc_uimm;$/;"	v	typeref:struct:__anon961b4d0a1e08
rvc_zimm	riscv/decode.h	/^  int64_t rvc_zimm() { return x(2, 5) + (x(12, 1) << 5); }$/;"	f	class:insn_t	typeref:typename:int64_t
s	riscv/insns/mret.h	/^reg_t s = STATE.mstatus;$/;"	v	typeref:typename:reg_t
s	riscv/insns/sret.h	/^reg_t s = STATE.mstatus;$/;"	v	typeref:typename:reg_t
s	riscv/interactive.cc	/^  float s;$/;"	m	union:fpr	typeref:typename:float	file:
s	riscv/processor.h	/^  bool s;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
s2xlate	riscv/mmu.cc	/^reg_t mmu_t::s2xlate(reg_t gva, reg_t gpa, access_type type, access_type trap_type, bool virt, b/;"	f	class:mmu_t	typeref:typename:reg_t
s_imm	riscv/decode.h	/^  int64_t s_imm() { return x(7, 5) + (xs(25, 7) << 5); }$/;"	f	class:insn_t	typeref:typename:int64_t
sat	riscv/insns/vsadd_vi.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vsadd_vv.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vsadd_vx.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vssub_vv.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vssub_vx.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vssubu_vv.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat	riscv/insns/vssubu_vx.h	/^bool sat = false;$/;"	v	typeref:typename:VI_LOOP_BASE bool
sat_add	riscv/arith.h	/^static inline T sat_add(T x, T y, bool &sat)$/;"	f	typeref:typename:T
sat_addu	riscv/arith.h	/^T sat_addu(T x, T y, bool &sat)$/;"	f	typeref:typename:T
sat_sub	riscv/arith.h	/^static inline T sat_sub(T x, T y, bool &sat)$/;"	f	typeref:typename:T
sat_subu	riscv/arith.h	/^T sat_subu(T x, T y, bool &sat)$/;"	f	typeref:typename:T
satp	riscv/processor.h	/^  reg_t satp;$/;"	m	struct:state_t	typeref:typename:reg_t
save_reg	fesvr/dtm.cc	/^uint64_t dtm_t::save_reg(unsigned regno)$/;"	f	class:dtm_t	typeref:typename:uint64_t
sb	riscv/opcodes.h	/^static uint32_t sb(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
sb_access_bits	riscv/debug_module.cc	/^unsigned debug_module_t::sb_access_bits()$/;"	f	class:debug_module_t	typeref:typename:unsigned
sb_autoincrement	riscv/debug_module.cc	/^void debug_module_t::sb_autoincrement()$/;"	f	class:debug_module_t	typeref:typename:void
sb_imm	riscv/decode.h	/^  int64_t sb_imm() { return (x(8, 4) << 1) + (x(25,6) << 5) + (x(7,1) << 11) + (imm_sign() << 12/;"	f	class:insn_t	typeref:typename:int64_t
sb_read	riscv/debug_module.cc	/^void debug_module_t::sb_read()$/;"	f	class:debug_module_t	typeref:typename:void
sb_write	riscv/debug_module.cc	/^void debug_module_t::sb_write()$/;"	f	class:debug_module_t	typeref:typename:void
sbaccess	riscv/debug_module.h	/^  unsigned sbaccess;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:unsigned
sbaddress	riscv/debug_module.h	/^    uint32_t sbaddress[4];$/;"	m	class:debug_module_t	typeref:typename:uint32_t[4]
sbcs	riscv/debug_module.h	/^    sbcs_t sbcs;$/;"	m	class:debug_module_t	typeref:typename:sbcs_t
sbcs_t	riscv/debug_module.h	/^} sbcs_t;$/;"	t	typeref:struct:__anon5c7e8f3d0608
sbdata	riscv/debug_module.h	/^    uint32_t sbdata[4];$/;"	m	class:debug_module_t	typeref:typename:uint32_t[4]
scause	riscv/processor.h	/^  reg_t scause;$/;"	m	struct:state_t	typeref:typename:reg_t
scounteren	riscv/processor.h	/^  uint32_t scounteren;$/;"	m	struct:state_t	typeref:typename:uint32_t
scripts_dir	Makefile.in	/^scripts_dir  := $(src_dir)\/scripts$/;"	m
scripts_dir	build/Makefile	/^scripts_dir  := $(src_dir)\/scripts$/;"	m
sd	riscv/opcodes.h	/^static uint32_t sd(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
secret	riscv/debug_module.h	/^    const uint32_t secret = 1;$/;"	m	class:debug_module_t	typeref:typename:const uint32_t
select	riscv/processor.h	/^  bool select;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
select_hart	fesvr/dtm.cc	/^void dtm_t::select_hart(int hartsel) {$/;"	f	class:dtm_t	typeref:typename:void
send	fesvr/htif_pthread.cc	/^void htif_pthread_t::send(const void* buf, size_t size)$/;"	f	class:htif_pthread_t	typeref:typename:void
send_word	fesvr/tsi.cc	/^void tsi_t::send_word(uint32_t word)$/;"	f	class:tsi_t	typeref:typename:void
sepc	riscv/processor.h	/^  reg_t sepc;$/;"	m	struct:state_t	typeref:typename:reg_t
serialize	riscv/decode.h	/^#define serialize(/;"	d
serialized	riscv/processor.h	/^  bool serialized; \/\/ whether timer CSRs are in a well-defined state$/;"	m	struct:state_t	typeref:typename:bool
setUp	tests/ebreak.py	/^    def setUp(self):$/;"	m	class:EbreakTest
set_chroot	fesvr/syscall.cc	/^void syscall_t::set_chroot(const char* where)$/;"	f	class:syscall_t	typeref:typename:void
set_csr	fesvr/dtm.cc	/^uint64_t dtm_t::set_csr(unsigned which, uint64_t data)$/;"	f	class:dtm_t	typeref:typename:uint64_t
set_csr	riscv/encoding.h	/^#define set_csr(/;"	d
set_csr	riscv/processor.cc	/^void processor_t::set_csr(int which, reg_t val)$/;"	f	class:processor_t	typeref:typename:void
set_debug	riscv/extension.h	/^  virtual void set_debug(bool value) {};$/;"	f	class:extension_t	typeref:typename:void
set_debug	riscv/processor.cc	/^void processor_t::set_debug(bool value)$/;"	f	class:processor_t	typeref:typename:void
set_debug	riscv/sim.cc	/^void sim_t::set_debug(bool value)$/;"	f	class:sim_t	typeref:typename:void
set_encodings	fesvr/rfb.cc	/^void rfb_t::set_encodings(const std::string& s)$/;"	f	class:rfb_t	typeref:typename:void
set_field	fesvr/dtm.cc	/^#define set_field(/;"	d	file:
set_field	riscv/decode.h	/^#define set_field(/;"	d
set_fp_exceptions	riscv/decode.h	/^#define set_fp_exceptions /;"	d
set_histogram	riscv/processor.cc	/^void processor_t::set_histogram(bool value)$/;"	f	class:processor_t	typeref:typename:void
set_histogram	riscv/sim.cc	/^void sim_t::set_histogram(bool value)$/;"	f	class:sim_t	typeref:typename:void
set_log	riscv/cachesim.h	/^  void set_log(bool _log) { log = _log; }$/;"	f	class:cache_sim_t	typeref:typename:void
set_log	riscv/cachesim.h	/^  void set_log(bool log)$/;"	f	class:cache_memtracer_t	typeref:typename:void
set_miss_handler	riscv/cachesim.h	/^  void set_miss_handler(cache_sim_t* mh) { miss_handler = mh; }$/;"	f	class:cache_sim_t	typeref:typename:void
set_miss_handler	riscv/cachesim.h	/^  void set_miss_handler(cache_sim_t* mh)$/;"	f	class:cache_memtracer_t	typeref:typename:void
set_pc	riscv/decode.h	/^#define set_pc(/;"	d
set_pc_and_serialize	riscv/decode.h	/^#define set_pc_and_serialize(/;"	d
set_pins	riscv/jtag_dtm.cc	/^void jtag_dtm_t::set_pins(bool tck, bool tms, bool tdi) {$/;"	f	class:jtag_dtm_t	typeref:typename:void
set_pixel_format	fesvr/rfb.cc	/^void rfb_t::set_pixel_format(const std::string& s)$/;"	f	class:rfb_t	typeref:typename:void
set_pmp_granularity	riscv/processor.cc	/^void processor_t::set_pmp_granularity(reg_t gran) {$/;"	f	class:processor_t	typeref:typename:void
set_pmp_num	riscv/processor.cc	/^void processor_t::set_pmp_num(reg_t n)$/;"	f	class:processor_t	typeref:typename:void
set_privilege	riscv/processor.cc	/^void processor_t::set_privilege(reg_t prv)$/;"	f	class:processor_t	typeref:typename:void
set_processor	riscv/extension.h	/^  void set_processor(processor_t* _p) { p = _p; }$/;"	f	class:extension_t	typeref:typename:void
set_procs_debug	riscv/sim.cc	/^void sim_t::set_procs_debug(bool value)$/;"	f	class:sim_t	typeref:typename:void
set_remote_bitbang	riscv/sim.h	/^  void set_remote_bitbang(remote_bitbang_t* remote_bitbang) {$/;"	f	class:sim_t	typeref:typename:void
set_rom	riscv/sim.cc	/^void sim_t::set_rom()$/;"	f	class:sim_t	typeref:typename:void
set_virt	riscv/processor.cc	/^void processor_t::set_virt(bool virt)$/;"	f	class:processor_t	typeref:typename:void
set_vl	riscv/processor.cc	/^reg_t processor_t::vectorUnit_t::set_vl(int rd, int rs1, reg_t reqVL, reg_t newType){$/;"	f	class:processor_t::vectorUnit_t	typeref:typename:reg_t
sets	riscv/cachesim.h	/^  size_t sets;$/;"	m	class:cache_sim_t	typeref:typename:size_t
setvl_count	riscv/processor.h	/^      int setvl_count;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:int
sew	riscv/insns/vfirst_m.h	/^reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sew	riscv/insns/vfmv_f_s.h	/^const reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:const reg_t
sew	riscv/insns/vid_v.h	/^reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sew	riscv/insns/viota_m.h	/^reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sew	riscv/insns/vmv_s_x.h	/^  reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sew	riscv/insns/vmv_x_s.h	/^reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sew	riscv/insns/vpopc_m.h	/^reg_t sew = P.VU.vsew;$/;"	v	typeref:typename:reg_t
sext32	riscv/decode.h	/^#define sext32(/;"	d
sext_xlen	riscv/decode.h	/^#define sext_xlen(/;"	d
sh	riscv/insns/vslidedown_vi.h	/^const reg_t sh = insn.v_zimm5();$/;"	v	typeref:typename:const reg_t
sh	riscv/insns/vslidedown_vx.h	/^const uint128_t sh = RS1;$/;"	v	typeref:typename:const uint128_t
sh	riscv/opcodes.h	/^static uint32_t sh(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
sh_addr	fesvr/elf.h	/^  uint32_t sh_addr;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_addr	fesvr/elf.h	/^  uint64_t sh_addr;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_addralign	fesvr/elf.h	/^  uint32_t sh_addralign;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_addralign	fesvr/elf.h	/^  uint64_t sh_addralign;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_entsize	fesvr/elf.h	/^  uint32_t sh_entsize;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_entsize	fesvr/elf.h	/^  uint64_t sh_entsize;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_flags	fesvr/elf.h	/^  uint32_t sh_flags;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_flags	fesvr/elf.h	/^  uint64_t sh_flags;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_info	fesvr/elf.h	/^  uint32_t sh_info;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_info	fesvr/elf.h	/^  uint32_t sh_info;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint32_t
sh_link	fesvr/elf.h	/^  uint32_t sh_link;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_link	fesvr/elf.h	/^  uint32_t sh_link;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint32_t
sh_name	fesvr/elf.h	/^  uint32_t sh_name;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_name	fesvr/elf.h	/^  uint32_t sh_name;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint32_t
sh_offset	fesvr/elf.h	/^  uint32_t sh_offset;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_offset	fesvr/elf.h	/^  uint64_t sh_offset;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_size	fesvr/elf.h	/^  uint32_t sh_size;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_size	fesvr/elf.h	/^  uint64_t sh_size;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint64_t
sh_type	fesvr/elf.h	/^  uint32_t sh_type;$/;"	m	struct:__anon9d3644870208	typeref:typename:uint32_t
sh_type	fesvr/elf.h	/^  uint32_t sh_type;$/;"	m	struct:__anon9d3644870608	typeref:typename:uint32_t
shamt	disasm/disasm.cc	/^} shamt;$/;"	v	typeref:struct:__anon961b4d0a0d08
shamt	riscv/decode.h	/^  int64_t shamt() { return x(20, 6); }$/;"	f	class:insn_t	typeref:typename:int64_t
shamt	riscv/insns/fsl.h	/^int shamt = RS2 & (2*xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/fslw.h	/^int shamt = RS2 & 63;$/;"	v	typeref:typename:int
shamt	riscv/insns/fsr.h	/^int shamt = RS2 & (2*xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/fsri.h	/^int shamt = SHAMT & (2*xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/fsriw.h	/^int shamt = SHAMT & 63;$/;"	v	typeref:typename:int
shamt	riscv/insns/fsrw.h	/^int shamt = RS2 & 63;$/;"	v	typeref:typename:int
shamt	riscv/insns/gorc.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/gorci.h	/^int shamt = SHAMT;$/;"	v	typeref:typename:int
shamt	riscv/insns/gorciw.h	/^int shamt = SHAMT;$/;"	v	typeref:typename:int
shamt	riscv/insns/gorcw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/grev.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/grevi.h	/^int shamt = SHAMT;$/;"	v	typeref:typename:int
shamt	riscv/insns/greviw.h	/^int shamt = SHAMT;$/;"	v	typeref:typename:int
shamt	riscv/insns/grevw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/rol.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/rolw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/ror.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/rori.h	/^int shamt = SHAMT & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/roriw.h	/^int shamt = SHAMT & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/rorw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbclr.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbclri.h	/^int shamt = SHAMT & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbclriw.h	/^int shamt = SHAMT & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbclrw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbext.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbexti.h	/^int shamt = SHAMT & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbextw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbinv.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbinvi.h	/^int shamt = SHAMT & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbinviw.h	/^int shamt = SHAMT & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbinvw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbset.h	/^int shamt = RS2 & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbseti.h	/^int shamt = SHAMT & (xlen-1);$/;"	v	typeref:typename:int
shamt	riscv/insns/sbsetiw.h	/^int shamt = SHAMT & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/sbsetw.h	/^int shamt = RS2 & 31;$/;"	v	typeref:typename:int
shamt	riscv/insns/shfl.h	/^int shamt = RS2 & ((xlen-1) >> 1);$/;"	v	typeref:typename:int
shamt	riscv/insns/shfli.h	/^int shamt = SHAMT & ((xlen-1) >> 1);$/;"	v	typeref:typename:int
shamt	riscv/insns/shflw.h	/^int shamt = RS2 & 15;$/;"	v	typeref:typename:int
shamt	riscv/insns/unshfl.h	/^int shamt = RS2 & ((xlen-1) >> 1);$/;"	v	typeref:typename:int
shamt	riscv/insns/unshfli.h	/^int shamt = SHAMT & ((xlen-1) >> 1);$/;"	v	typeref:typename:int
shamt	riscv/insns/unshflw.h	/^int shamt = RS2 & 15;$/;"	v	typeref:typename:int
sig	softfloat/internals.h	/^struct exp16_sig32 { int_fast16_t exp; uint_fast32_t sig; };$/;"	m	struct:exp16_sig32	typeref:typename:uint_fast32_t
sig	softfloat/internals.h	/^struct exp16_sig64 { int_fast16_t exp; uint_fast64_t sig; };$/;"	m	struct:exp16_sig64	typeref:typename:uint_fast64_t
sig	softfloat/internals.h	/^struct exp32_sig128 { int_fast32_t exp; struct uint128 sig; };$/;"	m	struct:exp32_sig128	typeref:struct:uint128
sig	softfloat/internals.h	/^struct exp32_sig64 { int_fast32_t exp; uint64_t sig; };$/;"	m	struct:exp32_sig64	typeref:typename:uint64_t
sig	softfloat/internals.h	/^struct exp8_sig16 { int_fast8_t exp; uint_fast16_t sig; };$/;"	m	struct:exp8_sig16	typeref:typename:uint_fast16_t
sig_addr	fesvr/htif.h	/^  addr_t sig_addr; \/\/ torture$/;"	m	class:htif_t	typeref:typename:addr_t
sig_file	fesvr/htif.h	/^  std::string sig_file;$/;"	m	class:htif_t	typeref:typename:std::string
sig_len	fesvr/htif.h	/^  addr_t sig_len; \/\/ torture$/;"	m	class:htif_t	typeref:typename:addr_t
signExp	softfloat/softfloat_types.h	/^struct extFloat80M { uint16_t signExp; uint64_t signif; };$/;"	m	struct:extFloat80M	typeref:typename:uint16_t
signExp	softfloat/softfloat_types.h	/^struct extFloat80M { uint64_t signif; uint16_t signExp; };$/;"	m	struct:extFloat80M	typeref:typename:uint16_t
signExtF80UI64	softfloat/internals.h	/^#define signExtF80UI64(/;"	d
signF128UI64	softfloat/internals.h	/^#define signF128UI64(/;"	d
signF128UI96	softfloat/internals.h	/^#define signF128UI96(/;"	d
signF16UI	softfloat/internals.h	/^#define signF16UI(/;"	d
signF32UI	softfloat/internals.h	/^#define signF32UI(/;"	d
signF64UI	softfloat/internals.h	/^#define signF64UI(/;"	d
sign_mask	riscv/insns/vnclipu_wi.h	/^uint64_t sign_mask = UINT64_MAX << P.VU.vsew;$/;"	v	typeref:typename:uint64_t
sign_mask	riscv/insns/vnclipu_wv.h	/^uint64_t sign_mask = UINT64_MAX << P.VU.vsew;$/;"	v	typeref:typename:uint64_t
sign_mask	riscv/insns/vnclipu_wx.h	/^uint64_t sign_mask = UINT64_MAX << P.VU.vsew;$/;"	v	typeref:typename:uint64_t
sign_mask	riscv/insns/vsmul_vv.h	/^int64_t sign_mask = uint64_t(1) << (P.VU.vsew - 1);$/;"	v	typeref:typename:int64_t
sign_mask	riscv/insns/vsmul_vx.h	/^int64_t sign_mask = uint64_t(1) << (P.VU.vsew - 1);$/;"	v	typeref:typename:int64_t
signal_exit	fesvr/htif.cc	/^static volatile bool signal_exit = false;$/;"	v	typeref:typename:volatile bool	file:
signif	softfloat/softfloat_types.h	/^struct extFloat80M { uint16_t signExp; uint64_t signif; };$/;"	m	struct:extFloat80M	typeref:typename:uint64_t
signif	softfloat/softfloat_types.h	/^struct extFloat80M { uint64_t signif; uint16_t signExp; };$/;"	m	struct:extFloat80M	typeref:typename:uint64_t
sim	riscv/debug_module.h	/^    sim_t *sim;$/;"	m	class:debug_module_t	typeref:typename:sim_t *
sim	riscv/mmu.h	/^  simif_t* sim;$/;"	m	class:mmu_t	typeref:typename:simif_t *
sim	riscv/processor.h	/^  simif_t* sim;$/;"	m	class:processor_t	typeref:typename:simif_t *
sim_t	riscv/sim.cc	/^sim_t::sim_t(const char* isa, const char* priv, const char* varch,$/;"	f	class:sim_t
sim_t	riscv/sim.h	/^class sim_t : public htif_t, public simif_t$/;"	c
sim_thread_main	riscv/sim.cc	/^void sim_thread_main(void* arg)$/;"	f	typeref:typename:void
simif_t	riscv/simif.h	/^class simif_t$/;"	c
single_step	riscv/processor.h	/^  } single_step;$/;"	m	struct:state_t	typeref:enum:state_t::__anon2b80edf10503
size	fdt/fdt.h	/^	fdt64_t size;$/;"	m	struct:fdt_reserve_entry	typeref:typename:fdt64_t
size	fesvr/device.h	/^    uint64_t size;$/;"	m	struct:disk_t::request_t	typeref:typename:uint64_t
size	fesvr/device.h	/^  size_t size;$/;"	m	class:disk_t	typeref:typename:size_t
size	fesvr/syscall.cc	/^  uint64_t size;$/;"	m	struct:riscv_stat	typeref:typename:uint64_t	file:
size	riscv/devices.h	/^  size_t size() { return CLINT_SIZE; }$/;"	f	class:clint_t	typeref:typename:size_t
size	riscv/devices.h	/^  size_t size() { return len; }$/;"	f	class:mem_t	typeref:typename:size_t
size	riscv/insns/vmvnfr_v.h	/^const reg_t size = len * P.VU.vlenb;$/;"	v	typeref:typename:const reg_t
size_dt_strings	fdt/fdt.h	/^	fdt32_t size_dt_strings;	 \/* size of the strings block *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
size_dt_struct	fdt/fdt.h	/^	fdt32_t size_dt_struct;		 \/* size of the structure block *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
slow_path	riscv/execute.cc	/^bool processor_t::slow_path()$/;"	f	class:processor_t	typeref:typename:bool
socket_fd	riscv/remote_bitbang.h	/^  int socket_fd;$/;"	m	class:remote_bitbang_t	typeref:typename:int
sockfd	fesvr/rfb.h	/^  int sockfd;$/;"	m	class:rfb_t	typeref:typename:int
softfloat_CFLAGS	build/softfloat.mk	/^softfloat_CFLAGS = -fPIC$/;"	m
softfloat_CFLAGS	softfloat/softfloat.mk.in	/^softfloat_CFLAGS = -fPIC$/;"	m
softfloat_add128	softfloat/primitives.h	/^ softfloat_add128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_add128	softfloat/s_add128.c	/^ softfloat_add128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:struct:uint128
softfloat_add128M	softfloat/primitives.h	/^#define softfloat_add128M(/;"	d
softfloat_add160M	softfloat/primitives.h	/^#define softfloat_add160M(/;"	d
softfloat_add256M	softfloat/s_add256M.c	/^ softfloat_add256M($/;"	f	typeref:typename:void
softfloat_add96M	softfloat/primitives.h	/^#define softfloat_add96M(/;"	d
softfloat_addCarryM	softfloat/s_addCarryM.c	/^ softfloat_addCarryM($/;"	f	typeref:typename:uint_fast8_t
softfloat_addComplCarry96M	softfloat/primitives.h	/^#define softfloat_addComplCarry96M(/;"	d
softfloat_addComplCarryM	softfloat/s_addComplCarryM.c	/^ softfloat_addComplCarryM($/;"	f	typeref:typename:uint_fast8_t
softfloat_addM	softfloat/s_addM.c	/^ softfloat_addM($/;"	f	typeref:typename:void
softfloat_addMagsF128	softfloat/s_addMagsF128.c	/^ softfloat_addMagsF128($/;"	f	typeref:typename:float128_t
softfloat_addMagsF16	softfloat/s_addMagsF16.c	/^float16_t softfloat_addMagsF16( uint_fast16_t uiA, uint_fast16_t uiB )$/;"	f	typeref:typename:float16_t
softfloat_addMagsF32	softfloat/s_addMagsF32.c	/^float32_t softfloat_addMagsF32( uint_fast32_t uiA, uint_fast32_t uiB )$/;"	f	typeref:typename:float32_t
softfloat_addMagsF64	softfloat/s_addMagsF64.c	/^ softfloat_addMagsF64( uint_fast64_t uiA, uint_fast64_t uiB, bool signZ )$/;"	f	typeref:typename:float64_t
softfloat_approxRecip32_1	softfloat/primitives.h	/^#define softfloat_approxRecip32_1(/;"	d
softfloat_approxRecip32_1	softfloat/s_approxRecip32_1.c	/^uint32_t softfloat_approxRecip32_1( uint32_t a )$/;"	f	typeref:typename:uint32_t
softfloat_approxRecipSqrt32_1	softfloat/s_approxRecipSqrt32_1.c	/^uint32_t softfloat_approxRecipSqrt32_1( unsigned int oddExpA, uint32_t a )$/;"	f	typeref:typename:uint32_t
softfloat_approxRecipSqrt_1k0s	softfloat/s_approxRecipSqrt_1Ks.c	/^const uint16_t softfloat_approxRecipSqrt_1k0s[16] = {$/;"	v	typeref:typename:const uint16_t[16]
softfloat_approxRecipSqrt_1k1s	softfloat/s_approxRecipSqrt_1Ks.c	/^const uint16_t softfloat_approxRecipSqrt_1k1s[16] = {$/;"	v	typeref:typename:const uint16_t[16]
softfloat_approxRecip_1k0s	softfloat/s_approxRecip_1Ks.c	/^const uint16_t softfloat_approxRecip_1k0s[16] = {$/;"	v	typeref:typename:const uint16_t[16]
softfloat_approxRecip_1k1s	softfloat/s_approxRecip_1Ks.c	/^const uint16_t softfloat_approxRecip_1k1s[16] = {$/;"	v	typeref:typename:const uint16_t[16]
softfloat_c_srcs	build/softfloat.mk	/^softfloat_c_srcs = \\$/;"	m
softfloat_c_srcs	softfloat/softfloat.mk.in	/^softfloat_c_srcs = \\$/;"	m
softfloat_commonNaNToExtF80M	softfloat/specialize.h	/^ softfloat_commonNaNToExtF80M($/;"	f	typeref:typename:INLINE void
softfloat_commonNaNToExtF80UI	softfloat/specialize.h	/^struct uint128 softfloat_commonNaNToExtF80UI( const struct commonNaN *aPtr )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_commonNaNToF128M	softfloat/specialize.h	/^ softfloat_commonNaNToF128M( const struct commonNaN *aPtr, uint32_t *zWPtr )$/;"	f	typeref:typename:INLINE void
softfloat_commonNaNToF128UI	softfloat/s_commonNaNToF128UI.c	/^#define softfloat_commonNaNToF128UI /;"	d	file:
softfloat_commonNaNToF128UI	softfloat/s_commonNaNToF128UI.c	/^struct uint128 softfloat_commonNaNToF128UI( const struct commonNaN *aPtr )$/;"	f	typeref:struct:uint128
softfloat_commonNaNToF128UI	softfloat/specialize.h	/^struct uint128 softfloat_commonNaNToF128UI( const struct commonNaN *aPtr )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_commonNaNToF16UI	softfloat/specialize.h	/^#define softfloat_commonNaNToF16UI(/;"	d
softfloat_commonNaNToF32UI	softfloat/specialize.h	/^#define softfloat_commonNaNToF32UI(/;"	d
softfloat_commonNaNToF64UI	softfloat/specialize.h	/^#define softfloat_commonNaNToF64UI(/;"	d
softfloat_compare128M	softfloat/s_compare128M.c	/^int_fast8_t softfloat_compare128M( const uint32_t *aPtr, const uint32_t *bPtr )$/;"	f	typeref:typename:int_fast8_t
softfloat_compare96M	softfloat/s_compare96M.c	/^int_fast8_t softfloat_compare96M( const uint32_t *aPtr, const uint32_t *bPtr )$/;"	f	typeref:typename:int_fast8_t
softfloat_countLeadingZeros16	softfloat/primitives.h	/^INLINE uint_fast8_t softfloat_countLeadingZeros16( uint16_t a )$/;"	f	typeref:typename:INLINE uint_fast8_t
softfloat_countLeadingZeros16	softfloat/s_countLeadingZeros16.c	/^#define softfloat_countLeadingZeros16 /;"	d	file:
softfloat_countLeadingZeros16	softfloat/s_countLeadingZeros16.c	/^uint_fast8_t softfloat_countLeadingZeros16( uint16_t a )$/;"	f	typeref:typename:uint_fast8_t
softfloat_countLeadingZeros32	softfloat/primitives.h	/^INLINE uint_fast8_t softfloat_countLeadingZeros32( uint32_t a )$/;"	f	typeref:typename:INLINE uint_fast8_t
softfloat_countLeadingZeros32	softfloat/s_countLeadingZeros32.c	/^#define softfloat_countLeadingZeros32 /;"	d	file:
softfloat_countLeadingZeros32	softfloat/s_countLeadingZeros32.c	/^uint_fast8_t softfloat_countLeadingZeros32( uint32_t a )$/;"	f	typeref:typename:uint_fast8_t
softfloat_countLeadingZeros64	softfloat/s_countLeadingZeros64.c	/^#define softfloat_countLeadingZeros64 /;"	d	file:
softfloat_countLeadingZeros64	softfloat/s_countLeadingZeros64.c	/^uint_fast8_t softfloat_countLeadingZeros64( uint64_t a )$/;"	f	typeref:typename:uint_fast8_t
softfloat_countLeadingZeros8	softfloat/s_countLeadingZeros8.c	/^const uint_least8_t softfloat_countLeadingZeros8[256] = {$/;"	v	typeref:typename:const uint_least8_t[256]
softfloat_detectTininess	softfloat/softfloat_state.c	/^THREAD_LOCAL uint_fast8_t softfloat_detectTininess = init_detectTininess;$/;"	v	typeref:typename:THREAD_LOCAL uint_fast8_t
softfloat_eq128	softfloat/primitives.h	/^bool softfloat_eq128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:INLINE bool
softfloat_eq128	softfloat/s_eq128.c	/^bool softfloat_eq128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:bool
softfloat_exceptionFlags	softfloat/softfloat_state.c	/^THREAD_LOCAL uint_fast8_t softfloat_exceptionFlags = 0;$/;"	v	typeref:typename:THREAD_LOCAL uint_fast8_t
softfloat_extF80MToCommonNaN	softfloat/specialize.h	/^#define softfloat_extF80MToCommonNaN(/;"	d
softfloat_extF80UIToCommonNaN	softfloat/specialize.h	/^#define softfloat_extF80UIToCommonNaN(/;"	d
softfloat_f128MToCommonNaN	softfloat/specialize.h	/^#define softfloat_f128MToCommonNaN(/;"	d
softfloat_f128UIToCommonNaN	softfloat/specialize.h	/^#define softfloat_f128UIToCommonNaN(/;"	d
softfloat_f16UIToCommonNaN	softfloat/specialize.h	/^#define softfloat_f16UIToCommonNaN(/;"	d
softfloat_f32UIToCommonNaN	softfloat/specialize.h	/^#define softfloat_f32UIToCommonNaN(/;"	d
softfloat_f64UIToCommonNaN	softfloat/specialize.h	/^#define softfloat_f64UIToCommonNaN(/;"	d
softfloat_flag_inexact	softfloat/softfloat.h	/^    softfloat_flag_inexact   =  1,$/;"	e	enum:__anon52f85d6e0303
softfloat_flag_infinite	softfloat/softfloat.h	/^    softfloat_flag_infinite  =  8,$/;"	e	enum:__anon52f85d6e0303
softfloat_flag_invalid	softfloat/softfloat.h	/^    softfloat_flag_invalid   = 16$/;"	e	enum:__anon52f85d6e0303
softfloat_flag_overflow	softfloat/softfloat.h	/^    softfloat_flag_overflow  =  4,$/;"	e	enum:__anon52f85d6e0303
softfloat_flag_underflow	softfloat/softfloat.h	/^    softfloat_flag_underflow =  2,$/;"	e	enum:__anon52f85d6e0303
softfloat_h	softfloat/softfloat.h	/^#define softfloat_h /;"	d
softfloat_hdrs	build/softfloat.mk	/^softfloat_hdrs = \\$/;"	m
softfloat_hdrs	softfloat/softfloat.mk.in	/^softfloat_hdrs = \\$/;"	m
softfloat_install_prog_srcs	build/softfloat.mk	/^softfloat_install_prog_srcs =$/;"	m
softfloat_install_prog_srcs	softfloat/softfloat.mk.in	/^softfloat_install_prog_srcs =$/;"	m
softfloat_install_shared_lib	build/softfloat.mk	/^softfloat_install_shared_lib = yes$/;"	m
softfloat_install_shared_lib	softfloat/softfloat.mk.in	/^softfloat_install_shared_lib = yes$/;"	m
softfloat_isSigNaNExtF80UI	softfloat/specialize.h	/^#define softfloat_isSigNaNExtF80UI(/;"	d
softfloat_isSigNaNF128UI	softfloat/specialize.h	/^#define softfloat_isSigNaNF128UI(/;"	d
softfloat_isSigNaNF16UI	softfloat/specialize.h	/^#define softfloat_isSigNaNF16UI(/;"	d
softfloat_isSigNaNF32UI	softfloat/specialize.h	/^#define softfloat_isSigNaNF32UI(/;"	d
softfloat_isSigNaNF64UI	softfloat/specialize.h	/^#define softfloat_isSigNaNF64UI(/;"	d
softfloat_le128	softfloat/primitives.h	/^bool softfloat_le128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:INLINE bool
softfloat_le128	softfloat/s_le128.c	/^bool softfloat_le128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:bool
softfloat_lt128	softfloat/primitives.h	/^bool softfloat_lt128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:INLINE bool
softfloat_lt128	softfloat/s_lt128.c	/^bool softfloat_lt128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:bool
softfloat_mul128By32	softfloat/primitives.h	/^struct uint128 softfloat_mul128By32( uint64_t a64, uint64_t a0, uint32_t b )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_mul128By32	softfloat/s_mul128By32.c	/^struct uint128 softfloat_mul128By32( uint64_t a64, uint64_t a0, uint32_t b )$/;"	f	typeref:struct:uint128
softfloat_mul128MTo256M	softfloat/s_mul128MTo256M.c	/^ softfloat_mul128MTo256M($/;"	f	typeref:typename:void
softfloat_mul128To256M	softfloat/s_mul128To256M.c	/^ softfloat_mul128To256M($/;"	f	typeref:typename:void
softfloat_mul128To256M	softfloat/s_mul128To256M.c	/^#define softfloat_mul128To256M /;"	d	file:
softfloat_mul64ByShifted32To128	softfloat/primitives.h	/^INLINE struct uint128 softfloat_mul64ByShifted32To128( uint64_t a, uint32_t b )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_mul64ByShifted32To128	softfloat/s_mul64ByShifted32To128.c	/^struct uint128 softfloat_mul64ByShifted32To128( uint64_t a, uint32_t b )$/;"	f	typeref:struct:uint128
softfloat_mul64To128	softfloat/s_mul64To128.c	/^struct uint128 softfloat_mul64To128( uint64_t a, uint64_t b )$/;"	f	typeref:struct:uint128
softfloat_mul64To128M	softfloat/s_mul64To128M.c	/^void softfloat_mul64To128M( uint64_t a, uint64_t b, uint32_t *zPtr )$/;"	f	typeref:typename:void
softfloat_mulAddF128	softfloat/s_mulAddF128.c	/^ softfloat_mulAddF128($/;"	f	typeref:typename:float128_t
softfloat_mulAddF16	softfloat/s_mulAddF16.c	/^ softfloat_mulAddF16($/;"	f	typeref:typename:float16_t
softfloat_mulAddF32	softfloat/s_mulAddF32.c	/^ softfloat_mulAddF32($/;"	f	typeref:typename:float32_t
softfloat_mulAddF64	softfloat/s_mulAddF64.c	/^ softfloat_mulAddF64($/;"	f	typeref:typename:float64_t
softfloat_mulAdd_subC	softfloat/internals.h	/^    softfloat_mulAdd_subC    = 1,$/;"	e	enum:__anon3faf43cc0103
softfloat_mulAdd_subProd	softfloat/internals.h	/^    softfloat_mulAdd_subProd = 2$/;"	e	enum:__anon3faf43cc0103
softfloat_negX128M	softfloat/primitives.h	/^#define softfloat_negX128M(/;"	d
softfloat_negX160M	softfloat/primitives.h	/^#define softfloat_negX160M(/;"	d
softfloat_negX256M	softfloat/primitives.h	/^#define softfloat_negX256M(/;"	d
softfloat_negX96M	softfloat/primitives.h	/^#define softfloat_negX96M(/;"	d
softfloat_negXM	softfloat/s_negXM.c	/^void softfloat_negXM( uint_fast8_t size_words, uint32_t *zPtr )$/;"	f	typeref:typename:void
softfloat_normRoundPackToF128	softfloat/s_normRoundPackToF128.c	/^ softfloat_normRoundPackToF128($/;"	f	typeref:typename:float128_t
softfloat_normRoundPackToF16	softfloat/s_normRoundPackToF16.c	/^ softfloat_normRoundPackToF16( bool sign, int_fast16_t exp, uint_fast16_t sig )$/;"	f	typeref:typename:float16_t
softfloat_normRoundPackToF32	softfloat/s_normRoundPackToF32.c	/^ softfloat_normRoundPackToF32( bool sign, int_fast16_t exp, uint_fast32_t sig )$/;"	f	typeref:typename:float32_t
softfloat_normRoundPackToF64	softfloat/s_normRoundPackToF64.c	/^ softfloat_normRoundPackToF64( bool sign, int_fast16_t exp, uint_fast64_t sig )$/;"	f	typeref:typename:float64_t
softfloat_normSubnormalF128Sig	softfloat/s_normSubnormalF128Sig.c	/^ softfloat_normSubnormalF128Sig( uint_fast64_t sig64, uint_fast64_t sig0 )$/;"	f	typeref:struct:exp32_sig128
softfloat_normSubnormalF16Sig	softfloat/s_normSubnormalF16Sig.c	/^struct exp8_sig16 softfloat_normSubnormalF16Sig( uint_fast16_t sig )$/;"	f	typeref:struct:exp8_sig16
softfloat_normSubnormalF32Sig	softfloat/s_normSubnormalF32Sig.c	/^struct exp16_sig32 softfloat_normSubnormalF32Sig( uint_fast32_t sig )$/;"	f	typeref:struct:exp16_sig32
softfloat_normSubnormalF64Sig	softfloat/s_normSubnormalF64Sig.c	/^struct exp16_sig64 softfloat_normSubnormalF64Sig( uint_fast64_t sig )$/;"	f	typeref:struct:exp16_sig64
softfloat_propagateNaNF128UI	softfloat/s_propagateNaNF128UI.c	/^ softfloat_propagateNaNF128UI($/;"	f	typeref:struct:uint128
softfloat_propagateNaNF16UI	softfloat/s_propagateNaNF16UI.c	/^ softfloat_propagateNaNF16UI( uint_fast16_t uiA, uint_fast16_t uiB )$/;"	f	typeref:typename:uint_fast16_t
softfloat_propagateNaNF32UI	softfloat/s_propagateNaNF32UI.c	/^ softfloat_propagateNaNF32UI( uint_fast32_t uiA, uint_fast32_t uiB )$/;"	f	typeref:typename:uint_fast32_t
softfloat_propagateNaNF64UI	softfloat/s_propagateNaNF64UI.c	/^ softfloat_propagateNaNF64UI( uint_fast64_t uiA, uint_fast64_t uiB )$/;"	f	typeref:typename:uint_fast64_t
softfloat_raiseFlags	softfloat/softfloat_raiseFlags.c	/^void softfloat_raiseFlags( uint_fast8_t flags )$/;"	f	typeref:typename:void
softfloat_remStep128MBy32	softfloat/primitives.h	/^#define softfloat_remStep128MBy32(/;"	d
softfloat_remStep160MBy32	softfloat/primitives.h	/^#define softfloat_remStep160MBy32(/;"	d
softfloat_remStep96MBy32	softfloat/primitives.h	/^#define softfloat_remStep96MBy32(/;"	d
softfloat_remStepMBy32	softfloat/s_remStepMBy32.c	/^ softfloat_remStepMBy32($/;"	f	typeref:typename:void
softfloat_roundMToI64	softfloat/s_roundMToI64.c	/^ softfloat_roundMToI64($/;"	f	typeref:typename:int_fast64_t
softfloat_roundMToUI64	softfloat/s_roundMToUI64.c	/^ softfloat_roundMToUI64($/;"	f	typeref:typename:uint_fast64_t
softfloat_roundPackMToI64	softfloat/s_roundPackMToI64.c	/^ softfloat_roundPackMToI64($/;"	f	typeref:typename:int_fast64_t
softfloat_roundPackMToUI64	softfloat/s_roundPackMToUI64.c	/^ softfloat_roundPackMToUI64($/;"	f	typeref:typename:uint_fast64_t
softfloat_roundPackToF128	softfloat/s_roundPackToF128.c	/^ softfloat_roundPackToF128($/;"	f	typeref:typename:float128_t
softfloat_roundPackToF16	softfloat/s_roundPackToF16.c	/^ softfloat_roundPackToF16( bool sign, int_fast16_t exp, uint_fast16_t sig )$/;"	f	typeref:typename:float16_t
softfloat_roundPackToF32	softfloat/s_roundPackToF32.c	/^ softfloat_roundPackToF32( bool sign, int_fast16_t exp, uint_fast32_t sig )$/;"	f	typeref:typename:float32_t
softfloat_roundPackToF64	softfloat/s_roundPackToF64.c	/^ softfloat_roundPackToF64( bool sign, int_fast16_t exp, uint_fast64_t sig )$/;"	f	typeref:typename:float64_t
softfloat_roundPackToI32	softfloat/s_roundPackToI32.c	/^ softfloat_roundPackToI32($/;"	f	typeref:typename:int_fast32_t
softfloat_roundPackToI64	softfloat/s_roundPackToI64.c	/^ softfloat_roundPackToI64($/;"	f	typeref:typename:int_fast64_t
softfloat_roundPackToUI32	softfloat/s_roundPackToUI32.c	/^ softfloat_roundPackToUI32($/;"	f	typeref:typename:uint_fast32_t
softfloat_roundPackToUI64	softfloat/s_roundPackToUI64.c	/^ softfloat_roundPackToUI64($/;"	f	typeref:typename:uint_fast64_t
softfloat_roundToI32	softfloat/s_roundToI32.c	/^ softfloat_roundToI32($/;"	f	typeref:typename:int_fast32_t
softfloat_roundToI64	softfloat/s_roundToI64.c	/^ softfloat_roundToI64($/;"	f	typeref:typename:int_fast64_t
softfloat_roundToUI32	softfloat/s_roundToUI32.c	/^ softfloat_roundToUI32($/;"	f	typeref:typename:uint_fast32_t
softfloat_roundToUI64	softfloat/s_roundToUI64.c	/^ softfloat_roundToUI64($/;"	f	typeref:typename:uint_fast64_t
softfloat_round_max	softfloat/softfloat.h	/^    softfloat_round_max         = 3,$/;"	e	enum:__anon52f85d6e0203
softfloat_round_min	softfloat/softfloat.h	/^    softfloat_round_min         = 2,$/;"	e	enum:__anon52f85d6e0203
softfloat_round_minMag	softfloat/softfloat.h	/^    softfloat_round_minMag      = 1,$/;"	e	enum:__anon52f85d6e0203
softfloat_round_near_even	softfloat/softfloat.h	/^    softfloat_round_near_even   = 0,$/;"	e	enum:__anon52f85d6e0203
softfloat_round_near_maxMag	softfloat/softfloat.h	/^    softfloat_round_near_maxMag = 4,$/;"	e	enum:__anon52f85d6e0203
softfloat_round_odd	softfloat/softfloat.h	/^    softfloat_round_odd         = 5$/;"	e	enum:__anon52f85d6e0203
softfloat_roundingMode	softfloat/softfloat_state.c	/^THREAD_LOCAL uint_fast8_t softfloat_roundingMode = softfloat_round_near_even;$/;"	v	typeref:typename:THREAD_LOCAL uint_fast8_t
softfloat_shiftLeft128M	softfloat/primitives.h	/^#define softfloat_shiftLeft128M(/;"	d
softfloat_shiftLeft160M	softfloat/primitives.h	/^#define softfloat_shiftLeft160M(/;"	d
softfloat_shiftLeft96M	softfloat/primitives.h	/^#define softfloat_shiftLeft96M(/;"	d
softfloat_shiftRight96M	softfloat/primitives.h	/^#define softfloat_shiftRight96M(/;"	d
softfloat_shiftRightJam128	softfloat/s_shiftRightJam128.c	/^ softfloat_shiftRightJam128( uint64_t a64, uint64_t a0, uint_fast32_t dist )$/;"	f	typeref:struct:uint128
softfloat_shiftRightJam128Extra	softfloat/s_shiftRightJam128Extra.c	/^ softfloat_shiftRightJam128Extra($/;"	f	typeref:struct:uint128_extra
softfloat_shiftRightJam128M	softfloat/primitives.h	/^#define softfloat_shiftRightJam128M(/;"	d
softfloat_shiftRightJam160M	softfloat/primitives.h	/^#define softfloat_shiftRightJam160M(/;"	d
softfloat_shiftRightJam256M	softfloat/s_shiftRightJam256M.c	/^ softfloat_shiftRightJam256M($/;"	f	typeref:typename:void
softfloat_shiftRightJam32	softfloat/primitives.h	/^INLINE uint32_t softfloat_shiftRightJam32( uint32_t a, uint_fast16_t dist )$/;"	f	typeref:typename:INLINE uint32_t
softfloat_shiftRightJam32	softfloat/s_shiftRightJam32.c	/^uint32_t softfloat_shiftRightJam32( uint32_t a, uint_fast16_t dist )$/;"	f	typeref:typename:uint32_t
softfloat_shiftRightJam64	softfloat/primitives.h	/^INLINE uint64_t softfloat_shiftRightJam64( uint64_t a, uint_fast32_t dist )$/;"	f	typeref:typename:INLINE uint64_t
softfloat_shiftRightJam64	softfloat/s_shiftRightJam64.c	/^uint64_t softfloat_shiftRightJam64( uint64_t a, uint_fast32_t dist )$/;"	f	typeref:typename:uint64_t
softfloat_shiftRightJam64Extra	softfloat/primitives.h	/^ softfloat_shiftRightJam64Extra($/;"	f	typeref:typename:INLINE struct uint64_extra
softfloat_shiftRightJam64Extra	softfloat/s_shiftRightJam64Extra.c	/^ softfloat_shiftRightJam64Extra($/;"	f	typeref:struct:uint64_extra
softfloat_shiftRightJam96M	softfloat/primitives.h	/^#define softfloat_shiftRightJam96M(/;"	d
softfloat_shortShiftLeft128	softfloat/primitives.h	/^ softfloat_shortShiftLeft128( uint64_t a64, uint64_t a0, uint_fast8_t dist )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_shortShiftLeft128	softfloat/s_shortShiftLeft128.c	/^ softfloat_shortShiftLeft128( uint64_t a64, uint64_t a0, uint_fast8_t dist )$/;"	f	typeref:struct:uint128
softfloat_shortShiftLeft128M	softfloat/primitives.h	/^#define softfloat_shortShiftLeft128M(/;"	d
softfloat_shortShiftLeft160M	softfloat/primitives.h	/^#define softfloat_shortShiftLeft160M(/;"	d
softfloat_shortShiftLeft64To96M	softfloat/primitives.h	/^ softfloat_shortShiftLeft64To96M($/;"	f	typeref:typename:INLINE void
softfloat_shortShiftLeft64To96M	softfloat/s_shortShiftLeft64To96M.c	/^ softfloat_shortShiftLeft64To96M($/;"	f	typeref:typename:void
softfloat_shortShiftLeft96M	softfloat/primitives.h	/^#define softfloat_shortShiftLeft96M(/;"	d
softfloat_shortShiftRight128	softfloat/primitives.h	/^ softfloat_shortShiftRight128( uint64_t a64, uint64_t a0, uint_fast8_t dist )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_shortShiftRight128	softfloat/s_shortShiftRight128.c	/^ softfloat_shortShiftRight128( uint64_t a64, uint64_t a0, uint_fast8_t dist )$/;"	f	typeref:struct:uint128
softfloat_shortShiftRight128M	softfloat/primitives.h	/^#define softfloat_shortShiftRight128M(/;"	d
softfloat_shortShiftRight160M	softfloat/primitives.h	/^#define softfloat_shortShiftRight160M(/;"	d
softfloat_shortShiftRightExtendM	softfloat/s_shortShiftRightExtendM.c	/^ softfloat_shortShiftRightExtendM($/;"	f	typeref:typename:void
softfloat_shortShiftRightJam128	softfloat/primitives.h	/^ softfloat_shortShiftRightJam128($/;"	f	typeref:typename:INLINE struct uint128
softfloat_shortShiftRightJam128	softfloat/s_shortShiftRightJam128.c	/^ softfloat_shortShiftRightJam128($/;"	f	typeref:struct:uint128
softfloat_shortShiftRightJam128Extra	softfloat/primitives.h	/^ softfloat_shortShiftRightJam128Extra($/;"	f	typeref:typename:INLINE struct uint128_extra
softfloat_shortShiftRightJam128Extra	softfloat/s_shortShiftRightJam128Extra.c	/^ softfloat_shortShiftRightJam128Extra($/;"	f	typeref:struct:uint128_extra
softfloat_shortShiftRightJam160M	softfloat/primitives.h	/^#define softfloat_shortShiftRightJam160M(/;"	d
softfloat_shortShiftRightJam64	softfloat/primitives.h	/^uint64_t softfloat_shortShiftRightJam64( uint64_t a, uint_fast8_t dist )$/;"	f	typeref:typename:INLINE uint64_t
softfloat_shortShiftRightJam64	softfloat/s_shortShiftRightJam64.c	/^uint64_t softfloat_shortShiftRightJam64( uint64_t a, uint_fast8_t dist )$/;"	f	typeref:typename:uint64_t
softfloat_shortShiftRightJam64Extra	softfloat/primitives.h	/^ softfloat_shortShiftRightJam64Extra($/;"	f	typeref:typename:INLINE struct uint64_extra
softfloat_shortShiftRightJam64Extra	softfloat/s_shortShiftRightJam64Extra.c	/^ softfloat_shortShiftRightJam64Extra($/;"	f	typeref:struct:uint64_extra
softfloat_shortShiftRightJamM	softfloat/s_shiftRightJam256M.c	/^  softfloat_shortShiftRightJamM($/;"	f	typeref:typename:void	file:
softfloat_shortShiftRightM	softfloat/s_shortShiftRightM.c	/^ softfloat_shortShiftRightM($/;"	f	typeref:typename:void
softfloat_sub128	softfloat/primitives.h	/^ softfloat_sub128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:typename:INLINE struct uint128
softfloat_sub128	softfloat/s_sub128.c	/^ softfloat_sub128( uint64_t a64, uint64_t a0, uint64_t b64, uint64_t b0 )$/;"	f	typeref:struct:uint128
softfloat_sub128M	softfloat/primitives.h	/^#define softfloat_sub128M(/;"	d
softfloat_sub160M	softfloat/primitives.h	/^#define softfloat_sub160M(/;"	d
softfloat_sub1X160M	softfloat/primitives.h	/^#define softfloat_sub1X160M(/;"	d
softfloat_sub1X96M	softfloat/primitives.h	/^#define softfloat_sub1X96M(/;"	d
softfloat_sub1XM	softfloat/s_sub1XM.c	/^void softfloat_sub1XM( uint_fast8_t size_words, uint32_t *zPtr )$/;"	f	typeref:typename:void
softfloat_sub256M	softfloat/s_sub256M.c	/^ softfloat_sub256M($/;"	f	typeref:typename:void
softfloat_sub96M	softfloat/primitives.h	/^#define softfloat_sub96M(/;"	d
softfloat_subM	softfloat/s_subM.c	/^ softfloat_subM($/;"	f	typeref:typename:void
softfloat_subMagsF128	softfloat/s_subMagsF128.c	/^ softfloat_subMagsF128($/;"	f	typeref:typename:float128_t
softfloat_subMagsF16	softfloat/s_subMagsF16.c	/^float16_t softfloat_subMagsF16( uint_fast16_t uiA, uint_fast16_t uiB )$/;"	f	typeref:typename:float16_t
softfloat_subMagsF32	softfloat/s_subMagsF32.c	/^float32_t softfloat_subMagsF32( uint_fast32_t uiA, uint_fast32_t uiB )$/;"	f	typeref:typename:float32_t
softfloat_subMagsF64	softfloat/s_subMagsF64.c	/^ softfloat_subMagsF64( uint_fast64_t uiA, uint_fast64_t uiB, bool signZ )$/;"	f	typeref:typename:float64_t
softfloat_subproject_deps	build/softfloat.mk	/^softfloat_subproject_deps =$/;"	m
softfloat_subproject_deps	softfloat/softfloat.mk.in	/^softfloat_subproject_deps =$/;"	m
softfloat_test_srcs	build/softfloat.mk	/^softfloat_test_srcs =$/;"	m
softfloat_test_srcs	softfloat/softfloat.mk.in	/^softfloat_test_srcs =$/;"	m
softfloat_tininess_afterRounding	softfloat/softfloat.h	/^    softfloat_tininess_afterRounding  = 1$/;"	e	enum:__anon52f85d6e0103
softfloat_tininess_beforeRounding	softfloat/softfloat.h	/^    softfloat_tininess_beforeRounding = 0,$/;"	e	enum:__anon52f85d6e0103
softfloat_types_h	softfloat/softfloat_types.h	/^#define softfloat_types_h /;"	d
sort_mem_region	spike_main/spike.cc	/^bool sort_mem_region(const std::pair<reg_t, mem_t*> &a,$/;"	f	typeref:typename:bool
specialize_h	softfloat/specialize.h	/^#define specialize_h /;"	d
spike_dasm_install_prog_srcs	build/spike_dasm.mk	/^spike_dasm_install_prog_srcs = \\$/;"	m
spike_dasm_install_prog_srcs	spike_dasm/spike_dasm.mk.in	/^spike_dasm_install_prog_srcs = \\$/;"	m
spike_dasm_srcs	build/spike_dasm.mk	/^spike_dasm_srcs = \\$/;"	m
spike_dasm_srcs	spike_dasm/spike_dasm.mk.in	/^spike_dasm_srcs = \\$/;"	m
spike_dasm_subproject_deps	build/spike_dasm.mk	/^spike_dasm_subproject_deps = \\$/;"	m
spike_dasm_subproject_deps	spike_dasm/spike_dasm.mk.in	/^spike_dasm_subproject_deps = \\$/;"	m
spike_main_hdrs	build/spike_main.mk	/^spike_main_hdrs = \\$/;"	m
spike_main_hdrs	spike_main/spike_main.mk.in	/^spike_main_hdrs = \\$/;"	m
spike_main_install_prog_srcs	build/spike_main.mk	/^spike_main_install_prog_srcs = \\$/;"	m
spike_main_install_prog_srcs	spike_main/spike_main.mk.in	/^spike_main_install_prog_srcs = \\$/;"	m
spike_main_srcs	build/spike_main.mk	/^spike_main_srcs = \\$/;"	m
spike_main_srcs	spike_main/spike_main.mk.in	/^spike_main_srcs = \\$/;"	m
spike_main_subproject_deps	build/spike_main.mk	/^spike_main_subproject_deps = \\$/;"	m
spike_main_subproject_deps	spike_main/spike_main.mk.in	/^spike_main_subproject_deps = \\$/;"	m
sprojs	Makefile.in	/^sprojs         := @subprojects@$/;"	m
sprojs	build/Makefile	/^sprojs         :=  fesvr riscv disasm customext fdt softfloat spike_main spike_dasm$/;"	m
sprojs_enabled	Makefile.in	/^sprojs_enabled := @subprojects_enabled@$/;"	m
sprojs_enabled	build/Makefile	/^sprojs_enabled :=  fesvr riscv disasm customext fdt softfloat spike_main spike_dasm$/;"	m
sprojs_include	Makefile.in	/^sprojs_include := -I. -I$(src_dir) $(addprefix -I$(src_dir)\/, $(sprojs_enabled))$/;"	m
sprojs_include	build/Makefile	/^sprojs_include := -I. -I$(src_dir) $(addprefix -I$(src_dir)\/, $(sprojs_enabled))$/;"	m
sprojs_mk	Makefile.in	/^sprojs_mk = $(addsuffix .mk, $(sprojs_enabled))$/;"	m
sprojs_mk	build/Makefile	/^sprojs_mk = $(addsuffix .mk, $(sprojs_enabled))$/;"	m
sprojs_mk_in	Makefile.in	/^sprojs_mk_in = \\$/;"	m
sprojs_mk_in	build/Makefile	/^sprojs_mk_in = \\$/;"	m
src_dir	Makefile.in	/^src_dir      := @srcdir@$/;"	m
src_dir	build/Makefile	/^src_dir      := ..$/;"	m
sreg_t	fesvr/memif.h	/^typedef int64_t sreg_t;$/;"	t	typeref:typename:int64_t
sreg_t	riscv/decode.h	/^typedef int64_t sreg_t;$/;"	t	typeref:typename:int64_t
srli	riscv/opcodes.h	/^static uint32_t srli(unsigned int dest, unsigned int src, uint8_t shamt)$/;"	f	typeref:typename:uint32_t
sscratch	riscv/processor.h	/^  reg_t sscratch;$/;"	m	struct:state_t	typeref:typename:reg_t
st_info	fesvr/elf.h	/^  uint8_t  st_info;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint8_t
st_info	fesvr/elf.h	/^  uint8_t  st_info;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint8_t
st_name	fesvr/elf.h	/^  uint32_t st_name;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint32_t
st_name	fesvr/elf.h	/^  uint32_t st_name;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint32_t
st_other	fesvr/elf.h	/^  uint8_t  st_other;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint8_t
st_other	fesvr/elf.h	/^  uint8_t  st_other;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint8_t
st_shndx	fesvr/elf.h	/^  uint16_t st_shndx;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint16_t
st_shndx	fesvr/elf.h	/^  uint16_t st_shndx;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint16_t
st_size	fesvr/elf.h	/^  uint32_t st_size;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint32_t
st_size	fesvr/elf.h	/^  uint64_t st_size;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint64_t
st_value	fesvr/elf.h	/^  uint32_t st_value;$/;"	m	struct:__anon9d3644870408	typeref:typename:uint32_t
st_value	fesvr/elf.h	/^  uint64_t st_value;$/;"	m	struct:__anon9d3644870808	typeref:typename:uint64_t
start	fesvr/htif.cc	/^void htif_t::start()$/;"	f	class:htif_t	typeref:typename:void
start_host_thread	fesvr/dtm.cc	/^void dtm_t::start_host_thread()$/;"	f	class:dtm_t	typeref:typename:void
start_pc	riscv/sim.h	/^  reg_t start_pc;$/;"	m	class:sim_t	typeref:typename:reg_t
state	riscv/jtag_dtm.h	/^    jtag_state_t state() const { return _state; }$/;"	f	class:jtag_dtm_t	typeref:typename:jtag_state_t
state	riscv/processor.h	/^  state_t state;$/;"	m	class:processor_t	typeref:typename:state_t
state_t	riscv/processor.h	/^struct state_t$/;"	s
step	riscv/execute.cc	/^void processor_t::step(size_t n)$/;"	f	class:processor_t	typeref:typename:void
step	riscv/processor.h	/^  bool step;$/;"	m	struct:__anon2b80edf10108	typeref:typename:bool
step	riscv/sim.cc	/^void sim_t::step(size_t n)$/;"	f	class:sim_t	typeref:typename:void
stepi	tests/testlib.py	/^    def stepi(self):$/;"	m	class:Gdb
stop	fesvr/htif.cc	/^void htif_t::stop()$/;"	f	class:htif_t	typeref:typename:void
stopped	fesvr/htif.h	/^  bool stopped;$/;"	m	class:htif_t	typeref:typename:bool
store	riscv/clint.cc	/^bool clint_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:clint_t	typeref:typename:bool
store	riscv/debug_module.cc	/^bool debug_module_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:debug_module_t	typeref:typename:bool
store	riscv/devices.cc	/^bool bus_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:bus_t	typeref:typename:bool
store	riscv/devices.cc	/^bool mmio_plugin_device_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:mmio_plugin_device_t	typeref:typename:bool
store	riscv/devices.h	/^  bool store(reg_t addr, size_t len, const uint8_t* bytes) { return false; }$/;"	f	class:mem_t	typeref:typename:bool
store	riscv/mmio_plugin.h	/^  bool (*store)(void*, reg_t, size_t, const uint8_t*);$/;"	m	struct:__anonafb95f510108	typeref:typename:bool (*)(void *,reg_t,size_t,const uint8_t *)
store	riscv/mmio_plugin.h	/^  static bool store(void* self, reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	struct:mmio_plugin_registration_t	typeref:typename:bool
store	riscv/processor.cc	/^bool processor_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:processor_t	typeref:typename:bool
store	riscv/processor.h	/^  bool store;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
store	riscv/rom.cc	/^bool rom_device_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:rom_device_t	typeref:typename:bool
store_address	disasm/disasm.cc	/^} store_address;$/;"	v	typeref:struct:__anon961b4d0a0208
store_func	riscv/mmu.h	/^  #define store_func(/;"	d
store_func	riscv/mmu.h	/^  store_func(uint8, guest_store, RISCV_XLATE_VIRT)$/;"	f	class:mmu_t
store_slow_path	riscv/mmu.cc	/^void mmu_t::store_slow_path(reg_t addr, reg_t len, const uint8_t* bytes, uint32_t xlate_flags)$/;"	f	class:mmu_t	typeref:typename:void
str	fdt/fdt_strerror.c	/^	const char *str;$/;"	m	struct:fdt_errtabent	typeref:typename:const char *	file:
str	fesvr/option_parser.h	/^    const char* str;$/;"	m	struct:option_parser_t::option_t	typeref:typename:const char *
str	fesvr/rfb.h	/^  std::string str(T x)$/;"	f	class:rfb_t	typeref:typename:std::string
strnlen	fdt/libfdt_env.h	/^#define strnlen /;"	d
strtolower	riscv/processor.cc	/^static std::string strtolower(const char* str)$/;"	f	typeref:typename:std::string	file:
stval	riscv/processor.h	/^  reg_t stval;$/;"	m	struct:state_t	typeref:typename:reg_t
stvec	riscv/processor.h	/^  reg_t stvec;$/;"	m	struct:state_t	typeref:typename:reg_t
subproject_template	Makefile.in	/^define subproject_template$/;"	m
subproject_template	build/Makefile	/^define subproject_template$/;"	m
suggest_help	spike_main/spike.cc	/^static void suggest_help()$/;"	f	typeref:typename:void	file:
support_abstract_csr_access	riscv/debug_module.h	/^    bool support_abstract_csr_access;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:bool
support_haltgroups	riscv/debug_module.h	/^    bool support_haltgroups;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:bool
support_hasel	riscv/debug_module.h	/^    bool support_hasel;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:bool
support_impebreak	riscv/debug_module.h	/^    bool support_impebreak;$/;"	m	struct:__anon5c7e8f3d0108	typeref:typename:bool
supports_extension	riscv/processor.h	/^  bool supports_extension(unsigned char ext) {$/;"	f	class:processor_t	typeref:typename:bool
sw	riscv/opcodes.h	/^static uint32_t sw(unsigned int src, unsigned int base, uint16_t offset)$/;"	f	typeref:typename:uint32_t
sw_flags	fdt/fdt_sw.c	/^static inline uint32_t sw_flags(void *fdt)$/;"	f	typeref:typename:uint32_t	file:
swap	riscv/byteorder.h	/^static inline int16_t swap(int16_t n) { return __builtin_bswap16(n); }$/;"	f	typeref:typename:int16_t
swap	riscv/byteorder.h	/^static inline int32_t swap(int32_t n) { return __builtin_bswap32(n); }$/;"	f	typeref:typename:int32_t
swap	riscv/byteorder.h	/^static inline int64_t swap(int64_t n) { return __builtin_bswap64(n); }$/;"	f	typeref:typename:int64_t
swap	riscv/byteorder.h	/^static inline int8_t swap(int8_t n) { return n; }$/;"	f	typeref:typename:int8_t
swap	riscv/byteorder.h	/^static inline uint16_t swap(uint16_t n) { return __builtin_bswap16(n); }$/;"	f	typeref:typename:uint16_t
swap	riscv/byteorder.h	/^static inline uint32_t swap(uint32_t n) { return __builtin_bswap32(n); }$/;"	f	typeref:typename:uint32_t
swap	riscv/byteorder.h	/^static inline uint64_t swap(uint64_t n) { return __builtin_bswap64(n); }$/;"	f	typeref:typename:uint64_t
swap	riscv/byteorder.h	/^static inline uint8_t swap(uint8_t n) { return n; }$/;"	f	typeref:typename:uint8_t
swap_csr	riscv/encoding.h	/^#define swap_csr(/;"	d
switch_to	fesvr/context.cc	/^void context_t::switch_to()$/;"	f	class:context_t	typeref:typename:void
switch_to_host	fesvr/tsi.cc	/^void tsi_t::switch_to_host(void)$/;"	f	class:tsi_t	typeref:typename:void
switch_to_target	fesvr/tsi.cc	/^void tsi_t::switch_to_target(void)$/;"	f	class:tsi_t	typeref:typename:void
sys_chdir	fesvr/syscall.cc	/^reg_t syscall_t::sys_chdir(reg_t path, reg_t a1, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_t a/;"	f	class:syscall_t	typeref:typename:reg_t
sys_close	fesvr/syscall.cc	/^reg_t syscall_t::sys_close(reg_t fd, reg_t a1, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_t a6)$/;"	f	class:syscall_t	typeref:typename:reg_t
sys_exit	fesvr/syscall.cc	/^reg_t syscall_t::sys_exit(reg_t code, reg_t a1, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_t a6/;"	f	class:syscall_t	typeref:typename:reg_t
sys_faccessat	fesvr/syscall.cc	/^reg_t syscall_t::sys_faccessat(reg_t dirfd, reg_t pname, reg_t len, reg_t mode, reg_t a4, reg_t /;"	f	class:syscall_t	typeref:typename:reg_t
sys_fcntl	fesvr/syscall.cc	/^reg_t syscall_t::sys_fcntl(reg_t fd, reg_t cmd, reg_t arg, reg_t a3, reg_t a4, reg_t a5, reg_t a/;"	f	class:syscall_t	typeref:typename:reg_t
sys_fstat	fesvr/syscall.cc	/^reg_t syscall_t::sys_fstat(reg_t fd, reg_t pbuf, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_t a/;"	f	class:syscall_t	typeref:typename:reg_t
sys_fstatat	fesvr/syscall.cc	/^reg_t syscall_t::sys_fstatat(reg_t dirfd, reg_t pname, reg_t len, reg_t pbuf, reg_t flags, reg_t/;"	f	class:syscall_t	typeref:typename:reg_t
sys_ftruncate	fesvr/syscall.cc	/^reg_t syscall_t::sys_ftruncate(reg_t fd, reg_t len, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_/;"	f	class:syscall_t	typeref:typename:reg_t
sys_getcwd	fesvr/syscall.cc	/^reg_t syscall_t::sys_getcwd(reg_t pbuf, reg_t size, reg_t a2, reg_t a3, reg_t a4, reg_t a5, reg_/;"	f	class:syscall_t	typeref:typename:reg_t
sys_getmainvars	fesvr/syscall.cc	/^reg_t syscall_t::sys_getmainvars(reg_t pbuf, reg_t limit, reg_t a2, reg_t a3, reg_t a4, reg_t a5/;"	f	class:syscall_t	typeref:typename:reg_t
sys_linkat	fesvr/syscall.cc	/^reg_t syscall_t::sys_linkat(reg_t odirfd, reg_t poname, reg_t olen, reg_t ndirfd, reg_t pnname, /;"	f	class:syscall_t	typeref:typename:reg_t
sys_lseek	fesvr/syscall.cc	/^reg_t syscall_t::sys_lseek(reg_t fd, reg_t ptr, reg_t dir, reg_t a3, reg_t a4, reg_t a5, reg_t a/;"	f	class:syscall_t	typeref:typename:reg_t
sys_lstat	fesvr/syscall.cc	/^reg_t syscall_t::sys_lstat(reg_t pname, reg_t len, reg_t pbuf, reg_t a3, reg_t a4, reg_t a5, reg/;"	f	class:syscall_t	typeref:typename:reg_t
sys_mkdirat	fesvr/syscall.cc	/^reg_t syscall_t::sys_mkdirat(reg_t dirfd, reg_t pname, reg_t len, reg_t mode, reg_t a4, reg_t a5/;"	f	class:syscall_t	typeref:typename:reg_t
sys_openat	fesvr/syscall.cc	/^reg_t syscall_t::sys_openat(reg_t dirfd, reg_t pname, reg_t len, reg_t flags, reg_t mode, reg_t /;"	f	class:syscall_t	typeref:typename:reg_t
sys_pread	fesvr/syscall.cc	/^reg_t syscall_t::sys_pread(reg_t fd, reg_t pbuf, reg_t len, reg_t off, reg_t a4, reg_t a5, reg_t/;"	f	class:syscall_t	typeref:typename:reg_t
sys_pwrite	fesvr/syscall.cc	/^reg_t syscall_t::sys_pwrite(reg_t fd, reg_t pbuf, reg_t len, reg_t off, reg_t a4, reg_t a5, reg_/;"	f	class:syscall_t	typeref:typename:reg_t
sys_read	fesvr/syscall.cc	/^reg_t syscall_t::sys_read(reg_t fd, reg_t pbuf, reg_t len, reg_t a3, reg_t a4, reg_t a5, reg_t a/;"	f	class:syscall_t	typeref:typename:reg_t
sys_renameat	fesvr/syscall.cc	/^reg_t syscall_t::sys_renameat(reg_t odirfd, reg_t popath, reg_t olen, reg_t ndirfd, reg_t pnpath/;"	f	class:syscall_t	typeref:typename:reg_t
sys_unlinkat	fesvr/syscall.cc	/^reg_t syscall_t::sys_unlinkat(reg_t dirfd, reg_t pname, reg_t len, reg_t flags, reg_t a4, reg_t /;"	f	class:syscall_t	typeref:typename:reg_t
sys_write	fesvr/syscall.cc	/^reg_t syscall_t::sys_write(reg_t fd, reg_t pbuf, reg_t len, reg_t a3, reg_t a4, reg_t a5, reg_t /;"	f	class:syscall_t	typeref:typename:reg_t
syscall_func_t	fesvr/syscall.h	/^typedef reg_t (syscall_t::*syscall_func_t)(reg_t, reg_t, reg_t, reg_t, reg_t, reg_t, reg_t);$/;"	t	typeref:typename:reg_t (syscall_t::*)(reg_t,reg_t,reg_t,reg_t,reg_t,reg_t,reg_t)
syscall_proxy	fesvr/htif.h	/^  syscall_t syscall_proxy;$/;"	m	class:htif_t	typeref:typename:syscall_t
syscall_t	fesvr/syscall.cc	/^syscall_t::syscall_t(htif_t* htif)$/;"	f	class:syscall_t
syscall_t	fesvr/syscall.h	/^class syscall_t : public device_t$/;"	c
sysret_errno	fesvr/syscall.cc	/^static reg_t sysret_errno(sreg_t ret)$/;"	f	typeref:typename:reg_t	file:
table	fesvr/syscall.h	/^  std::vector<syscall_func_t> table;$/;"	m	class:syscall_t	typeref:typename:std::vector<syscall_func_t>
tag	fdt/fdt.h	/^	fdt32_t tag;$/;"	m	struct:fdt_node_header	typeref:typename:fdt32_t
tag	fdt/fdt.h	/^	fdt32_t tag;$/;"	m	struct:fdt_property	typeref:typename:fdt32_t
tag	fesvr/device.h	/^    uint64_t tag;$/;"	m	struct:disk_t::request_t	typeref:typename:uint64_t
tag	riscv/mmu.h	/^  reg_t tag;$/;"	m	struct:icache_entry_t	typeref:typename:reg_t
tags	riscv/cachesim.h	/^  std::map<uint64_t, uint64_t> tags;$/;"	m	class:fa_cache_sim_t	typeref:typename:std::map<uint64_t,uint64_t>
tags	riscv/cachesim.h	/^  uint64_t* tags;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t *
take_interrupt	riscv/processor.cc	/^void processor_t::take_interrupt(reg_t pending_interrupts)$/;"	f	class:processor_t	typeref:typename:void
take_pending_interrupt	riscv/processor.h	/^  void take_pending_interrupt() { take_interrupt(state.mip & state.mie); }$/;"	f	class:processor_t	typeref:typename:void
take_trap	riscv/processor.cc	/^void processor_t::take_trap(trap_t& t, reg_t epc)$/;"	f	class:processor_t	typeref:typename:void
tap	riscv/remote_bitbang.h	/^  jtag_dtm_t *tap;$/;"	m	class:remote_bitbang_t	typeref:typename:jtag_dtm_t *
target	fesvr/dtm.h	/^  context_t* target;$/;"	m	class:dtm_t	typeref:typename:context_t *
target	fesvr/htif_pthread.h	/^  context_t* target;$/;"	m	class:htif_pthread_t	typeref:typename:context_t *
target	fesvr/tsi.h	/^  context_t* target;$/;"	m	class:tsi_t	typeref:typename:context_t *
target	riscv/sim.h	/^  context_t target;$/;"	m	class:sim_t	typeref:typename:context_t
target_args	fesvr/htif.h	/^  const std::vector<std::string>& target_args() { return targs; }$/;"	f	class:htif_t	typeref:typename:const std::vector<std::string> &
target_offset	riscv/mmu.h	/^  reg_t target_offset;$/;"	m	struct:tlb_entry_t	typeref:typename:reg_t
targs	fesvr/htif.h	/^  std::vector<std::string> targs;$/;"	m	class:htif_t	typeref:typename:std::vector<std::string>
tdata2	riscv/processor.h	/^  reg_t tdata2[num_triggers];$/;"	m	struct:state_t	typeref:typename:reg_t[]
tdo	riscv/jtag_dtm.h	/^    bool tdo() const { return _tdo; }$/;"	f	class:jtag_dtm_t	typeref:typename:bool
test_nogdb	tests/ebreak.py	/^    def test_nogdb(self):$/;"	m	class:EbreakTest
test_noport	tests/ebreak.py	/^    def test_noport(self):$/;"	m	class:EbreakTest
th_data	fesvr/htif_pthread.h	/^  std::deque<char> th_data;$/;"	m	class:htif_pthread_t	typeref:typename:std::deque<char>
thread	fesvr/context.h	/^  pthread_t thread;$/;"	m	class:context_t	typeref:typename:pthread_t
thread	fesvr/rfb.h	/^  pthread_t thread;$/;"	m	class:rfb_t	typeref:typename:pthread_t
thread_main	fesvr/htif_pthread.cc	/^void htif_pthread_t::thread_main(void* arg)$/;"	f	class:htif_pthread_t	typeref:typename:void
thread_main	fesvr/rfb.cc	/^void rfb_t::thread_main()$/;"	f	class:rfb_t	typeref:typename:void
throw_access_exception	riscv/mmu.cc	/^static void throw_access_exception(reg_t addr, access_type type)$/;"	f	typeref:typename:void	file:
tick	fesvr/device.cc	/^void bcd_t::tick()$/;"	f	class:bcd_t	typeref:typename:void
tick	fesvr/device.cc	/^void device_list_t::tick()$/;"	f	class:device_list_t	typeref:typename:void
tick	fesvr/device.h	/^  virtual void tick() {}$/;"	f	class:device_t	typeref:typename:void
tick	fesvr/dtm.cc	/^void dtm_t::tick($/;"	f	class:dtm_t	typeref:typename:void
tick	fesvr/rfb.cc	/^void rfb_t::tick()$/;"	f	class:rfb_t	typeref:typename:void
tick	fesvr/tsi.cc	/^void tsi_t::tick(bool out_valid, uint32_t out_bits, bool in_ready)$/;"	f	class:tsi_t	typeref:typename:void
tick	riscv/remote_bitbang.cc	/^void remote_bitbang_t::tick()$/;"	f	class:remote_bitbang_t	typeref:typename:void
timing	riscv/processor.h	/^  bool timing;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
tinst	riscv/trap.h	/^  reg_t tval, tval2, tinst;$/;"	m	class:mem_trap_t	typeref:typename:reg_t
tios	fesvr/term.cc	/^static canonical_termios_t tios; \/\/ exit() will clean up for us$/;"	v	typeref:typename:canonical_termios_t	file:
tlb_data	riscv/mmu.h	/^  tlb_entry_t tlb_data[TLB_ENTRIES];$/;"	m	class:mmu_t	typeref:typename:tlb_entry_t[]
tlb_entry_t	riscv/mmu.h	/^struct tlb_entry_t {$/;"	s
tlb_insn_tag	riscv/mmu.h	/^  reg_t tlb_insn_tag[TLB_ENTRIES];$/;"	m	class:mmu_t	typeref:typename:reg_t[]
tlb_load_tag	riscv/mmu.h	/^  reg_t tlb_load_tag[TLB_ENTRIES];$/;"	m	class:mmu_t	typeref:typename:reg_t[]
tlb_store_tag	riscv/mmu.h	/^  reg_t tlb_store_tag[TLB_ENTRIES];$/;"	m	class:mmu_t	typeref:typename:reg_t[]
tmp	riscv/insns/c_jal.h	/^  reg_t tmp = npc;$/;"	v	typeref:typename:reg_t
tmp	riscv/insns/c_jalr.h	/^reg_t tmp = npc;$/;"	v	typeref:typename:reg_t
tmp	riscv/insns/jal.h	/^reg_t tmp = npc;$/;"	v	typeref:typename:reg_t
tmp	riscv/insns/jalr.h	/^reg_t tmp = npc;$/;"	v	typeref:typename:reg_t
to_be	riscv/byteorder.h	/^template<typename T> static inline T to_be(T n) { return n; }$/;"	f	typeref:typename:T
to_be	riscv/byteorder.h	/^template<typename T> static inline T to_be(T n) { return swap(n); }$/;"	f	typeref:typename:T
to_f	riscv/decode.h	/^inline double to_f(float64_t f){double r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f	typeref:typename:double
to_f	riscv/decode.h	/^inline float to_f(float32_t f){float r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f	typeref:typename:float
to_f	riscv/decode.h	/^inline long double to_f(float128_t f){long double r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f	typeref:typename:long double
to_le	riscv/byteorder.h	/^template<typename T> static inline T to_le(T n) { return n; }$/;"	f	typeref:typename:T
to_le	riscv/byteorder.h	/^template<typename T> static inline T to_le(T n) { return swap(n); }$/;"	f	typeref:typename:T
to_string	customext/cflush.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon1e23afd90108	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0108	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0208	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0308	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0408	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0508	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0608	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0708	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0808	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0908	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0a08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0b08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0c08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0d08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0e08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a0f08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1008	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1108	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1208	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1308	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1408	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1508	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1608	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1708	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1808	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1908	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1a08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1b08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1c08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1d08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1e08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a1f08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2008	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2108	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2208	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2308	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2408	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2508	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2608	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2708	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2808	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2908	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2a08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2b08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2c08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2d08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2e08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a2f08	typeref:typename:std::string	file:
to_string	disasm/disasm.cc	/^  std::string to_string(insn_t insn) const {$/;"	f	struct:__anon961b4d0a3008	typeref:typename:std::string	file:
to_string	riscv/disasm.h	/^  std::string to_string(insn_t insn) const { return ""; }$/;"	f	struct:__anonbc96ba520108	typeref:typename:std::string
to_string	riscv/disasm.h	/^  std::string to_string(insn_t insn) const$/;"	f	class:disasm_insn_t	typeref:typename:std::string
tohost	fesvr/device.h	/^  uint64_t tohost;$/;"	m	class:command_t	typeref:typename:uint64_t
tohost_addr	fesvr/htif.h	/^  addr_t tohost_addr;$/;"	m	class:htif_t	typeref:typename:addr_t
totalsize	fdt/fdt.h	/^	fdt32_t totalsize;		 \/* total size of DT block *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
trace	riscv/cachesim.h	/^  void trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:dcache_sim_t	typeref:typename:void
trace	riscv/cachesim.h	/^  void trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:icache_sim_t	typeref:typename:void
trace	riscv/memtracer.h	/^  void trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:memtracer_list_t	typeref:typename:void
trace_opcode	riscv/tracer.h	/^static inline void trace_opcode(processor_t* p, insn_bits_t opc, insn_t insn) {$/;"	f	typeref:typename:void
tracer	riscv/mmu.h	/^  memtracer_list_t tracer;$/;"	m	class:mmu_t	typeref:typename:memtracer_list_t
translate	riscv/mmu.cc	/^reg_t mmu_t::translate(reg_t addr, reg_t len, access_type type, uint32_t xlate_flags)$/;"	f	class:mmu_t	typeref:typename:reg_t
translate_insn_addr	riscv/mmu.h	/^  inline tlb_entry_t translate_insn_addr(reg_t addr) {$/;"	f	class:mmu_t	typeref:typename:tlb_entry_t
translate_insn_addr_to_host	riscv/mmu.h	/^  inline const uint16_t* translate_insn_addr_to_host(reg_t addr) {$/;"	f	class:mmu_t	typeref:typename:const uint16_t *
trap_t	riscv/trap.h	/^  trap_t(reg_t which) : which(which) {}$/;"	f	class:trap_t
trap_t	riscv/trap.h	/^class trap_t$/;"	c
trigger_exception	riscv/mmu.h	/^  inline trigger_matched_t *trigger_exception(trigger_operation_t operation,$/;"	f	class:mmu_t	typeref:typename:trigger_matched_t *
trigger_match	riscv/processor.h	/^  inline int trigger_match(trigger_operation_t operation, reg_t address, reg_t data)$/;"	f	class:processor_t	typeref:typename:int
trigger_matched_t	riscv/mmu.h	/^    trigger_matched_t(int index,$/;"	f	class:trigger_matched_t
trigger_matched_t	riscv/mmu.h	/^class trigger_matched_t$/;"	c
trigger_operation_t	riscv/processor.h	/^} trigger_operation_t;$/;"	t	typeref:enum:__anon2b80edf10603
trigger_updated	riscv/processor.cc	/^void processor_t::trigger_updated()$/;"	f	class:processor_t	typeref:typename:void
tselect	riscv/processor.h	/^  reg_t tselect;$/;"	m	struct:state_t	typeref:typename:reg_t
tsi_t	fesvr/tsi.cc	/^tsi_t::tsi_t(int argc, char** argv) : htif_t(argc, argv)$/;"	f	class:tsi_t
tsi_t	fesvr/tsi.h	/^class tsi_t : public htif_t$/;"	c
tval	riscv/trap.h	/^  reg_t tval, tval2, tinst;$/;"	m	class:mem_trap_t	typeref:typename:reg_t
tval	riscv/trap.h	/^  reg_t tval;$/;"	m	class:insn_trap_t	typeref:typename:reg_t
tval2	riscv/trap.h	/^  reg_t tval, tval2, tinst;$/;"	m	class:mem_trap_t	typeref:typename:reg_t
type	riscv/processor.h	/^  uint8_t type;$/;"	m	struct:__anon2b80edf10408	typeref:typename:uint8_t
type	riscv/processor.h	/^  using type=int16_t;$/;"	t	struct:type_sew_t	typeref:typename:int16_t
type	riscv/processor.h	/^  using type=int32_t;$/;"	t	struct:type_sew_t	typeref:typename:int32_t
type	riscv/processor.h	/^  using type=int64_t;$/;"	t	struct:type_sew_t	typeref:typename:int64_t
type	riscv/processor.h	/^  using type=int8_t;$/;"	t	struct:type_sew_t	typeref:typename:int8_t
type	riscv/processor.h	/^  using type=uint16_t;$/;"	t	struct:type_usew_t	typeref:typename:uint16_t
type	riscv/processor.h	/^  using type=uint32_t;$/;"	t	struct:type_usew_t	typeref:typename:uint32_t
type	riscv/processor.h	/^  using type=uint64_t;$/;"	t	struct:type_usew_t	typeref:typename:uint64_t
type	riscv/processor.h	/^  using type=uint8_t;$/;"	t	struct:type_usew_t	typeref:typename:uint8_t
type_sew_t	riscv/processor.h	/^struct type_sew_t<16>$/;"	s
type_sew_t	riscv/processor.h	/^struct type_sew_t<32>$/;"	s
type_sew_t	riscv/processor.h	/^struct type_sew_t<64>$/;"	s
type_sew_t	riscv/processor.h	/^struct type_sew_t<8>$/;"	s
type_usew_t	riscv/processor.h	/^struct type_usew_t<16>$/;"	s
type_usew_t	riscv/processor.h	/^struct type_usew_t<32>$/;"	s
type_usew_t	riscv/processor.h	/^struct type_usew_t<64>$/;"	s
type_usew_t	riscv/processor.h	/^struct type_usew_t<8>$/;"	s
u	riscv/insns/bmator.h	/^uint8_t u[8]; \/\/ rows of rs1$/;"	v	typeref:typename:uint8_t[8]
u	riscv/insns/bmatxor.h	/^uint8_t u[8]; \/\/ rows of rs1$/;"	v	typeref:typename:uint8_t[8]
u	riscv/processor.h	/^  bool u;$/;"	m	struct:__anon2b80edf10408	typeref:typename:bool
u_imm	riscv/decode.h	/^  int64_t u_imm() { return int64_t(b) >> 12 << 12; }$/;"	f	class:insn_t	typeref:typename:int64_t
ui	softfloat/internals.h	/^union ui128_f128 { struct uint128 ui; float128_t f; };$/;"	m	union:ui128_f128	typeref:struct:uint128
ui	softfloat/internals.h	/^union ui16_f16 { uint16_t ui; float16_t f; };$/;"	m	union:ui16_f16	typeref:typename:uint16_t
ui	softfloat/internals.h	/^union ui32_f32 { uint32_t ui; float32_t f; };$/;"	m	union:ui32_f32	typeref:typename:uint32_t
ui	softfloat/internals.h	/^union ui64_f64 { uint64_t ui; float64_t f; };$/;"	m	union:ui64_f64	typeref:typename:uint64_t
ui	softfloat/s_roundMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundMToI64::__anon11a0ef14010a	typeref:typename:uint64_t	file:
ui	softfloat/s_roundPackMToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundPackMToI64::__anond79ae633010a	typeref:typename:uint64_t	file:
ui	softfloat/s_roundPackToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	m	union:softfloat_roundPackToI32::__anonf1049901010a	typeref:typename:uint32_t	file:
ui	softfloat/s_roundPackToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundPackToI64::__anonf10646a6010a	typeref:typename:uint64_t	file:
ui	softfloat/s_roundToI32.c	/^    union { uint32_t ui; int32_t i; } uZ;$/;"	m	union:softfloat_roundToI32::__anon0a0c89c2010a	typeref:typename:uint32_t	file:
ui	softfloat/s_roundToI64.c	/^    union { uint64_t ui; int64_t i; } uZ;$/;"	m	union:softfloat_roundToI64::__anon0a0e3767010a	typeref:typename:uint64_t	file:
ui128_f128	softfloat/internals.h	/^union ui128_f128 { struct uint128 ui; float128_t f; };$/;"	u
ui16_f16	softfloat/internals.h	/^union ui16_f16 { uint16_t ui; float16_t f; };$/;"	u
ui16_fromNaN	softfloat/specialize.h	/^#define ui16_fromNaN /;"	d
ui16_fromNegOverflow	softfloat/specialize.h	/^#define ui16_fromNegOverflow /;"	d
ui16_fromPosOverflow	softfloat/specialize.h	/^#define ui16_fromPosOverflow /;"	d
ui32_f32	softfloat/internals.h	/^union ui32_f32 { uint32_t ui; float32_t f; };$/;"	u
ui32_fromNaN	softfloat/specialize.h	/^#define ui32_fromNaN /;"	d
ui32_fromNegOverflow	softfloat/specialize.h	/^#define ui32_fromNegOverflow /;"	d
ui32_fromPosOverflow	softfloat/specialize.h	/^#define ui32_fromPosOverflow /;"	d
ui32_to_f128	softfloat/ui32_to_f128.c	/^float128_t ui32_to_f128( uint32_t a )$/;"	f	typeref:typename:float128_t
ui32_to_f16	softfloat/ui32_to_f16.c	/^float16_t ui32_to_f16( uint32_t a )$/;"	f	typeref:typename:float16_t
ui32_to_f32	softfloat/ui32_to_f32.c	/^float32_t ui32_to_f32( uint32_t a )$/;"	f	typeref:typename:float32_t
ui32_to_f64	softfloat/ui32_to_f64.c	/^float64_t ui32_to_f64( uint32_t a )$/;"	f	typeref:typename:float64_t
ui64_f64	softfloat/internals.h	/^union ui64_f64 { uint64_t ui; float64_t f; };$/;"	u
ui64_fromNaN	softfloat/specialize.h	/^#define ui64_fromNaN /;"	d
ui64_fromNegOverflow	softfloat/specialize.h	/^#define ui64_fromNegOverflow /;"	d
ui64_fromPosOverflow	softfloat/specialize.h	/^#define ui64_fromPosOverflow /;"	d
ui64_to_f128	softfloat/ui64_to_f128.c	/^float128_t ui64_to_f128( uint64_t a )$/;"	f	typeref:typename:float128_t
ui64_to_f16	softfloat/ui64_to_f16.c	/^float16_t ui64_to_f16( uint64_t a )$/;"	f	typeref:typename:float16_t
ui64_to_f32	softfloat/ui64_to_f32.c	/^float32_t ui64_to_f32( uint64_t a )$/;"	f	typeref:typename:float32_t
ui64_to_f64	softfloat/ui64_to_f64.c	/^float64_t ui64_to_f64( uint64_t a )$/;"	f	typeref:typename:float64_t
ui8_fromNaN	softfloat/specialize.h	/^#define ui8_fromNaN /;"	d
ui8_fromNegOverflow	softfloat/specialize.h	/^#define ui8_fromNegOverflow /;"	d
ui8_fromPosOverflow	softfloat/specialize.h	/^#define ui8_fromPosOverflow /;"	d
uid	fesvr/syscall.cc	/^  uint32_t uid;$/;"	m	struct:riscv_stat	typeref:typename:uint32_t	file:
uint128	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v0, v64; };$/;"	s
uint128	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v64, v0; };$/;"	s
uint128_extra	softfloat/primitiveTypes.h	/^struct uint128_extra { struct uint128 v; uint64_t extra; };$/;"	s
uint128_extra	softfloat/primitiveTypes.h	/^struct uint128_extra { uint64_t extra; struct uint128 v; };$/;"	s
uint128_t	riscv/decode.h	/^typedef unsigned __int128 uint128_t;$/;"	t	typeref:typename:unsigned __int128
uint64_extra	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t extra, v; };$/;"	s
uint64_extra	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t v, extra; };$/;"	s
uint_max	riscv/insns/vnclipu_wi.h	/^uint64_t uint_max = UINT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:uint64_t
uint_max	riscv/insns/vnclipu_wv.h	/^uint64_t uint_max = UINT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:uint64_t
uint_max	riscv/insns/vnclipu_wx.h	/^uint64_t uint_max = UINT64_MAX >> (64 - P.VU.vsew);$/;"	v	typeref:typename:uint64_t
uj_imm	riscv/decode.h	/^  int64_t uj_imm() { return (x(21, 10) << 1) + (x(20, 1) << 11) + (x(12, 8) << 12) + (imm_sign()/;"	f	class:insn_t	typeref:typename:int64_t
unboxF16	riscv/decode.h	/^#define unboxF16(/;"	d
unboxF32	riscv/decode.h	/^#define unboxF32(/;"	d
unboxF64	riscv/decode.h	/^#define unboxF64(/;"	d
undo_chroot	fesvr/syscall.cc	/^std::string syscall_t::undo_chroot(const char* fn)$/;"	f	class:syscall_t	typeref:typename:std::string
unlikely	riscv/common.h	/^#define unlikely(/;"	d
unused_port	tests/testlib.py	/^def unused_port():$/;"	f
update_dr	riscv/jtag_dtm.cc	/^void jtag_dtm_t::update_dr()$/;"	f	class:jtag_dtm_t	typeref:typename:void
update_histogram	riscv/execute.cc	/^inline void processor_t::update_histogram(reg_t pc)$/;"	f	class:processor_t	typeref:typename:void
usage	fesvr/htif.cc	/^void htif_t::usage(const char * program_name)$/;"	f	class:htif_t	typeref:typename:void
use_first	riscv/insns/vfmerge_vfm.h	/^      bool use_first = (P.VU.elt<uint64_t>(0, midx) >> mpos) & 0x1;$/;"	v	typeref:typename:bool
use_ori	riscv/insns/viota_m.h	/^  bool use_ori = (insn.v_vm() == 0) && !do_mask;$/;"	v	typeref:typename:bool
user_data	riscv/devices.h	/^  void* user_data;$/;"	m	class:mmio_plugin_device_t	typeref:typename:void *
v	riscv/insns/bmator.h	/^uint8_t v[8]; \/\/ cols of rs2$/;"	v	typeref:typename:uint8_t[8]
v	riscv/insns/bmatxor.h	/^uint8_t v[8]; \/\/ cols of rs2$/;"	v	typeref:typename:uint8_t[8]
v	riscv/processor.h	/^  bool v;$/;"	m	struct:state_t	typeref:typename:bool
v	softfloat/primitiveTypes.h	/^struct uint128_extra { struct uint128 v; uint64_t extra; };$/;"	m	struct:uint128_extra	typeref:struct:uint128
v	softfloat/primitiveTypes.h	/^struct uint128_extra { uint64_t extra; struct uint128 v; };$/;"	m	struct:uint128_extra	typeref:struct:uint128
v	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t extra, v; };$/;"	m	struct:uint64_extra	typeref:typename:uint64_t
v	softfloat/primitiveTypes.h	/^struct uint64_extra { uint64_t v, extra; };$/;"	m	struct:uint64_extra	typeref:typename:uint64_t
v	softfloat/softfloat_types.h	/^typedef struct { uint16_t v; } float16_t;$/;"	m	struct:__anon9f490e620108	typeref:typename:uint16_t
v	softfloat/softfloat_types.h	/^typedef struct { uint32_t v; } float32_t;$/;"	m	struct:__anon9f490e620208	typeref:typename:uint32_t
v	softfloat/softfloat_types.h	/^typedef struct { uint64_t v; } float64_t;$/;"	m	struct:__anon9f490e620308	typeref:typename:uint64_t
v	softfloat/softfloat_types.h	/^typedef struct { uint64_t v[2]; } float128_t;$/;"	m	struct:__anon9f490e620408	typeref:typename:uint64_t[2]
v0	disasm/disasm.cc	/^} v0;$/;"	v	typeref:struct:__anon961b4d0a2d08
v0	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v0, v64; };$/;"	m	struct:uint128	typeref:typename:uint64_t
v0	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v64, v0; };$/;"	m	struct:uint128	typeref:typename:uint64_t
v64	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v0, v64; };$/;"	m	struct:uint128	typeref:typename:uint64_t
v64	softfloat/primitiveTypes.h	/^struct uint128 { uint64_t v64, v0; };$/;"	m	struct:uint128	typeref:typename:uint64_t
v_address	disasm/disasm.cc	/^} v_address;$/;"	v	typeref:struct:__anon961b4d0a2708
v_frac_lmul	riscv/decode.h	/^  uint64_t v_frac_lmul() { return x(22, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_lmul	riscv/decode.h	/^  uint64_t v_lmul() { return x(20, 2); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_lumop	riscv/decode.h	/^  uint64_t v_lumop() { return x(20, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_mew	riscv/decode.h	/^  uint64_t v_mew() { return x(28, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_mop	riscv/decode.h	/^  uint64_t v_mop() { return x(26, 2); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_nf	riscv/decode.h	/^  uint64_t v_nf() { return x(29, 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_sew	riscv/decode.h	/^  uint64_t v_sew() { return 1 << (x(23, 3) + 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_simm5	disasm/disasm.cc	/^} v_simm5;$/;"	v	typeref:struct:__anon961b4d0a2e08
v_simm5	riscv/decode.h	/^  uint64_t v_simm5() { return xs(15, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_sumop	riscv/decode.h	/^  uint64_t v_sumop() { return x(20, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_vm	riscv/decode.h	/^  uint64_t v_vm() { return x(25, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_vma	riscv/decode.h	/^  uint64_t v_vma() { return x(27, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_vta	riscv/decode.h	/^  uint64_t v_vta() { return x(26, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_vtype	disasm/disasm.cc	/^} v_vtype;$/;"	v	typeref:struct:__anon961b4d0a2f08
v_wd	riscv/decode.h	/^  uint64_t v_wd() { return x(26, 1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_width	riscv/decode.h	/^  uint64_t v_width() { return x(12, 3); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_zimm11	riscv/decode.h	/^  uint64_t v_zimm11() { return x(20, 11); }$/;"	f	class:insn_t	typeref:typename:uint64_t
v_zimm5	riscv/decode.h	/^  uint64_t v_zimm5() { return x(15, 5); }$/;"	f	class:insn_t	typeref:typename:uint64_t
validate_csr	riscv/decode.h	/^#define validate_csr(/;"	d
varch	riscv/riscv.ac	/^AC_ARG_WITH(varch,$/;"	w
vd	disasm/disasm.cc	/^} vd;$/;"	v	typeref:struct:__anon961b4d0a2808
vd	riscv/insns/vfmerge_vfm.h	/^      auto &vd = P.VU.elt<float16_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vfmerge_vfm.h	/^      auto &vd = P.VU.elt<float32_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vfmerge_vfm.h	/^      auto &vd = P.VU.elt<float64_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vfmv_v_f.h	/^      auto &vd = P.VU.elt<float16_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vfmv_v_f.h	/^      auto &vd = P.VU.elt<float32_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vfmv_v_f.h	/^      auto &vd = P.VU.elt<float64_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmsbf_m.h	/^    auto &vd = P.VU.elt<uint64_t>(rd_num, midx, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmsif_m.h	/^    auto &vd = P.VU.elt<uint64_t>(rd_num, midx, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmsof_m.h	/^    uint64_t &vd = P.VU.elt<uint64_t>(rd_num, midx, true);$/;"	v	typeref:typename:uint64_t &
vd	riscv/insns/vmulhsu_vv.h	/^  auto &vd = P.VU.elt<int16_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vv.h	/^  auto &vd = P.VU.elt<int32_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vv.h	/^  auto &vd = P.VU.elt<int64_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vv.h	/^  auto &vd = P.VU.elt<int8_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vx.h	/^  auto &vd = P.VU.elt<int16_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vx.h	/^  auto &vd = P.VU.elt<int32_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vx.h	/^  auto &vd = P.VU.elt<int64_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmulhsu_vx.h	/^  auto &vd = P.VU.elt<int8_t>(rd_num, i, true);$/;"	v	typeref:typename:auto &
vd	riscv/insns/vmvnfr_v.h	/^const reg_t vd = insn.rd();$/;"	v	typeref:typename:const reg_t
vectorUnit_t	riscv/processor.h	/^      vectorUnit_t(){$/;"	f	class:processor_t::vectorUnit_t
vectorUnit_t	riscv/processor.h	/^  class vectorUnit_t {$/;"	c	class:processor_t
vediv	riscv/processor.h	/^      reg_t vediv, vsew;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vemul	riscv/insns/vrgatherei16_vv.h	/^float vemul = (16.0 \/ P.VU.vsew * P.VU.vflmul);$/;"	v	typeref:typename:float
version	fdt/fdt.h	/^	fdt32_t version;		 \/* format version *\/$/;"	m	struct:fdt_header	typeref:typename:fdt32_t
version	riscv/debug_module.h	/^  unsigned version;$/;"	m	struct:__anon5c7e8f3d0308	typeref:typename:unsigned
version	riscv/debug_module.h	/^  unsigned version;$/;"	m	struct:__anon5c7e8f3d0608	typeref:typename:unsigned
vflmul	riscv/processor.h	/^      float vflmul;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:float
victimize	riscv/cachesim.cc	/^uint64_t cache_sim_t::victimize(uint64_t addr)$/;"	f	class:cache_sim_t	typeref:typename:uint64_t
victimize	riscv/cachesim.cc	/^uint64_t fa_cache_sim_t::victimize(uint64_t addr)$/;"	f	class:fa_cache_sim_t	typeref:typename:uint64_t
vill	riscv/processor.h	/^      bool vill;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:bool
vl	riscv/insns/vfirst_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vfmv_s_f.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vid_v.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/viota_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vmsbf_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vmsif_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vmsof_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vmv_s_x.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/insns/vpopc_m.h	/^reg_t vl = P.VU.vl;$/;"	v	typeref:typename:reg_t
vl	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vlenb	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vlmax	riscv/processor.h	/^      reg_t vlmax;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vm	disasm/disasm.cc	/^} vm;$/;"	v	typeref:struct:__anon961b4d0a2c08
vm_info	riscv/mmu.h	/^struct vm_info {$/;"	s
vma	riscv/processor.h	/^      reg_t vma, vta;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vr_name	disasm/regnames.cc	/^const char* vr_name[] = {$/;"	v	typeref:typename:const char * []
vs1	disasm/disasm.cc	/^} vs1;$/;"	v	typeref:struct:__anon961b4d0a2908
vs1	riscv/insns/vmulhsu_vv.h	/^  auto vs1 = P.VU.elt<uint16_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vmulhsu_vv.h	/^  auto vs1 = P.VU.elt<uint32_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vmulhsu_vv.h	/^  auto vs1 = P.VU.elt<uint64_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vmulhsu_vv.h	/^  auto vs1 = P.VU.elt<uint8_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vrgather_vv.h	/^    auto vs1 = P.VU.elt<uint16_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vrgather_vv.h	/^    auto vs1 = P.VU.elt<uint32_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vrgather_vv.h	/^    auto vs1 = P.VU.elt<uint64_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vrgather_vv.h	/^    auto vs1 = P.VU.elt<uint8_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs1	riscv/insns/vrgatherei16_vv.h	/^    auto vs1 = P.VU.elt<uint16_t>(rs1_num, i);$/;"	v	typeref:typename:auto
vs2	disasm/disasm.cc	/^} vs2;$/;"	v	typeref:struct:__anon961b4d0a2a08
vs2	riscv/insns/vfmerge_vfm.h	/^      auto vs2 = P.VU.elt<float16_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vfmerge_vfm.h	/^      auto vs2 = P.VU.elt<float32_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vfmerge_vfm.h	/^      auto vs2 = P.VU.elt<float64_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vv.h	/^  auto vs2 = P.VU.elt<int16_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vv.h	/^  auto vs2 = P.VU.elt<int32_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vv.h	/^  auto vs2 = P.VU.elt<int64_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vv.h	/^  auto vs2 = P.VU.elt<int8_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vx.h	/^  auto vs2 = P.VU.elt<int16_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vx.h	/^  auto vs2 = P.VU.elt<int32_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vx.h	/^  auto vs2 = P.VU.elt<int64_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmulhsu_vx.h	/^  auto vs2 = P.VU.elt<int8_t>(rs2_num, i);$/;"	v	typeref:typename:auto
vs2	riscv/insns/vmvnfr_v.h	/^const reg_t vs2 = insn.rs2();$/;"	v	typeref:typename:const reg_t
vs2_0	riscv/insns/vfmv_f_s.h	/^uint64_t vs2_0 = 0;$/;"	v	typeref:typename:uint64_t
vs2_lsb	riscv/insns/viota_m.h	/^  bool vs2_lsb = ((P.VU.elt<uint64_t>(rs2_num, midx) >> mpos) & 0x1) == 1;$/;"	v	typeref:typename:bool
vs2_lsb	riscv/insns/vmsbf_m.h	/^  bool vs2_lsb = ((P.VU.elt<uint64_t>(rs2_num, midx) >> mpos) & 0x1) == 1;$/;"	v	typeref:typename:bool
vs2_lsb	riscv/insns/vmsif_m.h	/^  bool vs2_lsb = ((P.VU.elt<uint64_t>(rs2_num, midx ) >> mpos) & 0x1) == 1;$/;"	v	typeref:typename:bool
vs2_lsb	riscv/insns/vmsof_m.h	/^  bool vs2_lsb = ((P.VU.elt<uint64_t>(rs2_num, midx ) >> mpos) & 0x1) == 1;$/;"	v	typeref:typename:bool
vs2_lsb	riscv/insns/vpopc_m.h	/^  bool vs2_lsb = ((P.VU.elt<uint32_t>(rs2_num, midx ) >> mpos) & 0x1) == 1;$/;"	v	typeref:typename:bool
vs3	disasm/disasm.cc	/^} vs3;$/;"	v	typeref:struct:__anon961b4d0a2b08
vsatp	riscv/processor.h	/^  reg_t vsatp;$/;"	m	struct:state_t	typeref:typename:reg_t
vscause	riscv/processor.h	/^  reg_t vscause;$/;"	m	struct:state_t	typeref:typename:reg_t
vsepc	riscv/processor.h	/^  reg_t vsepc;$/;"	m	struct:state_t	typeref:typename:reg_t
vsew	riscv/processor.h	/^      reg_t vediv, vsew;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vsext	riscv/decode.h	/^#define vsext(/;"	d
vsscratch	riscv/processor.h	/^  reg_t vsscratch;$/;"	m	struct:state_t	typeref:typename:reg_t
vsstatus	riscv/processor.h	/^  reg_t vsstatus;$/;"	m	struct:state_t	typeref:typename:reg_t
vstart	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vstart_alu	riscv/processor.h	/^      bool vstart_alu;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:bool
vstval	riscv/processor.h	/^  reg_t vstval;$/;"	m	struct:state_t	typeref:typename:reg_t
vstvec	riscv/processor.h	/^  reg_t vstvec;$/;"	m	struct:state_t	typeref:typename:reg_t
vta	riscv/processor.h	/^      reg_t vma, vta;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vtype	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vxrm	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vxsat	riscv/processor.h	/^      reg_t vstart, vxrm, vxsat, vl, vtype, vlenb;$/;"	m	class:processor_t::vectorUnit_t	typeref:typename:reg_t
vzext	riscv/decode.h	/^#define vzext(/;"	d
wait	tests/testlib.py	/^    def wait(self):$/;"	m	class:Gdb
wait	tests/testlib.py	/^    def wait(self, *args, **kwargs):$/;"	m	class:Spike
wait_for_interrupt_t	riscv/decode.h	/^class wait_for_interrupt_t {};$/;"	c
walk	riscv/mmu.cc	/^reg_t mmu_t::walk(reg_t addr, access_type type, reg_t mode, bool virt, bool mxr)$/;"	f	class:mmu_t	typeref:typename:reg_t
ways	riscv/cachesim.h	/^  size_t ways;$/;"	m	class:cache_sim_t	typeref:typename:size_t
wfi	riscv/decode.h	/^#define wfi(/;"	d
whereto	debug_rom/debug_rom.S	/^whereto:$/;"	l
which	riscv/trap.h	/^  reg_t which;$/;"	m	class:trap_t	typeref:typename:reg_t
widenbits	riscv/mmu.h	/^  int widenbits;$/;"	m	struct:vm_info	typeref:typename:int
width	fesvr/htif_hexwriter.h	/^  size_t width;$/;"	m	class:htif_hexwriter_t	typeref:typename:size_t
width	fesvr/rfb.h	/^  uint16_t width;$/;"	m	class:rfb_t	typeref:typename:uint16_t
wordIncr	softfloat/primitiveTypes.h	/^#define wordIncr /;"	d
wrapped_file	riscv/log_file.h	/^  std::unique_ptr<FILE, decltype(&fclose)> wrapped_file;$/;"	m	class:log_file_t	typeref:typename:std::unique_ptr<FILE,decltype (& fclose)>
wrapper	fesvr/context.cc	/^void context_t::wrapper(context_t* ctx)$/;"	f	class:context_t	typeref:typename:void
wrapper	fesvr/context.cc	/^void* context_t::wrapper(void* a)$/;"	f	class:context_t	typeref:typename:void *
write	fesvr/dtm.cc	/^uint32_t dtm_t::write(uint32_t addr, uint32_t data)$/;"	f	class:dtm_t	typeref:typename:uint32_t
write	fesvr/htif.cc	/^    void write(addr_t taddr, size_t len, const void* src) override$/;"	f	class:htif_t::load_payload::preload_aware_memif_t	typeref:typename:void	file:
write	fesvr/htif_pthread.cc	/^ssize_t htif_pthread_t::write(const void* buf, size_t size)$/;"	f	class:htif_pthread_t	typeref:typename:ssize_t
write	fesvr/memif.cc	/^void memif_t::write(addr_t addr, size_t len, const void* bytes)$/;"	f	class:memif_t	typeref:typename:void
write	fesvr/rfb.cc	/^void rfb_t::write(const std::string& s)$/;"	f	class:rfb_t	typeref:typename:void
write	fesvr/term.cc	/^void canonical_terminal_t::write(char ch)$/;"	f	class:canonical_terminal_t	typeref:typename:void
write	riscv/decode.h	/^  void write(size_t i, T value)$/;"	f	class:regfile_t	typeref:typename:void
write	riscv/insns/csrrc.h	/^bool write = insn.rs1() != 0;$/;"	v	typeref:typename:bool
write	riscv/insns/csrrci.h	/^bool write = insn.rs1() != 0;$/;"	v	typeref:typename:bool
write	riscv/insns/csrrs.h	/^bool write = insn.rs1() != 0;$/;"	v	typeref:typename:bool
write	riscv/insns/csrrsi.h	/^bool write = insn.rs1() != 0;$/;"	v	typeref:typename:bool
write32	riscv/debug_module.cc	/^void debug_module_t::write32(uint8_t *memory, unsigned int index, uint32_t value)$/;"	f	class:debug_module_t	typeref:typename:void
write_accesses	riscv/cachesim.h	/^  uint64_t write_accesses;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
write_chunk	fesvr/dtm.cc	/^void dtm_t::write_chunk(uint64_t taddr, size_t len, const void* src)$/;"	f	class:dtm_t	typeref:typename:void
write_chunk	fesvr/htif_hexwriter.cc	/^void htif_hexwriter_t::write_chunk(addr_t taddr, size_t len, const void* vsrc)$/;"	f	class:htif_hexwriter_t	typeref:typename:void
write_chunk	fesvr/tsi.cc	/^void tsi_t::write_chunk(addr_t taddr, size_t nbytes, const void* src)$/;"	f	class:tsi_t	typeref:typename:void
write_chunk	riscv/sim.cc	/^void sim_t::write_chunk(addr_t taddr, size_t len, const void* src)$/;"	f	class:sim_t	typeref:typename:void
write_csr	fesvr/dtm.cc	/^uint64_t dtm_t::write_csr(unsigned which, uint64_t data)$/;"	f	class:dtm_t	typeref:typename:uint64_t
write_csr	riscv/encoding.h	/^#define write_csr(/;"	d
write_int16	fesvr/memif.cc	/^void memif_t::write_int16(addr_t addr, int16_t val)$/;"	f	class:memif_t	typeref:typename:void
write_int32	fesvr/memif.cc	/^void memif_t::write_int32(addr_t addr, int32_t val)$/;"	f	class:memif_t	typeref:typename:void
write_int64	fesvr/memif.cc	/^void memif_t::write_int64(addr_t addr, int64_t val)$/;"	f	class:memif_t	typeref:typename:void
write_int8	fesvr/memif.cc	/^void memif_t::write_int8(addr_t addr, int8_t val)$/;"	f	class:memif_t	typeref:typename:void
write_misses	riscv/cachesim.h	/^  uint64_t write_misses;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
write_uint16	fesvr/memif.cc	/^void memif_t::write_uint16(addr_t addr, uint16_t val)$/;"	f	class:memif_t	typeref:typename:void
write_uint32	fesvr/memif.cc	/^void memif_t::write_uint32(addr_t addr, uint32_t val)$/;"	f	class:memif_t	typeref:typename:void
write_uint64	fesvr/memif.cc	/^void memif_t::write_uint64(addr_t addr, uint64_t val)$/;"	f	class:memif_t	typeref:typename:void
write_uint8	fesvr/memif.cc	/^void memif_t::write_uint8(addr_t addr, uint8_t val)$/;"	f	class:memif_t	typeref:typename:void
writebacks	riscv/cachesim.h	/^  uint64_t writebacks;$/;"	m	class:cache_sim_t	typeref:typename:uint64_t
writezeros	fesvr/htif.h	/^  bool writezeros;$/;"	m	class:htif_t	typeref:typename:bool
x	riscv/decode.h	/^  uint64_t x(int lo, int len) { return (b >> lo) & ((insn_bits_t(1) << len)-1); }$/;"	f	class:insn_t	typeref:typename:uint64_t
x	riscv/insns/bmatflip.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/bmator.h	/^uint64_t x = 0;$/;"	v	typeref:typename:uint64_t
x	riscv/insns/bmatxor.h	/^uint64_t x = 0;$/;"	v	typeref:typename:uint64_t
x	riscv/insns/clmul.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clmulh.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clmulhw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clmulr.h	/^reg_t a = zext_xlen(RS1), b = zext_xlen(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clmulrw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clmulw.h	/^reg_t a = zext32(RS1), b = zext32(RS2), x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clz.h	/^reg_t x = xlen;$/;"	v	typeref:typename:reg_t
x	riscv/insns/clzw.h	/^reg_t x = 32;$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32_b.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32_d.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32_h.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32_w.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32c_b.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32c_d.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32c_h.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/crc32c_w.h	/^reg_t x = zext_xlen(RS1);$/;"	v	typeref:typename:reg_t
x	riscv/insns/ctz.h	/^reg_t x = xlen;$/;"	v	typeref:typename:reg_t
x	riscv/insns/ctzw.h	/^reg_t x = 32;$/;"	v	typeref:typename:reg_t
x	riscv/insns/gorc.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/gorci.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/gorciw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/gorcw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/grev.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/grevi.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/greviw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/grevw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/pcnt.h	/^reg_t x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/pcntw.h	/^reg_t x = 0;$/;"	v	typeref:typename:reg_t
x	riscv/insns/shfl.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/shfli.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/shflw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/unshfl.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/unshfli.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	riscv/insns/unshflw.h	/^reg_t x = RS1;$/;"	v	typeref:typename:reg_t
x	tests/testlib.py	/^    def x(self, address, size='w'):$/;"	m	class:Gdb
x0	disasm/disasm.cc	/^} x0;$/;"	v	typeref:struct:__anon961b4d0a3008
xd	riscv/rocc.h	/^  unsigned xd : 1;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:1
xlen	fesvr/dtm.h	/^  uint32_t xlen;$/;"	m	class:dtm_t	typeref:typename:uint32_t
xlen	riscv/processor.h	/^  unsigned xlen;$/;"	m	class:processor_t	typeref:typename:unsigned
xlen_to_uxl	riscv/processor.cc	/^static int xlen_to_uxl(int xlen)$/;"	f	typeref:typename:int	file:
xmask	riscv/insns/vmv_x_s.h	/^uint64_t xmask = UINT64_MAX >> (64 - P.get_max_xlen());$/;"	v	typeref:typename:uint64_t
xori	riscv/opcodes.h	/^static uint32_t xori(unsigned int dest, unsigned int src, uint16_t imm)$/;"	f	typeref:typename:uint32_t
xpr_name	disasm/regnames.cc	/^const char* xpr_name[] = {$/;"	v	typeref:typename:const char * []
xrd	disasm/disasm.cc	/^} xrd;$/;"	v	typeref:struct:__anon961b4d0a0408
xrm	riscv/insns/vnclip_wi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vnclip_wv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vnclip_wx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vnclipu_wi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vnclipu_wv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vnclipu_wx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vsmul_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vsmul_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssra_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssra_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssra_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssrl_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssrl_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrm	riscv/insns/vssrl_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v	typeref:typename:VRM
xrs1	customext/cflush.cc	/^} xrs1;$/;"	v	typeref:struct:__anon1e23afd90108
xrs1	disasm/disasm.cc	/^} xrs1;$/;"	v	typeref:struct:__anon961b4d0a0508
xrs2	disasm/disasm.cc	/^} xrs2;$/;"	v	typeref:struct:__anon961b4d0a0608
xs	riscv/decode.h	/^  uint64_t xs(int lo, int len) { return int64_t(b) << (64-lo-len) >> (64-len); }$/;"	f	class:insn_t	typeref:typename:uint64_t
xs1	riscv/rocc.h	/^  unsigned xs1 : 1;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:1
xs2	riscv/rocc.h	/^  unsigned xs2 : 1;$/;"	m	struct:rocc_insn_t	typeref:typename:unsigned:1
zext32	riscv/decode.h	/^#define zext32(/;"	d
zext_xlen	riscv/decode.h	/^#define zext_xlen(/;"	d
zimm5	disasm/disasm.cc	/^} zimm5;$/;"	v	typeref:struct:__anon961b4d0a0f08
zimm5	riscv/insns/vrgather_vi.h	/^reg_t zimm5 = insn.v_zimm5();$/;"	v	typeref:typename:reg_t
~abstract_device_t	riscv/devices.h	/^  virtual ~abstract_device_t() {}$/;"	f	class:abstract_device_t
~arg_t	riscv/disasm.h	/^  virtual ~arg_t() {}$/;"	f	class:arg_t
~cache_memtracer_t	riscv/cachesim.h	/^  ~cache_memtracer_t()$/;"	f	class:cache_memtracer_t
~cache_sim_t	riscv/cachesim.cc	/^cache_sim_t::~cache_sim_t()$/;"	f	class:cache_sim_t
~canonical_termios_t	fesvr/term.cc	/^  ~canonical_termios_t()$/;"	f	class:canonical_termios_t	file:
~context_t	fesvr/context.cc	/^context_t::~context_t()$/;"	f	class:context_t
~debug_module_t	riscv/debug_module.cc	/^debug_module_t::~debug_module_t()$/;"	f	class:debug_module_t
~device_t	fesvr/device.h	/^  virtual ~device_t() {}$/;"	f	class:device_t
~disasm_insn_t	riscv/disasm.h	/^  ~disasm_insn_t() { free(const_cast<char *>(name)); }$/;"	f	class:disasm_insn_t
~disassembler_t	disasm/disasm.cc	/^disassembler_t::~disassembler_t()$/;"	f	class:disassembler_t
~disk_t	fesvr/device.cc	/^disk_t::~disk_t()$/;"	f	class:disk_t
~dtm_t	fesvr/dtm.cc	/^dtm_t::~dtm_t()$/;"	f	class:dtm_t
~extension_t	riscv/extension.cc	/^extension_t::~extension_t()$/;"	f	class:extension_t
~htif_pthread_t	fesvr/htif_pthread.cc	/^htif_pthread_t::~htif_pthread_t()$/;"	f	class:htif_pthread_t
~htif_t	fesvr/htif.cc	/^htif_t::~htif_t()$/;"	f	class:htif_t
~mem_t	riscv/devices.h	/^  ~mem_t() { free(data); }$/;"	f	class:mem_t
~memif_t	fesvr/memif.h	/^  virtual ~memif_t(){}$/;"	f	class:memif_t
~memtracer_t	riscv/memtracer.h	/^  virtual ~memtracer_t() {}$/;"	f	class:memtracer_t
~mmio_plugin_device_t	riscv/devices.cc	/^mmio_plugin_device_t::~mmio_plugin_device_t()$/;"	f	class:mmio_plugin_device_t
~mmu_t	riscv/mmu.cc	/^mmu_t::~mmu_t()$/;"	f	class:mmu_t
~processor_t	riscv/processor.cc	/^processor_t::~processor_t()$/;"	f	class:processor_t
~rfb_t	fesvr/rfb.cc	/^rfb_t::~rfb_t()$/;"	f	class:rfb_t
~sim_t	riscv/sim.cc	/^sim_t::~sim_t()$/;"	f	class:sim_t
~tsi_t	fesvr/tsi.cc	/^tsi_t::~tsi_t(void)$/;"	f	class:tsi_t
~vectorUnit_t	riscv/processor.h	/^      ~vectorUnit_t(){$/;"	f	class:processor_t::vectorUnit_t
